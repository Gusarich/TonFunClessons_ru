{
  "version": 3,
  "sources": ["../../symbol.inspect/index.ts", "../../ton-core/dist/utils/crc16.js", "../../ton-core/dist/address/Address.js", "../../ton-core/dist/address/ExternalAddress.js", "../../ton-core/dist/utils/base32.js", "../../ton-core/dist/address/ADNLAddress.js", "../../ton-core/dist/boc/utils/paddedBits.js", "../../ton-core/dist/boc/BitString.js", "../../ton-core/dist/boc/BitBuilder.js", "../../ton-core/dist/boc/CellType.js", "../../ton-core/dist/dict/parseDict.js", "../../ton-core/dist/dict/utils/findCommonPrefix.js", "../../ton-core/dist/dict/serializeDict.js", "../../ton-core/dist/dict/utils/internalKeySerializer.js", "../../ton-core/dist/dict/Dictionary.js", "../../ton-core/dist/boc/utils/strings.js", "../../ton-core/dist/boc/Slice.js", "../../ton-core/dist/boc/BitReader.js", "../../ton-core/dist/boc/cell/exoticLibrary.js", "../../ton-core/dist/boc/cell/exoticMerkleProof.js", "../../ton-core/dist/boc/cell/exoticMerkleUpdate.js", "../../ton-core/dist/boc/cell/LevelMask.js", "../../ton-core/dist/boc/cell/exoticPruned.js", "../../ton-core/dist/boc/cell/resolveExotic.js", "../../ton-core/dist/boc/cell/descriptor.js", "../../jssha/src/converters.ts", "../../jssha/src/common.ts", "../../jssha/node_modules/tslib/tslib.es6.js", "../../jssha/src/primitives_32.ts", "../../jssha/src/sha1.ts", "../../jssha/src/sha256.ts", "../../jssha/src/primitives_64.ts", "../../jssha/src/sha512.ts", "../../jssha/src/sha3.ts", "../../jssha/src/sha.ts", "../../ton-crypto-primitives/dist/browser/getSecureRandom.js", "../../ton-crypto-primitives/dist/browser/hmac_sha512.js", "../../ton-crypto-primitives/dist/browser/pbkdf2_sha512.js", "../../ton-crypto-primitives/dist/browser/sha256.js", "../../ton-crypto-primitives/dist/browser/sha512.js", "../../ton-crypto-primitives/dist/browser.js", "../../ton-crypto/dist/primitives/sha256.js", "../../ton-crypto/dist/primitives/sha512.js", "../../ton-crypto/dist/primitives/pbkdf2_sha512.js", "../../ton-crypto/dist/primitives/hmac_sha512.js", "../../ton-crypto/dist/primitives/getSecureRandom.js", "../../ton-crypto/dist/passwords/wordlist.js", "../../ton-crypto/dist/passwords/newSecureWords.js", "../../ton-crypto/dist/passwords/newSecurePassphrase.js", "../../ton-crypto/dist/utils/binary.js", "../../ton-crypto/dist/mnemonic/wordlist.js", "../../ton-crypto/dist/mnemonic/mnemonic.js", "../../ton-crypto/dist/primitives/nacl.js", "../../ton-crypto/dist/hd/ed25519.js", "../../ton-crypto/dist/hd/symmetric.js", "../../ton-crypto/dist/hd/mnemonics.js", "../../ton-crypto/dist/index.js", "../../ton-core/dist/boc/cell/wonderCalculator.js", "../../ton-core/dist/boc/cell/utils/topologicalSort.js", "../../ton-core/dist/utils/bitsForNumber.js", "../../ton-core/dist/utils/crc32c.js", "../../ton-core/dist/boc/cell/serialization.js", "../../ton-core/dist/boc/Cell.js", "../../ton-core/dist/boc/Builder.js", "../../ton-core/dist/types/SimpleLibrary.js", "../../ton-core/dist/types/TickTock.js", "../../ton-core/dist/types/StateInit.js", "../../ton-core/dist/address/contractAddress.js", "../../ton-core/dist/tuple/tuple.js", "../../ton-core/dist/tuple/reader.js", "../../ton-core/dist/tuple/builder.js", "../../ton-core/dist/utils/convert.js", "../../ton-core/dist/types/_helpers.js", "../../ton-core/dist/types/AccountState.js", "../../ton-core/dist/types/CurrencyCollection.js", "../../ton-core/dist/types/AccountStorage.js", "../../ton-core/dist/types/StorageUsed.js", "../../ton-core/dist/types/StorageInto.js", "../../ton-core/dist/types/Account.js", "../../ton-core/dist/types/AccountStatus.js", "../../ton-core/dist/types/AccountStatusChange.js", "../../ton-core/dist/types/CommonMessageInfo.js", "../../ton-core/dist/types/CommonMessageInfoRelaxed.js", "../../ton-core/dist/types/ComputeSkipReason.js", "../../ton-core/dist/types/DepthBalanceInfo.js", "../../ton-core/dist/types/HashUpdate.js", "../../ton-core/dist/types/MasterchainStateExtra.js", "../../ton-core/dist/types/Message.js", "../../ton-core/dist/types/MessageRelaxed.js", "../../ton-core/dist/types/SendMode.js", "../../ton-core/dist/types/ShardAccount.js", "../../ton-core/dist/types/ShardAccounts.js", "../../ton-core/dist/types/ShardIdent.js", "../../ton-core/dist/types/ShardStateUnsplit.js", "../../ton-core/dist/types/SplitMergeInfo.js", "../../ton-core/dist/types/StorageUsedShort.js", "../../ton-core/dist/types/TransactionActionPhase.js", "../../ton-core/dist/types/TransactionBouncePhase.js", "../../ton-core/dist/types/TransactionComputePhase.js", "../../ton-core/dist/types/TransactionCreditPhase.js", "../../ton-core/dist/types/TransactionStoragePhase.js", "../../ton-core/dist/types/TransactionDescription.js", "../../ton-core/dist/types/Transaction.js", "../../ton-core/dist/types/_export.js", "../../ton-core/dist/contract/openContract.js", "../../ton-core/dist/contract/ComputeError.js", "../../ton-core/dist/utils/getMethodId.js", "../../ton-core/dist/crypto/safeSign.js", "../../ton-core/dist/index.js", "../../fp-ts/es6/function.js", "../../fp-ts/es6/internal.js", "../../fp-ts/es6/Apply.js", "../../fp-ts/es6/Functor.js", "../../fp-ts/es6/Applicative.js", "../../fp-ts/es6/Chain.js", "../../fp-ts/es6/ChainRec.js", "../../fp-ts/es6/FromEither.js", "../../fp-ts/es6/Separated.js", "../../fp-ts/es6/Witherable.js", "../../fp-ts/es6/Either.js", "../../io-ts/es6/index.js", "../../fp-ts/lib/function.js", "../../fp-ts/lib/internal.js", "../../fp-ts/lib/Apply.js", "../../fp-ts/lib/Functor.js", "../../fp-ts/lib/Applicative.js", "../../fp-ts/lib/Chain.js", "../../fp-ts/lib/ChainRec.js", "../../fp-ts/lib/FromEither.js", "../../fp-ts/lib/Separated.js", "../../fp-ts/lib/Witherable.js", "../../fp-ts/lib/Either.js", "../../fp-ts/es6/Eq.js", "../../fp-ts/es6/Ord.js", "../../fp-ts/es6/Magma.js", "../../fp-ts/es6/Semigroup.js", "../../fp-ts/es6/ReadonlyNonEmptyArray.js", "../../fp-ts/es6/NonEmptyArray.js", "../../fp-ts/es6/number.js", "../../fp-ts/es6/Zero.js", "../../fp-ts/es6/ReadonlyArray.js", "../../fp-ts/es6/Array.js", "../../fp-ts/es6/Predicate.js", "../../fp-ts/es6/Option.js", "../../fp-ts/es6/string.js", "../../fp-ts/es6/ReadonlyRecord.js", "../../fp-ts/es6/Record.js", "../../fp-ts/es6/pipeable.js", "../../io-ts-reporters/src/utils.ts", "../../io-ts-reporters/src/index.ts", "../../ton/dist/client/api/TonCache.js", "../../dataloader/index.js", "../../axios/lib/helpers/bind.js", "../../axios/lib/utils.js", "../../axios/lib/helpers/buildURL.js", "../../axios/lib/core/InterceptorManager.js", "../../axios/lib/helpers/normalizeHeaderName.js", "../../axios/lib/core/enhanceError.js", "../../axios/lib/core/createError.js", "../../axios/lib/core/settle.js", "../../axios/lib/helpers/cookies.js", "../../axios/lib/helpers/isAbsoluteURL.js", "../../axios/lib/helpers/combineURLs.js", "../../axios/lib/core/buildFullPath.js", "../../axios/lib/helpers/parseHeaders.js", "../../axios/lib/helpers/isURLSameOrigin.js", "../../axios/lib/cancel/Cancel.js", "../../axios/lib/adapters/xhr.js", "../../axios/lib/defaults.js", "../../axios/lib/core/transformData.js", "../../axios/lib/cancel/isCancel.js", "../../axios/lib/core/dispatchRequest.js", "../../axios/lib/core/mergeConfig.js", "../../axios/lib/env/data.js", "../../axios/lib/helpers/validator.js", "../../axios/lib/core/Axios.js", "../../axios/lib/cancel/CancelToken.js", "../../axios/lib/helpers/spread.js", "../../axios/lib/helpers/isAxiosError.js", "../../axios/lib/axios.js", "../../axios/index.js", "../../ton/package.json", "../../ton/dist/client/api/HttpApi.js", "../../ton/dist/client/TonClient.js", "../../ton/dist/utils/toUrlSafe.js", "../../ton/dist/client/TonClient4.js", "../../ton/dist/wallets/signing/createWalletTransfer.js", "../../ton/dist/wallets/WalletContractV1R1.js", "../../ton/dist/wallets/WalletContractV1R2.js", "../../ton/dist/wallets/WalletContractV1R3.js", "../../ton/dist/wallets/WalletContractV2R1.js", "../../ton/dist/wallets/WalletContractV2R2.js", "../../ton/dist/wallets/WalletContractV3R1.js", "../../ton/dist/wallets/WalletContractV3R2.js", "../../ton/dist/wallets/WalletContractV4.js", "../../ton/dist/jetton/JettonMaster.js", "../../ton/dist/jetton/JettonWallet.js", "../../ton/dist/multisig/MultisigOrder.js", "../../ton/dist/multisig/MultisigOrderBuilder.js", "../../ton/dist/multisig/MultisigWallet.js", "../../ton/dist/index.js"],
  "sourcesContent": ["/**\n * <symbol> that can be used to declare custom inspect functions.\n *\n * same as Symbol.for('nodejs.util.inspect.custom')\n * same as util.inspect.custom\n */\nconst SymbolInspect = Symbol.for('nodejs.util.inspect.custom');\nexport = SymbolInspect;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crc16 = void 0;\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = Buffer.alloc(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1;\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return Buffer.from([Math.floor(reg / 256), reg % 256]);\n}\nexports.crc16 = crc16;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.address = exports.Address = void 0;\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nconst crc16_1 = require(\"../utils/crc16\");\nconst bounceable_tag = 0x11;\nconst non_bounceable_tag = 0x51;\nconst test_flag = 0x80;\nfunction parseFriendlyAddress(src) {\n    const data = Buffer.isBuffer(src) ? src : Buffer.from(src, 'base64');\n    // 1byte tag + 1byte workchain + 32 bytes hash + 2 byte crc\n    if (data.length !== 36) {\n        throw new Error('Unknown address type: byte length is not equal to 36');\n    }\n    // Prepare data\n    const addr = data.subarray(0, 34);\n    const crc = data.subarray(34, 36);\n    const calcedCrc = (0, crc16_1.crc16)(addr);\n    if (!(calcedCrc[0] === crc[0] && calcedCrc[1] === crc[1])) {\n        throw new Error('Invalid checksum: ' + src);\n    }\n    // Parse tag\n    let tag = addr[0];\n    let isTestOnly = false;\n    let isBounceable = false;\n    if (tag & test_flag) {\n        isTestOnly = true;\n        tag = tag ^ test_flag;\n    }\n    if ((tag !== bounceable_tag) && (tag !== non_bounceable_tag))\n        throw \"Unknown address tag\";\n    isBounceable = tag === bounceable_tag;\n    let workchain = null;\n    if (addr[1] === 0xff) { // TODO we should read signed integer here\n        workchain = -1;\n    }\n    else {\n        workchain = addr[1];\n    }\n    const hashPart = addr.subarray(2, 34);\n    return { isTestOnly, isBounceable, workchain, hashPart };\n}\nclass Address {\n    static isAddress(src) {\n        return src instanceof Address;\n    }\n    static isFriendly(source) {\n        return source.indexOf(':') < 0;\n    }\n    static normalize(source) {\n        if (typeof source === 'string') {\n            return Address.parse(source).toString();\n        }\n        else {\n            return source.toString();\n        }\n    }\n    static parse(source) {\n        if (Address.isFriendly(source)) {\n            return this.parseFriendly(source).address;\n        }\n        else {\n            return this.parseRaw(source);\n        }\n    }\n    static parseRaw(source) {\n        let workChain = parseInt(source.split(\":\")[0]);\n        let hash = Buffer.from(source.split(\":\")[1], 'hex');\n        return new Address(workChain, hash);\n    }\n    static parseFriendly(source) {\n        if (Buffer.isBuffer(source)) {\n            let r = parseFriendlyAddress(source);\n            return {\n                isBounceable: r.isBounceable,\n                isTestOnly: r.isTestOnly,\n                address: new Address(r.workchain, r.hashPart)\n            };\n        }\n        else {\n            let addr = source.replace(/\\-/g, '+').replace(/_/g, '\\/'); // Convert from url-friendly to true base64\n            let r = parseFriendlyAddress(addr);\n            return {\n                isBounceable: r.isBounceable,\n                isTestOnly: r.isTestOnly,\n                address: new Address(r.workchain, r.hashPart)\n            };\n        }\n    }\n    constructor(workChain, hash) {\n        this.toRawString = () => {\n            return this.workChain + ':' + this.hash.toString('hex');\n        };\n        this.toRaw = () => {\n            const addressWithChecksum = Buffer.alloc(36);\n            addressWithChecksum.set(this.hash);\n            addressWithChecksum.set([this.workChain, this.workChain, this.workChain, this.workChain], 32);\n            return addressWithChecksum;\n        };\n        this.toStringBuffer = (args) => {\n            let testOnly = (args && args.testOnly !== undefined) ? args.testOnly : false;\n            let bounceable = (args && args.bounceable !== undefined) ? args.bounceable : true;\n            let tag = bounceable ? bounceable_tag : non_bounceable_tag;\n            if (testOnly) {\n                tag |= test_flag;\n            }\n            const addr = Buffer.alloc(34);\n            addr[0] = tag;\n            addr[1] = this.workChain;\n            addr.set(this.hash, 2);\n            const addressWithChecksum = Buffer.alloc(36);\n            addressWithChecksum.set(addr);\n            addressWithChecksum.set((0, crc16_1.crc16)(addr), 34);\n            return addressWithChecksum;\n        };\n        this.toString = (args) => {\n            let urlSafe = (args && args.urlSafe !== undefined) ? args.urlSafe : true;\n            let buffer = this.toStringBuffer(args);\n            if (urlSafe) {\n                return buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_');\n            }\n            else {\n                return buffer.toString('base64');\n            }\n        };\n        this[_a] = () => this.toString();\n        this.workChain = workChain;\n        this.hash = hash;\n        Object.freeze(this);\n    }\n    equals(src) {\n        if (src.workChain !== this.workChain) {\n            return false;\n        }\n        return src.hash.equals(this.hash);\n    }\n}\nexports.Address = Address;\n_a = symbol_inspect_1.default;\nfunction address(src) {\n    return Address.parse(src);\n}\nexports.address = address;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExternalAddress = void 0;\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nclass ExternalAddress {\n    static isAddress(src) {\n        return src instanceof ExternalAddress;\n    }\n    constructor(value, bits) {\n        this[_a] = () => this.toString();\n        this.value = value;\n        this.bits = bits;\n    }\n    toString() {\n        return `External<${this.bits}:${this.value}>`;\n    }\n}\nexports.ExternalAddress = ExternalAddress;\n_a = symbol_inspect_1.default;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base32Decode = exports.base32Encode = void 0;\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\nfunction base32Encode(buffer) {\n    const length = buffer.byteLength;\n    let bits = 0;\n    let value = 0;\n    let output = '';\n    for (let i = 0; i < length; i++) {\n        value = (value << 8) | buffer[i];\n        bits += 8;\n        while (bits >= 5) {\n            output += alphabet[(value >>> (bits - 5)) & 31];\n            bits -= 5;\n        }\n    }\n    if (bits > 0) {\n        output += alphabet[(value << (5 - bits)) & 31];\n    }\n    return output;\n}\nexports.base32Encode = base32Encode;\nfunction readChar(alphabet, char) {\n    const idx = alphabet.indexOf(char);\n    if (idx === -1) {\n        throw new Error('Invalid character found: ' + char);\n    }\n    return idx;\n}\nfunction base32Decode(input) {\n    let cleanedInput;\n    cleanedInput = input.toLowerCase();\n    const { length } = cleanedInput;\n    let bits = 0;\n    let value = 0;\n    let index = 0;\n    const output = Buffer.alloc(((length * 5) / 8) | 0);\n    for (let i = 0; i < length; i++) {\n        value = (value << 5) | readChar(alphabet, cleanedInput[i]);\n        bits += 5;\n        if (bits >= 8) {\n            output[index++] = (value >>> (bits - 8)) & 255;\n            bits -= 8;\n        }\n    }\n    return output;\n}\nexports.base32Decode = base32Decode;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ADNLAddress = void 0;\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nconst base32_1 = require(\"../utils/base32\");\nconst crc16_1 = require(\"../utils/crc16\");\nclass ADNLAddress {\n    static parseFriendly(src) {\n        if (src.length !== 55) {\n            throw Error('Invalid address');\n        }\n        // Decoding\n        src = 'f' + src;\n        let decoded = (0, base32_1.base32Decode)(src);\n        if (decoded[0] !== 0x2d) {\n            throw Error('Invalid address');\n        }\n        let gotHash = decoded.slice(33);\n        let hash = (0, crc16_1.crc16)(decoded.slice(0, 33));\n        if (!hash.equals(gotHash)) {\n            throw Error('Invalid address');\n        }\n        return new ADNLAddress(decoded.slice(1, 33));\n    }\n    static parseRaw(src) {\n        const data = Buffer.from(src, 'base64');\n        return new ADNLAddress(data);\n    }\n    constructor(address) {\n        this.toRaw = () => {\n            return this.address.toString('hex').toUpperCase();\n        };\n        this.toString = () => {\n            let data = Buffer.concat([Buffer.from([0x2D]), this.address]);\n            let hash = (0, crc16_1.crc16)(data);\n            data = Buffer.concat([data, hash]);\n            return (0, base32_1.base32Encode)(data).slice(1);\n        };\n        this[_a] = () => this.toString();\n        if (address.length !== 32) {\n            throw Error('Invalid address');\n        }\n        this.address = address;\n    }\n    equals(b) {\n        return this.address.equals(b.address);\n    }\n}\nexports.ADNLAddress = ADNLAddress;\n_a = symbol_inspect_1.default;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitsToPaddedBuffer = void 0;\nconst BitBuilder_1 = require(\"../BitBuilder\");\nfunction bitsToPaddedBuffer(bits) {\n    // Create builder\n    let builder = new BitBuilder_1.BitBuilder(Math.ceil(bits.length / 8) * 8);\n    builder.writeBits(bits);\n    // Apply padding\n    let padding = Math.ceil(bits.length / 8) * 8 - bits.length;\n    for (let i = 0; i < padding; i++) {\n        if (i === 0) {\n            builder.writeBit(1);\n        }\n        else {\n            builder.writeBit(0);\n        }\n    }\n    return builder.buffer();\n}\nexports.bitsToPaddedBuffer = bitsToPaddedBuffer;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitString = void 0;\nconst paddedBits_1 = require(\"./utils/paddedBits\");\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\n/**\n * BitString is a class that represents a bitstring in a buffer with a specified offset and length\n */\nclass BitString {\n    /**\n     * Constructing BitString from a buffer\n     * @param data data that contains the bitstring data. NOTE: We are expecting this buffer to be NOT modified\n     * @param offset offset in bits from the start of the buffer\n     * @param length length of the bitstring in bits\n     */\n    constructor(data, offset, length) {\n        this[_a] = () => this.toString();\n        // Check bounds\n        if (length < 0) {\n            throw new Error(`Length ${length} is out of bounds`);\n        }\n        this._length = length;\n        this._data = data;\n        this._offset = offset;\n    }\n    /**\n     * Returns the length of the bitstring\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * Returns the bit at the specified index\n     * @param index index of the bit\n     * @throws Error if index is out of bounds\n     * @returns true if the bit is set, false otherwise\n     */\n    at(index) {\n        // Check bounds\n        if (index >= this._length) {\n            throw new Error(`Index ${index} > ${this._length} is out of bounds`);\n        }\n        if (index < 0) {\n            throw new Error(`Index ${index} < 0 is out of bounds`);\n        }\n        // Calculcate offsets\n        let byteIndex = (this._offset + index) >> 3;\n        let bitIndex = 7 - ((this._offset + index) % 8); // NOTE: We are using big endian\n        // Return the bit\n        return (this._data[byteIndex] & (1 << bitIndex)) !== 0;\n    }\n    /**\n     * Get a subscring of the bitstring\n     * @param offset\n     * @param length\n     * @returns\n     */\n    substring(offset, length) {\n        // Corner case of empty string\n        if (length === 0 && offset === this._length) {\n            return BitString.EMPTY;\n        }\n        // Check offset\n        if (offset >= this._length) {\n            throw new Error(`Offset(${offset}) > ${this._length} is out of bounds`);\n        }\n        if (offset < 0) {\n            throw new Error(`Offset(${offset}) < 0 is out of bounds`);\n        }\n        if (offset + length > this._length) {\n            throw new Error(`Offset ${offset} + Length ${length} > ${this._length} is out of bounds`);\n        }\n        // Create substring\n        return new BitString(this._data, this._offset + offset, length);\n    }\n    /**\n     * Try to get a buffer from the bitstring without allocations\n     * @param offset offset in bits\n     * @param length length in bits\n     * @returns buffer if the bitstring is aligned to bytes, null otherwise\n     */\n    subbuffer(offset, length) {\n        // Check offset\n        if (offset >= this._length) {\n            throw new Error(`Offset ${offset} is out of bounds`);\n        }\n        if (offset < 0) {\n            throw new Error(`Offset ${offset} is out of bounds`);\n        }\n        if (offset + length > this._length) {\n            throw new Error(`Offset + Lenght = ${offset + length} is out of bounds`);\n        }\n        // Check alignment\n        if (length % 8 !== 0) {\n            return null;\n        }\n        if ((this._offset + offset) % 8 !== 0) {\n            return null;\n        }\n        // Create substring\n        let start = ((this._offset + offset) >> 3);\n        let end = start + (length >> 3);\n        return this._data.subarray(start, end);\n    }\n    /**\n     * Checks for equality\n     * @param b other bitstring\n     * @returns true if the bitstrings are equal, false otherwise\n     */\n    equals(b) {\n        if (this._length !== b._length) {\n            return false;\n        }\n        for (let i = 0; i < this._length; i++) {\n            if (this.at(i) !== b.at(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Format to canonical string\n     * @returns formatted bits as a string\n     */\n    toString() {\n        const padded = (0, paddedBits_1.bitsToPaddedBuffer)(this);\n        if (this._length % 4 === 0) {\n            const s = padded.subarray(0, Math.ceil(this._length / 8)).toString('hex').toUpperCase();\n            if (this._length % 8 === 0) {\n                return s;\n            }\n            else {\n                return s.substring(0, s.length - 1);\n            }\n        }\n        else {\n            const hex = padded.toString('hex').toUpperCase();\n            if (this._length % 8 <= 4) {\n                return hex.substring(0, hex.length - 1) + '_';\n            }\n            else {\n                return hex + '_';\n            }\n        }\n    }\n}\nexports.BitString = BitString;\n_a = symbol_inspect_1.default;\nBitString.EMPTY = new BitString(Buffer.alloc(0), 0, 0);\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitBuilder = void 0;\nconst Address_1 = require(\"../address/Address\");\nconst ExternalAddress_1 = require(\"../address/ExternalAddress\");\nconst BitString_1 = require(\"./BitString\");\n/**\n * Class for building bit strings\n */\nclass BitBuilder {\n    constructor(size = 1023) {\n        this._buffer = Buffer.alloc(Math.ceil(size / 8));\n        this._length = 0;\n    }\n    /**\n     * Current number of bits written\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * Write a single bit\n     * @param value bit to write, true or positive number for 1, false or zero or negative for 0\n     */\n    writeBit(value) {\n        // Check overflow\n        let n = this._length;\n        if (n > this._buffer.length * 8) {\n            throw new Error(\"BitBuilder overflow\");\n        }\n        // Set bit\n        if (value === true || value > 0) {\n            this._buffer[(n / 8) | 0] |= 1 << (7 - (n % 8));\n        }\n        // Advance\n        this._length++;\n    }\n    /**\n     * Copy bits from BitString\n     * @param src source bits\n     */\n    writeBits(src) {\n        for (let i = 0; i < src.length; i++) {\n            this.writeBit(src.at(i));\n        }\n    }\n    /**\n     * Write bits from buffer\n     * @param src source buffer\n     */\n    writeBuffer(src) {\n        // Special case for aligned offsets\n        if (this._length % 8 === 0) {\n            if (this._length + src.length * 8 > this._buffer.length * 8) {\n                throw new Error(\"BitBuilder overflow\");\n            }\n            src.copy(this._buffer, this._length / 8);\n            this._length += src.length * 8;\n        }\n        else {\n            for (let i = 0; i < src.length; i++) {\n                this.writeUint(src[i], 8);\n            }\n        }\n    }\n    /**\n     * Write uint value\n     * @param value value as bigint or number\n     * @param bits number of bits to write\n     */\n    writeUint(value, bits) {\n        // Special case for 8 bits\n        if (bits === 8 && this._length % 8 === 0) {\n            let v = Number(value);\n            if (v < 0 || v > 255 || !Number.isSafeInteger(v)) {\n                throw Error(`value is out of range for ${bits} bits. Got ${value}`);\n            }\n            this._buffer[this._length / 8] = Number(value);\n            this._length += 8;\n            return;\n        }\n        // Special case for 16 bits\n        if (bits === 16 && this._length % 8 === 0) {\n            let v = Number(value);\n            if (v < 0 || v > 65536 || !Number.isSafeInteger(v)) {\n                throw Error(`value is out of range for ${bits} bits. Got ${value}`);\n            }\n            this._buffer[this._length / 8] = v >> 8;\n            this._buffer[this._length / 8 + 1] = v & 0xff;\n            this._length += 16;\n            return;\n        }\n        // Generic case\n        let v = BigInt(value);\n        if (bits < 0 || !Number.isSafeInteger(bits)) {\n            throw Error(`invalid bit length. Got ${bits}`);\n        }\n        // Corner case for zero bits\n        if (bits === 0) {\n            if (value !== 0n) {\n                throw Error(`value is not zero for ${bits} bits. Got ${value}`);\n            }\n            else {\n                return;\n            }\n        }\n        // Check input\n        let vBits = (1n << BigInt(bits));\n        if (v < 0 || v >= vBits) {\n            throw Error(`bitLength is too small for a value ${value}. Got ${bits}`);\n        }\n        // Convert number to bits\n        let b = [];\n        while (v > 0) {\n            b.push(v % 2n === 1n);\n            v /= 2n;\n        }\n        // Write bits\n        for (let i = 0; i < bits; i++) {\n            let off = bits - i - 1;\n            if (off < b.length) {\n                this.writeBit(b[off]);\n            }\n            else {\n                this.writeBit(false);\n            }\n        }\n    }\n    /**\n     * Write int value\n     * @param value value as bigint or number\n     * @param bits number of bits to write\n     */\n    writeInt(value, bits) {\n        let v = BigInt(value);\n        if (bits < 0 || !Number.isSafeInteger(bits)) {\n            throw Error(`invalid bit length. Got ${bits}`);\n        }\n        // Corner case for zero bits\n        if (bits === 0) {\n            if (value !== 0n) {\n                throw Error(`value is not zero for ${bits} bits. Got ${value}`);\n            }\n            else {\n                return;\n            }\n        }\n        // Corner case for one bit\n        if (bits === 1) {\n            if (value !== -1n && value !== 0n) {\n                throw Error(`value is not zero or -1 for ${bits} bits. Got ${value}`);\n            }\n            else {\n                this.writeBit(value === -1n);\n                return;\n            }\n        }\n        // Check input\n        let vBits = 1n << (BigInt(bits) - 1n);\n        if (v < -vBits || v >= vBits) {\n            throw Error(`value is out of range for ${bits} bits. Got ${value}`);\n        }\n        // Write sign\n        if (v < 0) {\n            this.writeBit(true);\n            v = (1n << (BigInt(bits) - 1n)) + v;\n        }\n        else {\n            this.writeBit(false);\n        }\n        // Write value\n        this.writeUint(v, bits - 1);\n    }\n    /**\n     * Wrtie var uint value, used for serializing coins\n     * @param value value to write as bigint or number\n     * @param bits header bits to write size\n     */\n    writeVarUint(value, bits) {\n        let v = BigInt(value);\n        if (bits < 0 || !Number.isSafeInteger(bits)) {\n            throw Error(`invalid bit length. Got ${bits}`);\n        }\n        if (v < 0) {\n            throw Error(`value is negative. Got ${value}`);\n        }\n        // Corner case for zero\n        if (v === 0n) {\n            // Write zero size\n            this.writeUint(0, bits);\n            return;\n        }\n        // Calculate size\n        const sizeBytes = Math.ceil((v.toString(2).length) / 8); // Fastest way in most environments\n        const sizeBits = sizeBytes * 8;\n        // Write size\n        this.writeUint(sizeBytes, bits);\n        // Write number\n        this.writeUint(v, sizeBits);\n    }\n    /**\n     * Wrtie var int value, used for serializing coins\n     * @param value value to write as bigint or number\n     * @param bits header bits to write size\n     */\n    writeVarInt(value, bits) {\n        let v = BigInt(value);\n        if (bits < 0 || !Number.isSafeInteger(bits)) {\n            throw Error(`invalid bit length. Got ${bits}`);\n        }\n        // Corner case for zero\n        if (v === 0n) {\n            // Write zero size\n            this.writeUint(0, bits);\n            return;\n        }\n        // Calculate size\n        let v2 = v > 0 ? v : -v;\n        const sizeBytes = 1 + Math.ceil((v2.toString(2).length) / 8); // Fastest way in most environments\n        const sizeBits = sizeBytes * 8;\n        // Write size\n        this.writeUint(sizeBytes, bits);\n        // Write number\n        this.writeInt(v, sizeBits);\n    }\n    /**\n     * Write coins in var uint format\n     * @param amount amount to write\n     */\n    writeCoins(amount) {\n        this.writeVarUint(amount, 4);\n    }\n    /**\n     * Write address\n     * @param address write address or address external\n     */\n    writeAddress(address) {\n        // Is empty address\n        if (address === null || address === undefined) {\n            this.writeUint(0, 2); // Empty address\n            return;\n        }\n        // Is Internal Address\n        if (Address_1.Address.isAddress(address)) {\n            this.writeUint(2, 2); // Internal address\n            this.writeUint(0, 1); // No anycast\n            this.writeInt(address.workChain, 8);\n            this.writeBuffer(address.hash);\n            return;\n        }\n        // Is External Address\n        if (ExternalAddress_1.ExternalAddress.isAddress(address)) {\n            this.writeUint(1, 2); // External address\n            this.writeUint(address.bits, 9);\n            this.writeUint(address.value, address.bits);\n            return;\n        }\n        // Invalid address\n        throw Error(`Invalid address. Got ${address}`);\n    }\n    /**\n     * Build BitString\n     * @returns result bit string\n     */\n    build() {\n        return new BitString_1.BitString(this._buffer, 0, this._length);\n    }\n    /**\n     * Build into Buffer\n     * @returns result buffer\n     */\n    buffer() {\n        if (this._length % 8 !== 0) {\n            throw new Error(\"BitBuilder buffer is not byte aligned\");\n        }\n        return this._buffer.subarray(0, this._length / 8);\n    }\n}\nexports.BitBuilder = BitBuilder;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CellType = void 0;\nvar CellType;\n(function (CellType) {\n    CellType[CellType[\"Ordinary\"] = -1] = \"Ordinary\";\n    CellType[CellType[\"PrunedBranch\"] = 1] = \"PrunedBranch\";\n    CellType[CellType[\"Library\"] = 2] = \"Library\";\n    CellType[CellType[\"MerkleProof\"] = 3] = \"MerkleProof\";\n    CellType[CellType[\"MerkleUpdate\"] = 4] = \"MerkleUpdate\";\n})(CellType = exports.CellType || (exports.CellType = {}));\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDict = void 0;\nfunction readUnaryLength(slice) {\n    let res = 0;\n    while (slice.loadBit()) {\n        res++;\n    }\n    return res;\n}\nfunction doParse(prefix, slice, n, res, extractor) {\n    // Reading label\n    let lb0 = slice.loadBit() ? 1 : 0;\n    let prefixLength = 0;\n    let pp = prefix;\n    if (lb0 === 0) {\n        // Short label detected\n        // Read \n        prefixLength = readUnaryLength(slice);\n        // Read prefix\n        for (let i = 0; i < prefixLength; i++) {\n            pp += slice.loadBit() ? '1' : '0';\n        }\n    }\n    else {\n        let lb1 = slice.loadBit() ? 1 : 0;\n        if (lb1 === 0) {\n            // Long label detected\n            prefixLength = slice.loadUint(Math.ceil(Math.log2(n + 1)));\n            for (let i = 0; i < prefixLength; i++) {\n                pp += slice.loadBit() ? '1' : '0';\n            }\n        }\n        else {\n            // Same label detected\n            let bit = slice.loadBit() ? '1' : '0';\n            prefixLength = slice.loadUint(Math.ceil(Math.log2(n + 1)));\n            for (let i = 0; i < prefixLength; i++) {\n                pp += bit;\n            }\n        }\n    }\n    if (n - prefixLength === 0) {\n        res.set(BigInt('0b' + pp), extractor(slice));\n    }\n    else {\n        let left = slice.loadRef();\n        let right = slice.loadRef();\n        // NOTE: Left and right branches are implicitly contain prefixes '0' and '1'\n        if (!left.isExotic) {\n            doParse(pp + '0', left.beginParse(), n - prefixLength - 1, res, extractor);\n        }\n        if (!right.isExotic) {\n            doParse(pp + '1', right.beginParse(), n - prefixLength - 1, res, extractor);\n        }\n    }\n}\nfunction parseDict(sc, keySize, extractor) {\n    let res = new Map();\n    if (sc) {\n        doParse('', sc, keySize, res, extractor);\n    }\n    return res;\n}\nexports.parseDict = parseDict;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findCommonPrefix = void 0;\nfunction findCommonPrefix(src) {\n    // Corner cases\n    if (src.length === 0) {\n        return '';\n    }\n    if (src.length === 1) {\n        return src[0];\n    }\n    // Searching for prefix\n    const sorted = [...src].sort();\n    let size = 0;\n    for (let i = 0; i < sorted[0].length; i++) {\n        if (sorted[0][i] !== sorted[sorted.length - 1][i]) {\n            break;\n        }\n        size++;\n    }\n    return src[0].slice(0, size);\n}\nexports.findCommonPrefix = findCommonPrefix;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeDict = exports.detectLabelType = exports.writeLabelSame = exports.writeLabelLong = exports.writeLabelShort = exports.buildTree = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst findCommonPrefix_1 = require(\"./utils/findCommonPrefix\");\n//\n// Tree Build\n//\nfunction pad(src, size) {\n    while (src.length < size) {\n        src = '0' + src;\n    }\n    return src;\n}\nfunction removePrefixMap(src, length) {\n    if (length === 0) {\n        return src;\n    }\n    else {\n        let res = new Map();\n        for (let k of src.keys()) {\n            let d = src.get(k);\n            res.set(k.slice(length), d);\n        }\n        return res;\n    }\n}\nfunction forkMap(src) {\n    if (src.size === 0) {\n        throw Error('Internal inconsistency');\n    }\n    let left = new Map();\n    let right = new Map();\n    for (let k of src.keys()) {\n        let d = src.get(k);\n        if (k.startsWith('0')) {\n            left.set(k.substr(1), d);\n        }\n        else {\n            right.set(k.substr(1), d);\n        }\n    }\n    if (left.size === 0) {\n        throw Error('Internal inconsistency. Left emtpy.');\n    }\n    if (right.size === 0) {\n        throw Error('Internal inconsistency. Right emtpy.');\n    }\n    return { left, right };\n}\nfunction buildNode(src) {\n    if (src.size === 0) {\n        throw Error('Internal inconsistency');\n    }\n    if (src.size === 1) {\n        return { type: 'leaf', value: Array.from(src.values())[0] };\n    }\n    let { left, right } = forkMap(src);\n    return {\n        type: 'fork',\n        left: buildEdge(left),\n        right: buildEdge(right)\n    };\n}\nfunction buildEdge(src) {\n    if (src.size === 0) {\n        throw Error('Internal inconsistency');\n    }\n    const label = (0, findCommonPrefix_1.findCommonPrefix)(Array.from(src.keys()));\n    return { label, node: buildNode(removePrefixMap(src, label.length)) };\n}\nfunction buildTree(src, keyLength) {\n    // Convert map keys\n    let converted = new Map();\n    for (let k of Array.from(src.keys())) {\n        const padded = pad(k.toString(2), keyLength);\n        converted.set(padded, src.get(k));\n    }\n    // Calculate root label\n    return buildEdge(converted);\n}\nexports.buildTree = buildTree;\n//\n// Serialization\n//\nfunction writeLabelShort(src, to) {\n    // Header\n    to.storeBit(0);\n    // Unary length\n    for (let i = 0; i < src.length; i++) {\n        to.storeBit(1);\n    }\n    to.storeBit(0);\n    // Value\n    for (let i = 0; i < src.length; i++) {\n        to.storeBit(src[i] === '1');\n    }\n    return to;\n}\nexports.writeLabelShort = writeLabelShort;\nfunction labelShortLength(src) {\n    return 1 + src.length + 1 + src.length;\n}\nfunction writeLabelLong(src, keyLength, to) {\n    // Header\n    to.storeBit(1);\n    to.storeBit(0);\n    // Length\n    let length = Math.ceil(Math.log2(keyLength + 1));\n    to.storeUint(src.length, length);\n    // Value\n    for (let i = 0; i < src.length; i++) {\n        to.storeBit(src[i] === '1');\n    }\n    return to;\n}\nexports.writeLabelLong = writeLabelLong;\nfunction labelLongLength(src, keyLength) {\n    return 1 + 1 + Math.ceil(Math.log2(keyLength + 1)) + src.length;\n}\nfunction writeLabelSame(value, length, keyLength, to) {\n    // Header\n    to.storeBit(1);\n    to.storeBit(1);\n    // Value\n    to.storeBit(value);\n    // Length\n    let lenLen = Math.ceil(Math.log2(keyLength + 1));\n    to.storeUint(length, lenLen);\n}\nexports.writeLabelSame = writeLabelSame;\nfunction labelSameLength(keyLength) {\n    return 1 + 1 + 1 + Math.ceil(Math.log2(keyLength + 1));\n}\nfunction isSame(src) {\n    if (src.length === 0 || src.length === 1) {\n        return true;\n    }\n    for (let i = 1; i < src.length; i++) {\n        if (src[i] !== src[0]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction detectLabelType(src, keyLength) {\n    let kind = 'short';\n    let kindLength = labelShortLength(src);\n    let longLength = labelLongLength(src, keyLength);\n    if (longLength < kindLength) {\n        kindLength = longLength;\n        kind = 'long';\n    }\n    if (isSame(src)) {\n        let sameLength = labelSameLength(keyLength);\n        if (sameLength < kindLength) {\n            kindLength = sameLength;\n            kind = 'same';\n        }\n    }\n    return kind;\n}\nexports.detectLabelType = detectLabelType;\nfunction writeLabel(src, keyLength, to) {\n    let type = detectLabelType(src, keyLength);\n    if (type === 'short') {\n        writeLabelShort(src, to);\n    }\n    if (type === 'long') {\n        writeLabelLong(src, keyLength, to);\n    }\n    if (type === 'same') {\n        writeLabelSame(src[0] === '1', src.length, keyLength, to);\n    }\n}\nfunction writeNode(src, keyLength, serializer, to) {\n    if (src.type === 'leaf') {\n        serializer(src.value, to);\n    }\n    if (src.type === 'fork') {\n        const leftCell = (0, Builder_1.beginCell)();\n        const rightCell = (0, Builder_1.beginCell)();\n        writeEdge(src.left, keyLength - 1, serializer, leftCell);\n        writeEdge(src.right, keyLength - 1, serializer, rightCell);\n        to.storeRef(leftCell);\n        to.storeRef(rightCell);\n    }\n}\nfunction writeEdge(src, keyLength, serializer, to) {\n    writeLabel(src.label, keyLength, to);\n    writeNode(src.node, keyLength - src.label.length, serializer, to);\n}\nfunction serializeDict(src, keyLength, serializer, to) {\n    const tree = buildTree(src, keyLength);\n    writeEdge(tree, keyLength, serializer, to);\n}\nexports.serializeDict = serializeDict;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeInternalKey = exports.serializeInternalKey = void 0;\nconst Address_1 = require(\"../../address/Address\");\nfunction serializeInternalKey(value) {\n    if (typeof value === 'number') {\n        if (!Number.isSafeInteger(value)) {\n            throw Error('Invalid key type: not a safe integer: ' + value);\n        }\n        return 'n:' + value.toString(10);\n    }\n    else if (typeof value === 'bigint') {\n        return 'b:' + value.toString(10);\n    }\n    else if (Address_1.Address.isAddress(value)) {\n        return 'a:' + value.toString();\n    }\n    else if (Buffer.isBuffer(value)) {\n        return 'f:' + value.toString('hex');\n    }\n    else {\n        throw Error('Invalid key type');\n    }\n}\nexports.serializeInternalKey = serializeInternalKey;\nfunction deserializeInternalKey(value) {\n    let k = value.slice(0, 2);\n    let v = value.slice(2);\n    if (k === 'n:') {\n        return parseInt(v, 10);\n    }\n    else if (k === 'b:') {\n        return BigInt(v);\n    }\n    else if (k === 'a:') {\n        return Address_1.Address.parse(v);\n    }\n    else if (k === 'f:') {\n        return Buffer.from(v, 'hex');\n    }\n    throw Error('Invalid key type: ' + k);\n}\nexports.deserializeInternalKey = deserializeInternalKey;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dictionary = void 0;\nconst Address_1 = require(\"../address/Address\");\nconst Builder_1 = require(\"../boc/Builder\");\nconst Cell_1 = require(\"../boc/Cell\");\nconst parseDict_1 = require(\"./parseDict\");\nconst serializeDict_1 = require(\"./serializeDict\");\nconst internalKeySerializer_1 = require(\"./utils/internalKeySerializer\");\nclass Dictionary {\n    /**\n     * Create an empty map\n     * @param key key type\n     * @param value value type\n     * @returns Dictionary<K, V>\n     */\n    static empty(key, value) {\n        if (key && value) {\n            return new Dictionary(new Map(), key, value);\n        }\n        else {\n            return new Dictionary(new Map(), null, null);\n        }\n    }\n    /**\n     * Load dictionary from slice\n     * @param key key description\n     * @param value value description\n     * @param src slice\n     * @returns Dictionary<K, V>\n     */\n    static load(key, value, sc) {\n        let slice;\n        if (sc instanceof Cell_1.Cell) {\n            if (sc.isExotic) {\n                return Dictionary.empty(key, value);\n            }\n            slice = sc.beginParse();\n        }\n        else {\n            slice = sc;\n        }\n        let cell = slice.loadMaybeRef();\n        if (cell && !cell.isExotic) {\n            return Dictionary.loadDirect(key, value, cell.beginParse());\n        }\n        else {\n            return Dictionary.empty(key, value);\n        }\n    }\n    /**\n     * Low level method for rare dictionaries from system contracts.\n     * Loads dictionary from slice directly without going to the ref.\n     *\n     * @param key key description\n     * @param value value description\n     * @param sc slice\n     * @returns Dictionary<K, V>\n     */\n    static loadDirect(key, value, sc) {\n        if (!sc) {\n            return Dictionary.empty(key, value);\n        }\n        let slice;\n        if (sc instanceof Cell_1.Cell) {\n            slice = sc.beginParse();\n        }\n        else {\n            slice = sc;\n        }\n        let values = (0, parseDict_1.parseDict)(slice, key.bits, value.parse);\n        let prepare = new Map();\n        for (let [k, v] of values) {\n            prepare.set((0, internalKeySerializer_1.serializeInternalKey)(key.parse(k)), v);\n        }\n        return new Dictionary(prepare, key, value);\n    }\n    constructor(values, key, value) {\n        this._key = key;\n        this._value = value;\n        this._map = values;\n    }\n    get size() {\n        return this._map.size;\n    }\n    get(key) {\n        return this._map.get((0, internalKeySerializer_1.serializeInternalKey)(key));\n    }\n    has(key) {\n        return this._map.has((0, internalKeySerializer_1.serializeInternalKey)(key));\n    }\n    set(key, value) {\n        this._map.set((0, internalKeySerializer_1.serializeInternalKey)(key), value);\n        return this;\n    }\n    delete(key) {\n        const k = (0, internalKeySerializer_1.serializeInternalKey)(key);\n        return this._map.delete(k);\n    }\n    clear() {\n        this._map.clear();\n    }\n    *[Symbol.iterator]() {\n        for (const [k, v] of this._map) {\n            const key = (0, internalKeySerializer_1.deserializeInternalKey)(k);\n            yield [key, v];\n        }\n    }\n    keys() {\n        return Array.from(this._map.keys()).map((v) => (0, internalKeySerializer_1.deserializeInternalKey)(v));\n    }\n    values() {\n        return Array.from(this._map.values());\n    }\n    store(builder, key, value) {\n        if (this._map.size === 0) {\n            builder.storeBit(0);\n        }\n        else {\n            // Resolve serializer\n            let resolvedKey = this._key;\n            if (key !== null && key !== undefined) {\n                resolvedKey = key;\n            }\n            let resolvedValue = this._value;\n            if (value !== null && value !== undefined) {\n                resolvedValue = value;\n            }\n            if (!resolvedKey) {\n                throw Error('Key serializer is not defined');\n            }\n            if (!resolvedValue) {\n                throw Error('Value serializer is not defined');\n            }\n            // Prepare map\n            let prepared = new Map();\n            for (const [k, v] of this._map) {\n                prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k)), v);\n            }\n            // Store\n            builder.storeBit(1);\n            let dd = (0, Builder_1.beginCell)();\n            (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, dd);\n            builder.storeRef(dd.endCell());\n        }\n    }\n    storeDirect(builder, key, value) {\n        if (this._map.size === 0) {\n            throw Error('Cannot store empty dictionary directly');\n        }\n        // Resolve serializer\n        let resolvedKey = this._key;\n        if (key !== null && key !== undefined) {\n            resolvedKey = key;\n        }\n        let resolvedValue = this._value;\n        if (value !== null && value !== undefined) {\n            resolvedValue = value;\n        }\n        if (!resolvedKey) {\n            throw Error('Key serializer is not defined');\n        }\n        if (!resolvedValue) {\n            throw Error('Value serializer is not defined');\n        }\n        // Prepare map\n        let prepared = new Map();\n        for (const [k, v] of this._map) {\n            prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k)), v);\n        }\n        // Store\n        (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, builder);\n    }\n}\nexports.Dictionary = Dictionary;\nDictionary.Keys = {\n    /**\n     * Standard address key\n     * @returns DictionaryKey<Address>\n     */\n    Address: () => {\n        return createAddressKey();\n    },\n    /**\n     * Create standard big integer key\n     * @param bits number of bits\n     * @returns DictionaryKey<bigint>\n     */\n    BigInt: (bits) => {\n        return createBigIntKey(bits);\n    },\n    /**\n     * Create integer key\n     * @param bits bits of integer\n     * @returns DictionaryKey<number>\n     */\n    Int: (bits) => {\n        return createIntKey(bits);\n    },\n    /**\n     * Create standard unsigned big integer key\n     * @param bits number of bits\n     * @returns DictionaryKey<bigint>\n     */\n    BigUint: (bits) => {\n        return createBigUintKey(bits);\n    },\n    /**\n     * Create standard unsigned integer key\n     * @param bits number of bits\n     * @returns DictionaryKey<number>\n     */\n    Uint: (bits) => {\n        return createUintKey(bits);\n    },\n    /**\n     * Create standard buffer key\n     * @param bytes number of bytes of a buffer\n     * @returns DictionaryKey<Buffer>\n     */\n    Buffer: (bytes) => {\n        return createBufferKey(bytes);\n    }\n};\nDictionary.Values = {\n    /**\n     * Create standard integer value\n     * @returns DictionaryValue<bigint>\n     */\n    BigInt: (bits) => {\n        return createBigIntValue(bits);\n    },\n    /**\n     * Create standard integer value\n     * @returns DictionaryValue<number>\n     */\n    Int: (bits) => {\n        return createIntValue(bits);\n    },\n    /**\n     * Create big var int\n     * @param bits nubmer of header bits\n     * @returns DictionaryValue<bigint>\n     */\n    BigVarInt: (bits) => {\n        return createBigVarIntValue(bits);\n    },\n    /**\n     * Create standard unsigned integer value\n     * @param bits number of bits\n     * @returns DictionaryValue<bigint>\n     */\n    BigUint: (bits) => {\n        return createBigUintValue(bits);\n    },\n    /**\n     * Create standard unsigned integer value\n     * @param bits number of bits\n     * @returns DictionaryValue<bigint>\n     */\n    Uint: (bits) => {\n        return createUintValue(bits);\n    },\n    /**\n     * Create big var int\n     * @param bits nubmer of header bits\n     * @returns DictionaryValue<bigint>\n     */\n    BigVarUint: (bits) => {\n        return createBigVarUintValue(bits);\n    },\n    /**\n     * Create standard boolean value\n     * @returns DictionaryValue<boolean>\n     */\n    Bool: () => {\n        return createBooleanValue();\n    },\n    /**\n     * Create standard address value\n     * @returns DictionaryValue<Address>\n     */\n    Address: () => {\n        return createAddressValue();\n    },\n    /**\n     * Create standard cell value\n     * @returns DictionaryValue<Cell>\n     */\n    Cell: () => {\n        return createCellValue();\n    },\n    /**\n     * Create Builder value\n     * @param bytes number of bytes of a buffer\n     * @returns DictionaryValue<Builder>\n     */\n    Buffer: (bytes) => {\n        return createBufferValue(bytes);\n    },\n    /**\n     * Create dictionary value\n     * @param key\n     * @param value\n     */\n    Dictionary: (key, value) => {\n        return createDictionaryValue(key, value);\n    }\n};\n//\n// Keys and Values\n//\nfunction createAddressKey() {\n    return {\n        bits: 267,\n        serialize: (src) => {\n            if (!Address_1.Address.isAddress(src)) {\n                throw Error('Key is not an address');\n            }\n            return (0, Builder_1.beginCell)().storeAddress(src).endCell().beginParse().preloadUintBig(267);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, 267).endCell().beginParse().loadAddress();\n        }\n    };\n}\nfunction createBigIntKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (typeof src !== 'bigint') {\n                throw Error('Key is not a bigint');\n            }\n            return (0, Builder_1.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadIntBig(bits);\n        }\n    };\n}\nfunction createIntKey(bits) {\n    return {\n        bits: bits,\n        serialize: (src) => {\n            if (typeof src !== 'number') {\n                throw Error('Key is not a number');\n            }\n            if (!Number.isSafeInteger(src)) {\n                throw Error('Key is not a safe integer: ' + src);\n            }\n            return (0, Builder_1.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadInt(bits);\n        }\n    };\n}\nfunction createBigUintKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (typeof src !== 'bigint') {\n                throw Error('Key is not a bigint');\n            }\n            if (src < 0) {\n                throw Error('Key is negative: ' + src);\n            }\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);\n        }\n    };\n}\nfunction createUintKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (typeof src !== 'number') {\n                throw Error('Key is not a number');\n            }\n            if (!Number.isSafeInteger(src)) {\n                throw Error('Key is not a safe integer: ' + src);\n            }\n            if (src < 0) {\n                throw Error('Key is negative: ' + src);\n            }\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return Number((0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUint(bits));\n        }\n    };\n}\nfunction createBufferKey(bytes) {\n    return {\n        bits: bytes * 8,\n        serialize: (src) => {\n            if (!Buffer.isBuffer(src)) {\n                throw Error('Key is not a buffer');\n            }\n            return (0, Builder_1.beginCell)().storeBuffer(src).endCell().beginParse().loadUintBig(bytes * 8);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bytes * 8).endCell().beginParse().loadBuffer(bytes);\n        }\n    };\n}\nfunction createIntValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeInt(src, bits);\n        },\n        parse: (src) => {\n            return src.loadInt(bits);\n        }\n    };\n}\nfunction createBigIntValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeInt(src, bits);\n        },\n        parse: (src) => {\n            return src.loadIntBig(bits);\n        }\n    };\n}\nfunction createBigVarIntValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeVarInt(src, bits);\n        },\n        parse: (src) => {\n            return src.loadVarIntBig(bits);\n        }\n    };\n}\nfunction createBigVarUintValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeVarUint(src, bits);\n        },\n        parse: (src) => {\n            return src.loadVarUintBig(bits);\n        }\n    };\n}\nfunction createUintValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeUint(src, bits);\n        },\n        parse: (src) => {\n            return src.loadUint(bits);\n        }\n    };\n}\nfunction createBigUintValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeUint(src, bits);\n        },\n        parse: (src) => {\n            return src.loadUintBig(bits);\n        }\n    };\n}\nfunction createBooleanValue() {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeBit(src);\n        },\n        parse: (src) => {\n            return src.loadBit();\n        }\n    };\n}\nfunction createAddressValue() {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeAddress(src);\n        },\n        parse: (src) => {\n            return src.loadAddress();\n        }\n    };\n}\nfunction createCellValue() {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeRef(src);\n        },\n        parse: (src) => {\n            return src.loadRef();\n        }\n    };\n}\nfunction createDictionaryValue(key, value) {\n    return {\n        serialize: (src, buidler) => {\n            src.store(buidler);\n        },\n        parse: (src) => {\n            return Dictionary.load(key, value, src);\n        }\n    };\n}\nfunction createBufferValue(size) {\n    return {\n        serialize: (src, buidler) => {\n            if (src.length !== size) {\n                throw Error('Invalid buffer size');\n            }\n            buidler.storeBuffer(src);\n        },\n        parse: (src) => {\n            return src.loadBuffer(size);\n        }\n    };\n}\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeString = exports.stringToCell = exports.readString = void 0;\nconst Builder_1 = require(\"../Builder\");\nfunction readBuffer(slice) {\n    // Check consistency\n    if (slice.remainingBits % 8 !== 0) {\n        throw new Error(`Invalid string length: ${slice.remainingBits}`);\n    }\n    if (slice.remainingRefs !== 0 && slice.remainingRefs !== 1) {\n        throw new Error(`invalid number of refs: ${slice.remainingRefs}`);\n    }\n    if (slice.remainingRefs === 1 && (1023 - slice.remainingBits) > 7) {\n        throw new Error(`invalid string length: ${slice.remainingBits / 8}`);\n    }\n    // Read string\n    let res;\n    if (slice.remainingBits === 0) {\n        res = Buffer.alloc(0);\n    }\n    else {\n        res = slice.loadBuffer(slice.remainingBits / 8);\n    }\n    // Read tail\n    if (slice.remainingRefs === 1) {\n        res = Buffer.concat([res, readBuffer(slice.loadRef().beginParse())]);\n    }\n    return res;\n}\nfunction readString(slice) {\n    return readBuffer(slice).toString();\n}\nexports.readString = readString;\nfunction writeBuffer(src, builder) {\n    if (src.length > 0) {\n        let bytes = Math.floor(builder.availableBits / 8);\n        if (src.length > bytes) {\n            let a = src.subarray(0, bytes);\n            let t = src.subarray(bytes);\n            builder = builder.storeBuffer(a);\n            let bb = (0, Builder_1.beginCell)();\n            writeBuffer(t, bb);\n            builder = builder.storeRef(bb.endCell());\n        }\n        else {\n            builder = builder.storeBuffer(src);\n        }\n    }\n}\nfunction stringToCell(src) {\n    let builder = (0, Builder_1.beginCell)();\n    writeBuffer(Buffer.from(src), builder);\n    return builder.endCell();\n}\nexports.stringToCell = stringToCell;\nfunction writeString(src, builder) {\n    writeBuffer(Buffer.from(src), builder);\n}\nexports.writeString = writeString;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slice = void 0;\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nconst Dictionary_1 = require(\"../dict/Dictionary\");\nconst Builder_1 = require(\"./Builder\");\nconst strings_1 = require(\"./utils/strings\");\n/**\n * Slice is a class that allows to read cell data\n */\nclass Slice {\n    constructor(reader, refs) {\n        this[_a] = () => this.toString();\n        this._reader = reader.clone();\n        this._refs = [...refs];\n    }\n    /**\n     * Get remaining bits\n     */\n    get remainingBits() {\n        return this._reader.remaining;\n    }\n    /**\n     * Get remaining refs\n     */\n    get remainingRefs() {\n        return this._refs.length;\n    }\n    /**\n     * Skip bits\n     * @param bits\n     */\n    skip(bits) {\n        this._reader.skip(bits);\n        return this;\n    }\n    /**\n     * Load a single bit\n     * @returns true or false depending on the bit value\n     */\n    loadBit() {\n        return this._reader.loadBit();\n    }\n    /**\n     * Preload a signle bit\n     * @returns true or false depending on the bit value\n     */\n    preloadBit() {\n        return this._reader.preloadBit();\n    }\n    /**\n     * Load a boolean\n     * @returns true or false depending on the bit value\n     */\n    loadBoolean() {\n        return this.loadBit();\n    }\n    /**\n     * Load maybe boolean\n     * @returns true or false depending on the bit value or null\n     */\n    loadMaybeBoolean() {\n        if (this.loadBit()) {\n            return this.loadBoolean();\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Load bits as a new BitString\n     * @param bits number of bits to read\n     * @returns new BitString\n     */\n    loadBits(bits) {\n        return this._reader.loadBits(bits);\n    }\n    /**\n     * Preload bits as a new BitString\n     * @param bits number of bits to read\n     * @returns new BitString\n     */\n    preloadBits(bits) {\n        return this._reader.preloadBits(bits);\n    }\n    /**\n     * Load uint\n     * @param bits number of bits to read\n     * @returns uint value\n     */\n    loadUint(bits) {\n        return this._reader.loadUint(bits);\n    }\n    /**\n     * Load uint\n     * @param bits number of bits to read\n     * @returns uint value\n     */\n    loadUintBig(bits) {\n        return this._reader.loadUintBig(bits);\n    }\n    /**\n     * Preload uint\n     * @param bits number of bits to read\n     * @returns uint value\n     */\n    preloadUint(bits) {\n        return this._reader.preloadUint(bits);\n    }\n    /**\n     * Preload uint\n     * @param bits number of bits to read\n     * @returns uint value\n     */\n    preloadUintBig(bits) {\n        return this._reader.preloadUintBig(bits);\n    }\n    /**\n     * Load maybe uint\n     * @param bits number of bits to read\n     * @returns uint value or null\n     */\n    loadMaybeUint(bits) {\n        if (this.loadBit()) {\n            return this.loadUint(bits);\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Load maybe uint\n     * @param bits number of bits to read\n     * @returns uint value or null\n     */\n    loadMaybeUintBig(bits) {\n        if (this.loadBit()) {\n            return this.loadUintBig(bits);\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Load int\n     * @param bits number of bits to read\n     * @returns int value\n     */\n    loadInt(bits) {\n        return this._reader.loadInt(bits);\n    }\n    /**\n     * Load int\n     * @param bits number of bits to read\n     * @returns int value\n     */\n    loadIntBig(bits) {\n        return this._reader.loadIntBig(bits);\n    }\n    /**\n     * Preload int\n     * @param bits number of bits to read\n     * @returns int value\n     */\n    preloadInt(bits) {\n        return this._reader.preloadInt(bits);\n    }\n    /**\n     * Preload int\n     * @param bits number of bits to read\n     * @returns int value\n     */\n    preloadIntBig(bits) {\n        return this._reader.preloadIntBig(bits);\n    }\n    /**\n     * Load maybe uint\n     * @param bits number of bits to read\n     * @returns uint value or null\n     */\n    loadMaybeInt(bits) {\n        if (this.loadBit()) {\n            return this.loadInt(bits);\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Load maybe uint\n     * @param bits number of bits to read\n     * @returns uint value or null\n     */\n    loadMaybeIntBig(bits) {\n        if (this.loadBit()) {\n            return this.loadIntBig(bits);\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Load varuint\n     * @param bits number of bits to read in header\n     * @returns varuint value\n     */\n    loadVarUint(bits) {\n        return this._reader.loadVarUint(bits);\n    }\n    /**\n     * Load varuint\n     * @param bits number of bits to read in header\n     * @returns varuint value\n     */\n    loadVarUintBig(bits) {\n        return this._reader.loadVarUintBig(bits);\n    }\n    /**\n     * Preload varuint\n     * @param bits number of bits to read in header\n     * @returns varuint value\n     */\n    preloadVarUint(bits) {\n        return this._reader.preloadVarUint(bits);\n    }\n    /**\n     * Preload varuint\n     * @param bits number of bits to read in header\n     * @returns varuint value\n     */\n    preloadVarUintBig(bits) {\n        return this._reader.preloadVarUintBig(bits);\n    }\n    /**\n     * Load varint\n     * @param bits number of bits to read in header\n     * @returns varint value\n     */\n    loadVarInt(bits) {\n        return this._reader.loadVarInt(bits);\n    }\n    /**\n     * Load varint\n     * @param bits number of bits to read in header\n     * @returns varint value\n     */\n    loadVarIntBig(bits) {\n        return this._reader.loadVarIntBig(bits);\n    }\n    /**\n     * Preload varint\n     * @param bits number of bits to read in header\n     * @returns varint value\n     */\n    preloadVarInt(bits) {\n        return this._reader.preloadVarInt(bits);\n    }\n    /**\n     * Preload varint\n     * @param bits number of bits to read in header\n     * @returns varint value\n     */\n    preloadVarIntBig(bits) {\n        return this._reader.preloadVarIntBig(bits);\n    }\n    /**\n     * Load coins\n     * @returns coins value\n     */\n    loadCoins() {\n        return this._reader.loadCoins();\n    }\n    /**\n     * Preload coins\n     * @returns coins value\n     */\n    preloadCoins() {\n        return this._reader.preloadCoins();\n    }\n    /**\n     * Load maybe coins\n     * @returns coins value or null\n     */\n    loadMaybeCoins() {\n        if (this._reader.loadBit()) {\n            return this._reader.loadCoins();\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Load internal Address\n     * @returns Address\n     */\n    loadAddress() {\n        return this._reader.loadAddress();\n    }\n    /**\n     * Load optional internal Address\n     * @returns Address or null\n     */\n    loadMaybeAddress() {\n        return this._reader.loadMaybeAddress();\n    }\n    /**\n     * Load external address\n     * @returns ExternalAddress\n     */\n    loadExternalAddress() {\n        return this._reader.loadExternalAddress();\n    }\n    /**\n     * Load optional external address\n     * @returns ExternalAddress or null\n     */\n    loadMaybeExternalAddress() {\n        return this._reader.loadMaybeExternalAddress();\n    }\n    /**\n     * Load address\n     * @returns Address, ExternalAddress or null\n     */\n    loadAddressAny() {\n        return this._reader.loadAddressAny();\n    }\n    /**\n     * Load reference\n     * @returns Cell\n     */\n    loadRef() {\n        if (this._refs.length === 0) {\n            throw new Error(\"No more references\");\n        }\n        return this._refs.shift();\n    }\n    /**\n     * Preload reference\n     * @returns Cell\n     */\n    preloadRef() {\n        if (this._refs.length === 0) {\n            throw new Error(\"No more references\");\n        }\n        return this._refs[0];\n    }\n    /**\n     * Load optional reference\n     * @returns Cell or null\n     */\n    loadMaybeRef() {\n        if (this.loadBit()) {\n            return this.loadRef();\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Preload optional reference\n     * @returns Cell or null\n     */\n    preloadMaybeRef() {\n        if (this.preloadBit()) {\n            return this.preloadRef();\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Load byte buffer\n     * @param bytes number of bytes to load\n     * @returns Buffer\n     */\n    loadBuffer(bytes) {\n        return this._reader.loadBuffer(bytes);\n    }\n    /**\n     * Load byte buffer\n     * @param bytes number of bytes to load\n     * @returns Buffer\n     */\n    preloadBuffer(bytes) {\n        return this._reader.preloadBuffer(bytes);\n    }\n    /**\n     * Load string tail\n     */\n    loadStringTail() {\n        return (0, strings_1.readString)(this);\n    }\n    /**\n     * Load maybe string tail\n     * @returns string or null\n     */\n    loadMaybeStringTail() {\n        if (this.loadBit()) {\n            return (0, strings_1.readString)(this);\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Load string tail from ref\n     * @returns string\n     */\n    loadStringRefTail() {\n        return (0, strings_1.readString)(this.loadRef().beginParse());\n    }\n    /**\n     * Load maybe string tail from ref\n     * @returns string or null\n     */\n    loadMaybeStringRefTail() {\n        const ref = this.loadMaybeRef();\n        if (ref) {\n            return (0, strings_1.readString)(ref.beginParse());\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Loads dictionary\n     * @param key key description\n     * @param value value description\n     * @returns Dictionary<K, V>\n     */\n    loadDict(key, value) {\n        return Dictionary_1.Dictionary.load(key, value, this);\n    }\n    /**\n     * Loads dictionary directly from current slice\n     * @param key key description\n     * @param value value description\n     * @returns Dictionary<K, V>\n     */\n    loadDictDirect(key, value) {\n        return Dictionary_1.Dictionary.loadDirect(key, value, this);\n    }\n    /**\n     * Checks if slice is empty\n     */\n    endParse() {\n        if (this.remainingBits > 0 || this.remainingRefs > 0) {\n            throw new Error(\"Slice is not empty\");\n        }\n    }\n    /**\n     * Convert slice to cell\n     */\n    asCell() {\n        return (0, Builder_1.beginCell)().storeSlice(this).endCell();\n    }\n    /**\n     *\n     * @returns\n     */\n    asBuilder() {\n        return (0, Builder_1.beginCell)().storeSlice(this);\n    }\n    /**\n     * Clone slice\n     * @returns cloned slice\n     */\n    clone() {\n        return new Slice(this._reader, this._refs);\n    }\n    /**\n     * Print slice as string by converting it to cell\n     * @returns string\n     */\n    toString() {\n        return this.asCell().toString();\n    }\n}\nexports.Slice = Slice;\n_a = symbol_inspect_1.default;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitReader = void 0;\nconst Address_1 = require(\"../address/Address\");\nconst ExternalAddress_1 = require(\"../address/ExternalAddress\");\n/**\n * Class for reading bit strings\n */\nclass BitReader {\n    constructor(bits, offset = 0) {\n        this._checkpoints = [];\n        this._bits = bits;\n        this._offset = offset;\n    }\n    /**\n     * Number of bits remaining\n     */\n    get remaining() {\n        return this._bits.length - this._offset;\n    }\n    /**\n     * Skip bits\n     * @param bits number of bits to skip\n     */\n    skip(bits) {\n        if (bits < 0 || this._offset + bits > this._bits.length) {\n            throw new Error(`Index ${this._offset + bits} is out of bounds`);\n        }\n        this._offset += bits;\n    }\n    /**\n     * Reset to the beginning or latest checkpoint\n     */\n    reset() {\n        if (this._checkpoints.length > 0) {\n            this._offset = this._checkpoints.pop();\n        }\n        else {\n            this._offset = 0;\n        }\n    }\n    /**\n     * Save checkpoint\n     */\n    save() {\n        this._checkpoints.push(this._offset);\n    }\n    /**\n     * Load a single bit\n     * @returns true if the bit is set, false otherwise\n     */\n    loadBit() {\n        let r = this._bits.at(this._offset);\n        this._offset++;\n        return r;\n    }\n    /**\n     * Preload bit\n     * @returns true if the bit is set, false otherwise\n     */\n    preloadBit() {\n        return this._bits.at(this._offset);\n    }\n    /**\n     * Load bit string\n     * @param bits number of bits to read\n     * @returns new bitstring\n     */\n    loadBits(bits) {\n        let r = this._bits.substring(this._offset, bits);\n        this._offset += bits;\n        return r;\n    }\n    /**\n     * Preload bit string\n     * @param bits number of bits to read\n     * @returns new bitstring\n     */\n    preloadBits(bits) {\n        return this._bits.substring(this._offset, bits);\n    }\n    /**\n     * Load buffer\n     * @param bytes number of bytes\n     * @returns new buffer\n     */\n    loadBuffer(bytes) {\n        let buf = this._preloadBuffer(bytes, this._offset);\n        this._offset += bytes * 8;\n        return buf;\n    }\n    /**\n     * Preload buffer\n     * @param bytes number of bytes\n     * @returns new buffer\n     */\n    preloadBuffer(bytes) {\n        return this._preloadBuffer(bytes, this._offset);\n    }\n    /**\n     * Load uint value\n     * @param bits uint bits\n     * @returns read value as number\n     */\n    loadUint(bits) {\n        return Number(this.loadUintBig(bits));\n    }\n    /**\n     * Load uint value as bigint\n     * @param bits uint bits\n     * @returns read value as bigint\n     */\n    loadUintBig(bits) {\n        let loaded = this.preloadUintBig(bits);\n        this._offset += bits;\n        return loaded;\n    }\n    /**\n     * Preload uint value\n     * @param bits uint bits\n     * @returns read value as number\n     */\n    preloadUint(bits) {\n        return Number(this._preloadUint(bits, this._offset));\n    }\n    /**\n     * Preload uint value as bigint\n     * @param bits uint bits\n     * @returns read value as bigint\n     */\n    preloadUintBig(bits) {\n        return this._preloadUint(bits, this._offset);\n    }\n    /**\n     * Load int value\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    loadInt(bits) {\n        let res = this._preloadInt(bits, this._offset);\n        this._offset += bits;\n        return Number(res);\n    }\n    /**\n     * Load int value as bigint\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    loadIntBig(bits) {\n        let res = this._preloadInt(bits, this._offset);\n        this._offset += bits;\n        return res;\n    }\n    /**\n     * Preload int value\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    preloadInt(bits) {\n        return Number(this._preloadInt(bits, this._offset));\n    }\n    /**\n     * Preload int value\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    preloadIntBig(bits) {\n        return this._preloadInt(bits, this._offset);\n    }\n    /**\n     * Load varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarUint(bits) {\n        let size = Number(this.loadUint(bits));\n        return Number(this.loadUintBig(size * 8));\n    }\n    /**\n     * Load varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarUintBig(bits) {\n        let size = Number(this.loadUint(bits));\n        return this.loadUintBig(size * 8);\n    }\n    /**\n     * Preload varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarUint(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return Number(this._preloadUint(size * 8, this._offset + bits));\n    }\n    /**\n     * Preload varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarUintBig(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return this._preloadUint(size * 8, this._offset + bits);\n    }\n    /**\n     * Load varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarInt(bits) {\n        let size = Number(this.loadUint(bits));\n        return Number(this.loadIntBig(size * 8));\n    }\n    /**\n     * Load varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarIntBig(bits) {\n        let size = Number(this.loadUint(bits));\n        return this.loadIntBig(size * 8);\n    }\n    /**\n     * Preload varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarInt(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return Number(this._preloadInt(size * 8, this._offset + bits));\n    }\n    /**\n     * Preload varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarIntBig(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return this._preloadInt(size * 8, this._offset + bits);\n    }\n    /**\n     * Load coins value\n     * @returns read value as bigint\n     */\n    loadCoins() {\n        return this.loadVarUintBig(4);\n    }\n    /**\n     * Preload coins value\n     * @returns read value as bigint\n     */\n    preloadCoins() {\n        return this.preloadVarUintBig(4);\n    }\n    /**\n     * Load Address\n     * @returns Address\n     */\n    loadAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 2) {\n            return this._loadInternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address: \" + type);\n        }\n    }\n    /**\n     * Load internal address\n     * @returns Address or null\n     */\n    loadMaybeAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 0) {\n            this._offset += 2;\n            return null;\n        }\n        else if (type === 2) {\n            return this._loadInternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address\");\n        }\n    }\n    /**\n     * Load external address\n     * @returns ExternalAddress\n     */\n    loadExternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 1) {\n            return this._loadExternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address\");\n        }\n    }\n    /**\n     * Load external address\n     * @returns ExternalAddress or null\n     */\n    loadMaybeExternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 0) {\n            this._offset += 2;\n            return null;\n        }\n        else if (type === 1) {\n            return this._loadExternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address\");\n        }\n    }\n    /**\n     * Read address of any type\n     * @returns Address or ExternalAddress or null\n     */\n    loadAddressAny() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 0) {\n            this._offset += 2;\n            return null;\n        }\n        else if (type === 2) {\n            return this._loadInternalAddress();\n        }\n        else if (type === 1) {\n            return this._loadExternalAddress();\n        }\n        else if (type === 3) {\n            throw Error('Unsupported');\n        }\n        else {\n            throw Error('Unreachable');\n        }\n    }\n    /**\n     * Load bit string that was padded to make it byte alligned. Used in BOC serialization\n     * @param bytes number of bytes to read\n     */\n    loadPaddedBits(bits) {\n        // Check that number of bits is byte alligned\n        if (bits % 8 !== 0) {\n            throw new Error(\"Invalid number of bits\");\n        }\n        // Skip padding\n        let length = bits;\n        while (true) {\n            if (this._bits.at(this._offset + length - 1)) {\n                length--;\n                break;\n            }\n            else {\n                length--;\n            }\n        }\n        // Read substring\n        let r = this._bits.substring(this._offset, length);\n        this._offset += bits;\n        return r;\n    }\n    /**\n     * Clone BitReader\n     */\n    clone() {\n        return new BitReader(this._bits, this._offset);\n    }\n    /**\n     * Preload int from specific offset\n     * @param bits bits to preload\n     * @param offset offset to start from\n     * @returns read value as bigint\n     */\n    _preloadInt(bits, offset) {\n        if (bits == 0) {\n            return 0n;\n        }\n        let sign = this._bits.at(offset);\n        let res = 0n;\n        for (let i = 0; i < bits - 1; i++) {\n            if (this._bits.at(offset + 1 + i)) {\n                res += 1n << BigInt(bits - i - 1 - 1);\n            }\n        }\n        if (sign) {\n            res = res - (1n << BigInt(bits - 1));\n        }\n        return res;\n    }\n    /**\n     * Preload uint from specific offset\n     * @param bits bits to preload\n     * @param offset offset to start from\n     * @returns read value as bigint\n     */\n    _preloadUint(bits, offset) {\n        if (bits == 0) {\n            return 0n;\n        }\n        let res = 0n;\n        for (let i = 0; i < bits; i++) {\n            if (this._bits.at(offset + i)) {\n                res += 1n << BigInt(bits - i - 1);\n            }\n        }\n        return res;\n    }\n    _preloadBuffer(bytes, offset) {\n        // Try to load fast\n        let fastBuffer = this._bits.subbuffer(offset, bytes * 8);\n        if (fastBuffer) {\n            return fastBuffer;\n        }\n        // Load slow\n        let buf = Buffer.alloc(bytes);\n        for (let i = 0; i < bytes; i++) {\n            buf[i] = Number(this._preloadUint(8, offset + i * 8));\n        }\n        return buf;\n    }\n    _loadInternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type !== 2) {\n            throw Error('Invalid address');\n        }\n        // No Anycast supported\n        if (this._preloadUint(1, this._offset + 2) !== 0n) {\n            throw Error('Invalid address');\n        }\n        // Read address\n        let wc = Number(this._preloadInt(8, this._offset + 3));\n        let hash = this._preloadBuffer(32, this._offset + 11);\n        // Update offset\n        this._offset += 267;\n        return new Address_1.Address(wc, hash);\n    }\n    _loadExternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type !== 1) {\n            throw Error('Invalid address');\n        }\n        // Load length\n        let bits = Number(this._preloadUint(9, this._offset + 2));\n        // Load address\n        let value = this._preloadUint(bits, this._offset + 11);\n        // Update offset\n        this._offset += 11 + bits;\n        return new ExternalAddress_1.ExternalAddress(value, bits);\n    }\n}\nexports.BitReader = BitReader;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exoticLibrary = void 0;\nconst BitReader_1 = require(\"../BitReader\");\nfunction exoticLibrary(bits, refs) {\n    const reader = new BitReader_1.BitReader(bits);\n    // type + hash\n    const size = 8 + 256;\n    if (bits.length !== size) {\n        throw new Error(`Library cell must have exactly (8 + 256) bits, got \"${bits.length}\"`);\n    }\n    // Check type\n    let type = reader.loadUint(8);\n    if (type !== 2) {\n        throw new Error(`Library cell must have type 2, got \"${type}\"`);\n    }\n    return {};\n}\nexports.exoticLibrary = exoticLibrary;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exoticMerkleProof = void 0;\nconst BitReader_1 = require(\"../BitReader\");\nfunction exoticMerkleProof(bits, refs) {\n    const reader = new BitReader_1.BitReader(bits);\n    // type + hash + depth\n    const size = 8 + 256 + 16;\n    if (bits.length !== size) {\n        throw new Error(`Merkle Proof cell must have exactly (8 + 256 + 16) bits, got \"${bits.length}\"`);\n    }\n    if (refs.length !== 1) {\n        throw new Error(`Merkle Proof cell must have exactly 1 ref, got \"${refs.length}\"`);\n    }\n    // Check type\n    let type = reader.loadUint(8);\n    if (type !== 3) {\n        throw new Error(`Merkle Proof cell must have type 3, got \"${type}\"`);\n    }\n    // Check data\n    const proofHash = reader.loadBuffer(32);\n    const proofDepth = reader.loadUint(16);\n    const refHash = refs[0].hash(0);\n    const refDepth = refs[0].depth(0);\n    if (proofDepth !== refDepth) {\n        throw new Error(`Merkle Proof cell ref depth must be exactly \"${proofDepth}\", got \"${refDepth}\"`);\n    }\n    if (!proofHash.equals(refHash)) {\n        throw new Error(`Merkle Proof cell ref hash must be exactly \"${proofHash.toString('hex')}\", got \"${refHash.toString('hex')}\"`);\n    }\n    return {\n        proofDepth,\n        proofHash\n    };\n}\nexports.exoticMerkleProof = exoticMerkleProof;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exoticMerkleUpdate = void 0;\nconst BitReader_1 = require(\"../BitReader\");\nfunction exoticMerkleUpdate(bits, refs) {\n    const reader = new BitReader_1.BitReader(bits);\n    // type + hash + hash + depth + depth\n    const size = 8 + (2 * (256 + 16));\n    if (bits.length !== size) {\n        throw new Error(`Merkle Update cell must have exactly (8 + (2 * (256 + 16))) bits, got \"${bits.length}\"`);\n    }\n    if (refs.length !== 2) {\n        throw new Error(`Merkle Update cell must have exactly 2 refs, got \"${refs.length}\"`);\n    }\n    let type = reader.loadUint(8);\n    if (type !== 4) {\n        throw new Error(`Merkle Update cell type must be exactly 4, got \"${type}\"`);\n    }\n    const proofHash1 = reader.loadBuffer(32);\n    const proofHash2 = reader.loadBuffer(32);\n    const proofDepth1 = reader.loadUint(16);\n    const proofDepth2 = reader.loadUint(16);\n    if (proofDepth1 !== refs[0].depth(0)) {\n        throw new Error(`Merkle Update cell ref depth must be exactly \"${proofDepth1}\", got \"${refs[0].depth(0)}\"`);\n    }\n    if (!proofHash1.equals(refs[0].hash(0))) {\n        throw new Error(`Merkle Update cell ref hash must be exactly \"${proofHash1.toString('hex')}\", got \"${refs[0].hash(0).toString('hex')}\"`);\n    }\n    if (proofDepth2 !== refs[1].depth(0)) {\n        throw new Error(`Merkle Update cell ref depth must be exactly \"${proofDepth2}\", got \"${refs[1].depth(0)}\"`);\n    }\n    if (!proofHash2.equals(refs[1].hash(0))) {\n        throw new Error(`Merkle Update cell ref hash must be exactly \"${proofHash2.toString('hex')}\", got \"${refs[1].hash(0).toString('hex')}\"`);\n    }\n    return {\n        proofDepth1,\n        proofDepth2,\n        proofHash1,\n        proofHash2\n    };\n}\nexports.exoticMerkleUpdate = exoticMerkleUpdate;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LevelMask = void 0;\nclass LevelMask {\n    constructor(mask = 0) {\n        this._mask = 0;\n        this._mask = mask;\n        this._hashIndex = countSetBits(this._mask);\n        this._hashCount = this._hashIndex + 1;\n    }\n    get value() {\n        return this._mask;\n    }\n    get level() {\n        return 32 - Math.clz32(this._mask);\n    }\n    get hashIndex() {\n        return this._hashIndex;\n    }\n    get hashCount() {\n        return this._hashCount;\n    }\n    apply(level) {\n        return new LevelMask(this._mask & ((1 << level) - 1));\n    }\n    isSignificant(level) {\n        let res = level === 0 || (this._mask >> (level - 1)) % 2 !== 0;\n        return res;\n        // bool res = level == 0 | | ( (mask_ >> (level -1)) % 2 != 0);\n    }\n}\nexports.LevelMask = LevelMask;\nfunction countSetBits(n) {\n    n = n - ((n >> 1) & 0x55555555);\n    n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n    return ((n + (n >> 4) & 0xF0F0F0F) * 0x1010101) >> 24;\n}\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exoticPruned = void 0;\nconst BitReader_1 = require(\"../BitReader\");\nconst LevelMask_1 = require(\"./LevelMask\");\nfunction exoticPruned(bits, refs) {\n    let reader = new BitReader_1.BitReader(bits);\n    // Check type\n    let type = reader.loadUint(8);\n    if (type !== 1) {\n        throw new Error(`Pruned branch cell must have type 1, got \"${type}\"`);\n    }\n    // Check refs\n    if (refs.length !== 0) {\n        throw new Error(`Pruned Branch cell can't has refs, got \"${refs.length}\"`);\n    }\n    // Resolve cell\n    let mask;\n    if (bits.length === 280) {\n        // Special case for config proof\n        // This test proof is generated in the moment of voting for a slashing\n        // it seems that tools generate it incorrectly and therefore doesn't have mask in it\n        // so we need to hardcode it equal to 1\n        mask = new LevelMask_1.LevelMask(1);\n    }\n    else {\n        // Check level\n        mask = new LevelMask_1.LevelMask(reader.loadUint(8));\n        if (mask.level < 1 || mask.level > 3) {\n            throw new Error(`Pruned Branch cell level must be >= 1 and <= 3, got \"${mask.level}/${mask.value}\"`);\n        }\n        // Read pruned\n        const size = 8 + 8 + (mask.apply(mask.level - 1).hashCount * (256 /* Hash */ + 16 /* Depth */));\n        if (bits.length !== size) {\n            throw new Error(`Pruned branch cell must have exactly ${size} bits, got \"${bits.length}\"`);\n        }\n    }\n    // Read pruned\n    let pruned = [];\n    let hashes = [];\n    let depths = [];\n    for (let i = 0; i < mask.level; i++) {\n        hashes.push(reader.loadBuffer(32));\n    }\n    for (let i = 0; i < mask.level; i++) {\n        depths.push(reader.loadUint(16));\n    }\n    for (let i = 0; i < mask.level; i++) {\n        pruned.push({\n            depth: depths[i],\n            hash: hashes[i]\n        });\n    }\n    return {\n        mask: mask.value,\n        pruned\n    };\n}\nexports.exoticPruned = exoticPruned;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveExotic = void 0;\nconst BitReader_1 = require(\"../BitReader\");\nconst CellType_1 = require(\"../CellType\");\nconst exoticLibrary_1 = require(\"./exoticLibrary\");\nconst exoticMerkleProof_1 = require(\"./exoticMerkleProof\");\nconst exoticMerkleUpdate_1 = require(\"./exoticMerkleUpdate\");\nconst exoticPruned_1 = require(\"./exoticPruned\");\nconst LevelMask_1 = require(\"./LevelMask\");\nfunction resolvePruned(bits, refs) {\n    // Parse pruned cell\n    let pruned = (0, exoticPruned_1.exoticPruned)(bits, refs);\n    // Calculate parameters\n    let depths = [];\n    let hashes = [];\n    let mask = new LevelMask_1.LevelMask(pruned.mask);\n    for (let i = 0; i < pruned.pruned.length; i++) {\n        depths.push(pruned.pruned[i].depth);\n        hashes.push(pruned.pruned[i].hash);\n    }\n    return {\n        type: CellType_1.CellType.PrunedBranch,\n        depths,\n        hashes,\n        mask\n    };\n}\nfunction resolveLibrary(bits, refs) {\n    // Parse library cell\n    let pruned = (0, exoticLibrary_1.exoticLibrary)(bits, refs);\n    // Calculate parameters\n    let depths = [];\n    let hashes = [];\n    let mask = new LevelMask_1.LevelMask();\n    return {\n        type: CellType_1.CellType.Library,\n        depths,\n        hashes,\n        mask\n    };\n}\nfunction resolveMerkleProof(bits, refs) {\n    // Parse merkle proof cell\n    let merkleProof = (0, exoticMerkleProof_1.exoticMerkleProof)(bits, refs);\n    // Calculate parameters\n    let depths = [];\n    let hashes = [];\n    let mask = new LevelMask_1.LevelMask(refs[0].level() >> 1);\n    return {\n        type: CellType_1.CellType.MerkleProof,\n        depths,\n        hashes,\n        mask\n    };\n}\nfunction resolveMerkleUpdate(bits, refs) {\n    // Parse merkle proof cell\n    let merkleUpdate = (0, exoticMerkleUpdate_1.exoticMerkleUpdate)(bits, refs);\n    // Calculate parameters\n    let depths = [];\n    let hashes = [];\n    let mask = new LevelMask_1.LevelMask((refs[0].level() | refs[1].level()) >> 1);\n    return {\n        type: CellType_1.CellType.MerkleUpdate,\n        depths,\n        hashes,\n        mask\n    };\n}\nfunction resolveExotic(bits, refs) {\n    let reader = new BitReader_1.BitReader(bits);\n    let type = reader.preloadUint(8);\n    if (type === 1) {\n        return resolvePruned(bits, refs);\n    }\n    if (type === 2) {\n        return resolveLibrary(bits, refs);\n    }\n    if (type === 3) {\n        return resolveMerkleProof(bits, refs);\n    }\n    if (type === 4) {\n        return resolveMerkleUpdate(bits, refs);\n    }\n    throw Error('Invalid exotic cell type: ' + type);\n}\nexports.resolveExotic = resolveExotic;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRepr = exports.getBitsDescriptor = exports.getRefsDescriptor = void 0;\nconst CellType_1 = require(\"../CellType\");\nconst paddedBits_1 = require(\"../utils/paddedBits\");\nfunction getRefsDescriptor(refs, level, type) {\n    return refs.length + (type !== CellType_1.CellType.Ordinary ? 1 : 0) * 8 + level * 32;\n}\nexports.getRefsDescriptor = getRefsDescriptor;\nfunction getBitsDescriptor(bits) {\n    let len = bits.length;\n    return Math.ceil(len / 8) + Math.floor(len / 8);\n}\nexports.getBitsDescriptor = getBitsDescriptor;\nfunction getRepr(bits, refs, level, type) {\n    // Allocate\n    const bitsLen = Math.ceil(bits.length / 8);\n    const repr = Buffer.alloc(2 + bitsLen + (2 + 32) * refs.length);\n    // Write descriptors\n    let reprCursor = 0;\n    repr[reprCursor++] = getRefsDescriptor(refs, level, type);\n    repr[reprCursor++] = getBitsDescriptor(bits);\n    // Write bits\n    (0, paddedBits_1.bitsToPaddedBuffer)(bits).copy(repr, reprCursor);\n    reprCursor += bitsLen;\n    // Write refs\n    for (const c of refs) {\n        let childDepth;\n        if (type == CellType_1.CellType.MerkleProof || type == CellType_1.CellType.MerkleUpdate) {\n            childDepth = c.depth(level + 1);\n        }\n        else {\n            childDepth = c.depth(level);\n        }\n        repr[reprCursor++] = Math.floor(childDepth / 256);\n        repr[reprCursor++] = childDepth % 256;\n    }\n    for (const c of refs) {\n        let childHash;\n        if (type == CellType_1.CellType.MerkleProof || type == CellType_1.CellType.MerkleUpdate) {\n            childHash = c.hash(level + 1);\n        }\n        else {\n            childHash = c.hash(level);\n        }\n        childHash.copy(repr, reprCursor);\n        reprCursor += 32;\n    }\n    // Result\n    return repr;\n}\nexports.getRepr = getRepr;\n", "import { packedValue, EncodingType, FormatType } from \"./custom_types\";\n/**\n * Return type for all the *2packed functions\n */\nconst b64Tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nconst arraybuffer_error = \"ARRAYBUFFER not supported by this environment\";\nconst uint8array_error = \"UINT8ARRAY not supported by this environment\";\n\n/**\n * Convert a string to an array of words.\n *\n * There is a known bug with an odd number of existing bytes and using a UTF-16 encoding.  However, this function is\n * used such that the existing bytes are always a result of a previous UTF-16 str2packed call and therefore there \n * should never be an odd number of existing bytes.\n\n * @param str Unicode string to be converted to binary representation.\n * @param utfType The Unicode type to use to encode the source string.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked`.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction str2packed(\n  str: string,\n  utfType: EncodingType,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let codePnt,\n    codePntArr,\n    byteCnt = 0,\n    i,\n    j,\n    intOffset,\n    byteOffset,\n    shiftModifier,\n    transposeBytes;\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3;\n\n  if (\"UTF8\" === utfType) {\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n    for (i = 0; i < str.length; i += 1) {\n      codePnt = str.charCodeAt(i);\n      codePntArr = [];\n\n      if (0x80 > codePnt) {\n        codePntArr.push(codePnt);\n      } else if (0x800 > codePnt) {\n        codePntArr.push(0xc0 | (codePnt >>> 6));\n        codePntArr.push(0x80 | (codePnt & 0x3f));\n      } else if (0xd800 > codePnt || 0xe000 <= codePnt) {\n        codePntArr.push(0xe0 | (codePnt >>> 12), 0x80 | ((codePnt >>> 6) & 0x3f), 0x80 | (codePnt & 0x3f));\n      } else {\n        i += 1;\n        codePnt = 0x10000 + (((codePnt & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n        codePntArr.push(\n          0xf0 | (codePnt >>> 18),\n          0x80 | ((codePnt >>> 12) & 0x3f),\n          0x80 | ((codePnt >>> 6) & 0x3f),\n          0x80 | (codePnt & 0x3f)\n        );\n      }\n\n      for (j = 0; j < codePntArr.length; j += 1) {\n        byteOffset = byteCnt + existingByteLen;\n        intOffset = byteOffset >>> 2;\n        while (packed.length <= intOffset) {\n          packed.push(0);\n        }\n        /* Known bug kicks in here */\n        packed[intOffset] |= codePntArr[j] << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n        byteCnt += 1;\n      }\n    }\n  } else {\n    /* UTF16BE or UTF16LE */\n    shiftModifier = bigEndianMod === -1 ? 2 : 0;\n    /* Internally strings are UTF-16BE so transpose bytes under two conditions:\n     * need LE and not switching endianness due to SHA-3\n     * need BE and switching endianness due to SHA-3 */\n    transposeBytes = (\"UTF16LE\" === utfType && bigEndianMod !== 1) || (\"UTF16LE\" !== utfType && bigEndianMod === 1);\n    for (i = 0; i < str.length; i += 1) {\n      codePnt = str.charCodeAt(i);\n      if (transposeBytes === true) {\n        j = codePnt & 0xff;\n        codePnt = (j << 8) | (codePnt >>> 8);\n      }\n\n      byteOffset = byteCnt + existingByteLen;\n      intOffset = byteOffset >>> 2;\n      while (packed.length <= intOffset) {\n        packed.push(0);\n      }\n      packed[intOffset] |= codePnt << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n      byteCnt += 2;\n    }\n  }\n  return { value: packed, binLen: byteCnt * 8 + existingPackedLen };\n}\n\n/**\n * Convert a hex string to an array of words.\n *\n * @param str Hexadecimal string to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction hex2packed(\n  str: string,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let i, num, intOffset, byteOffset;\n\n  if (0 !== str.length % 2) {\n    throw new Error(\"String of HEX type must be in byte increments\");\n  }\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < str.length; i += 2) {\n    num = parseInt(str.substr(i, 2), 16);\n    if (!isNaN(num)) {\n      byteOffset = (i >>> 1) + existingByteLen;\n      intOffset = byteOffset >>> 2;\n      while (packed.length <= intOffset) {\n        packed.push(0);\n      }\n      packed[intOffset] |= num << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n    } else {\n      throw new Error(\"String of HEX type contains invalid characters\");\n    }\n  }\n\n  return { value: packed, binLen: str.length * 4 + existingPackedLen };\n}\n\n/**\n * Convert a string of raw bytes to an array of words.\n *\n * @param str String of raw bytes to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction bytes2packed(\n  str: string,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let codePnt, i, intOffset, byteOffset;\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < str.length; i += 1) {\n    codePnt = str.charCodeAt(i);\n\n    byteOffset = i + existingByteLen;\n    intOffset = byteOffset >>> 2;\n    if (packed.length <= intOffset) {\n      packed.push(0);\n    }\n    packed[intOffset] |= codePnt << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n  }\n\n  return { value: packed, binLen: str.length * 8 + existingPackedLen };\n}\n\n/**\n * Convert a base-64 string to an array of words.\n *\n * @param str Base64-encoded string to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction b642packed(\n  str: string,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let byteCnt = 0,\n    index,\n    i,\n    j,\n    tmpInt,\n    strPart,\n    intOffset,\n    byteOffset;\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0,\n    firstEqual = str.indexOf(\"=\");\n\n  if (-1 === str.search(/^[a-zA-Z0-9=+/]+$/)) {\n    throw new Error(\"Invalid character in base-64 string\");\n  }\n\n  str = str.replace(/=/g, \"\");\n  if (-1 !== firstEqual && firstEqual < str.length) {\n    throw new Error(\"Invalid '=' found in base-64 string\");\n  }\n\n  for (i = 0; i < str.length; i += 4) {\n    strPart = str.substr(i, 4);\n    tmpInt = 0;\n\n    for (j = 0; j < strPart.length; j += 1) {\n      index = b64Tab.indexOf(strPart.charAt(j));\n      tmpInt |= index << (18 - 6 * j);\n    }\n\n    for (j = 0; j < strPart.length - 1; j += 1) {\n      byteOffset = byteCnt + existingByteLen;\n      intOffset = byteOffset >>> 2;\n      while (packed.length <= intOffset) {\n        packed.push(0);\n      }\n      packed[intOffset] |=\n        ((tmpInt >>> (16 - j * 8)) & 0xff) << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n      byteCnt += 1;\n    }\n  }\n\n  return { value: packed, binLen: byteCnt * 8 + existingPackedLen };\n}\n\n/**\n * Convert an Uint8Array to an array of words.\n *\n * @param arr Uint8Array to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction uint8array2packed(\n  arr: Uint8Array,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let i, intOffset, byteOffset;\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < arr.length; i += 1) {\n    byteOffset = i + existingByteLen;\n    intOffset = byteOffset >>> 2;\n    if (packed.length <= intOffset) {\n      packed.push(0);\n    }\n    packed[intOffset] |= arr[i] << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n  }\n\n  return { value: packed, binLen: arr.length * 8 + existingPackedLen };\n}\n\n/**\n * Convert an ArrayBuffer to an array of words\n *\n * @param arr ArrayBuffer to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction arraybuffer2packed(\n  arr: ArrayBuffer,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  return uint8array2packed(new Uint8Array(arr), existingPacked, existingPackedLen, bigEndianMod);\n}\n\n/**\n * Function that takes an input format and UTF encoding and returns the appropriate function used to convert the input.\n *\n * @param format The format of the input to be converted\n * @param utfType The string encoding to use for TEXT inputs.\n * @param bigEndianMod Modifier for whether hash function is big or small endian\n * @returns Function that will convert an input to a packed int array.\n */\nexport function getStrConverter(\n  format: FormatType,\n  utfType: EncodingType,\n  bigEndianMod: -1 | 1\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n): (input: any, existingBin?: number[], existingBinLen?: number) => packedValue {\n  /* Validate encoding */\n  switch (utfType) {\n    case \"UTF8\":\n    /* Fallthrough */\n    case \"UTF16BE\":\n    /* Fallthrough */\n    case \"UTF16LE\":\n      /* Fallthrough */\n      break;\n    default:\n      throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n  }\n\n  /* Map inputFormat to the appropriate converter */\n  switch (format) {\n    case \"HEX\":\n      /**\n       * @param str String of hexadecimal bytes to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (str: string, existingBin?: number[], existingBinLen?: number): packedValue {\n        return hex2packed(str, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"TEXT\":\n      /**\n       * @param str Unicode string to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (str: string, existingBin?: number[], existingBinLen?: number): packedValue {\n        return str2packed(str, utfType, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"B64\":\n      /**\n       * @param str Base64-encoded string to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (str: string, existingBin?: number[], existingBinLen?: number): packedValue {\n        return b642packed(str, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"BYTES\":\n      /**\n       * @param str String of raw bytes to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (str: string, existingBin?: number[], existingBinLen?: number): packedValue {\n        return bytes2packed(str, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"ARRAYBUFFER\":\n      try {\n        new ArrayBuffer(0);\n      } catch (ignore) {\n        throw new Error(arraybuffer_error);\n      }\n      /**\n       * @param arr ArrayBuffer to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (arr: ArrayBuffer, existingBin?: number[], existingBinLen?: number): packedValue {\n        return arraybuffer2packed(arr, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"UINT8ARRAY\":\n      try {\n        new Uint8Array(0);\n      } catch (ignore) {\n        throw new Error(uint8array_error);\n      }\n      /**\n       * @param arr Uint8Array to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (arr: Uint8Array, existingBin?: number[], existingBinLen?: number): packedValue {\n        return uint8array2packed(arr, existingBin, existingBinLen, bigEndianMod);\n      };\n    default:\n      throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\");\n  }\n}\n\n/**\n * Convert an array of words to a hexadecimal string.\n *\n * toString() won't work here because it removes preceding zeros (e.g. 0x00000001.toString === \"1\" rather than\n * \"00000001\" and 0.toString(16) === \"0\" rather than \"00\").\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @param formatOpts Hashmap containing validated output formatting options.\n * @returns Hexadecimal representation of `packed`.\n */\nexport function packed2hex(\n  packed: number[],\n  outputLength: number,\n  bigEndianMod: -1 | 1,\n  formatOpts: { outputUpper: boolean; b64Pad: string }\n): string {\n  const hex_tab = \"0123456789abcdef\";\n  let str = \"\",\n    i,\n    srcByte;\n\n  const length = outputLength / 8,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < length; i += 1) {\n    /* The below is more than a byte but it gets taken care of later */\n    srcByte = packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)));\n    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);\n  }\n\n  return formatOpts[\"outputUpper\"] ? str.toUpperCase() : str;\n}\n\n/**\n * Convert an array of words to a base-64 string.\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @param formatOpts Hashmap containing validated output formatting options.\n * @returns Base64-encoded representation of `packed`.\n */\nexport function packed2b64(\n  packed: number[],\n  outputLength: number,\n  bigEndianMod: -1 | 1,\n  formatOpts: { outputUpper: boolean; b64Pad: string }\n): string {\n  let str = \"\",\n    i,\n    j,\n    triplet,\n    int1,\n    int2;\n\n  const length = outputLength / 8,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < length; i += 3) {\n    int1 = i + 1 < length ? packed[(i + 1) >>> 2] : 0;\n    int2 = i + 2 < length ? packed[(i + 2) >>> 2] : 0;\n    triplet =\n      (((packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)))) & 0xff) << 16) |\n      (((int1 >>> (8 * (shiftModifier + bigEndianMod * ((i + 1) % 4)))) & 0xff) << 8) |\n      ((int2 >>> (8 * (shiftModifier + bigEndianMod * ((i + 2) % 4)))) & 0xff);\n    for (j = 0; j < 4; j += 1) {\n      if (i * 8 + j * 6 <= outputLength) {\n        str += b64Tab.charAt((triplet >>> (6 * (3 - j))) & 0x3f);\n      } else {\n        str += formatOpts[\"b64Pad\"];\n      }\n    }\n  }\n  return str;\n}\n\n/**\n * Convert an array of words to raw bytes string.\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Raw bytes representation of `packed`.\n */\nexport function packed2bytes(packed: number[], outputLength: number, bigEndianMod: -1 | 1): string {\n  let str = \"\",\n    i,\n    srcByte;\n\n  const length = outputLength / 8,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < length; i += 1) {\n    srcByte = (packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)))) & 0xff;\n    str += String.fromCharCode(srcByte);\n  }\n\n  return str;\n}\n\n/**\n * Convert an array of words to an ArrayBuffer.\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns An ArrayBuffer containing bytes from `packed.\n */\nexport function packed2arraybuffer(packed: number[], outputLength: number, bigEndianMod: -1 | 1): ArrayBuffer {\n  let i;\n  const length = outputLength / 8,\n    retVal = new ArrayBuffer(length),\n    arrView = new Uint8Array(retVal),\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < length; i += 1) {\n    arrView[i] = (packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)))) & 0xff;\n  }\n\n  return retVal;\n}\n\n/**\n * Convert an array of words to an Uint8Array.\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns An Uint8Array containing bytes from `packed.\n */\nexport function packed2uint8array(packed: number[], outputLength: number, bigEndianMod: -1 | 1): Uint8Array {\n  let i;\n  const length = outputLength / 8,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0,\n    retVal = new Uint8Array(length);\n\n  for (i = 0; i < length; i += 1) {\n    retVal[i] = (packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)))) & 0xff;\n  }\n\n  return retVal;\n}\n\n/**\n * Function that takes an output format and associated parameters and returns a function that converts packed integers\n * to that format.\n *\n * @param format The desired output formatting.\n * @param outputBinLen Output length in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @param outputOptions Hashmap of output formatting options\n * @returns Function that will convert a packed integer array to desired format.\n */\nexport function getOutputConverter(\n  format: \"HEX\" | \"B64\" | \"BYTES\" | \"ARRAYBUFFER\" | \"UINT8ARRAY\",\n  outputBinLen: number,\n  bigEndianMod: -1 | 1,\n  outputOptions: { outputUpper: boolean; b64Pad: string }\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n): (binarray: number[]) => any {\n  switch (format) {\n    case \"HEX\":\n      return function (binarray): string {\n        return packed2hex(binarray, outputBinLen, bigEndianMod, outputOptions);\n      };\n    case \"B64\":\n      return function (binarray): string {\n        return packed2b64(binarray, outputBinLen, bigEndianMod, outputOptions);\n      };\n    case \"BYTES\":\n      return function (binarray): string {\n        return packed2bytes(binarray, outputBinLen, bigEndianMod);\n      };\n    case \"ARRAYBUFFER\":\n      try {\n        /* Need to test ArrayBuffer support */\n        new ArrayBuffer(0);\n      } catch (ignore) {\n        throw new Error(arraybuffer_error);\n      }\n      return function (binarray): ArrayBuffer {\n        return packed2arraybuffer(binarray, outputBinLen, bigEndianMod);\n      };\n    case \"UINT8ARRAY\":\n      try {\n        /* Need to test Uint8Array support */\n        new Uint8Array(0);\n      } catch (ignore) {\n        throw new Error(uint8array_error);\n      }\n      return function (binarray): Uint8Array {\n        return packed2uint8array(binarray, outputBinLen, bigEndianMod);\n      };\n    default:\n      throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\");\n  }\n}\n", "import { getStrConverter, getOutputConverter } from \"./converters\";\n\nimport {\n  FormatType,\n  EncodingType,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n  packedValue,\n  GenericInputType,\n} from \"./custom_types\";\n\nexport const TWO_PWR_32 = 4294967296;\n\n/* Constant used in SHA-2 families */\nexport const K_sha2 = [\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2,\n];\n\n/* Constant used in SHA-2 families */\nexport const H_trunc = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n\n/* Constant used in SHA-2 families */\nexport const H_full = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n\nexport const sha_variant_error = \"Chosen SHA variant is not supported\";\nexport const mac_rounds_error = \"Cannot set numRounds with MAC\";\n\n/**\n * Concatenates 2 packed arrays. Clobbers array `a`.\n *\n * @param a First array to concatenate.\n * @param b Second array to concatenate.\n * @returns The concatentation of `a` + `b`.\n */\nexport function packedLEConcat(a: packedValue, b: packedValue): packedValue {\n  let i, arrOffset;\n  const aByteLen = a[\"binLen\"] >>> 3,\n    bByteLen = b[\"binLen\"] >>> 3,\n    leftShiftAmount = aByteLen << 3,\n    rightShiftAmount = (4 - aByteLen) << 3;\n\n  /* If a only contains \"full\" integers, we can just use concat which is so much easier */\n  if (aByteLen % 4 !== 0) {\n    for (i = 0; i < bByteLen; i += 4) {\n      arrOffset = (aByteLen + i) >>> 2;\n      /* Left shift chops off bits over 32-bits */\n      a[\"value\"][arrOffset] |= b[\"value\"][i >>> 2] << leftShiftAmount;\n      a[\"value\"].push(0);\n      a[\"value\"][arrOffset + 1] |= b[\"value\"][i >>> 2] >>> rightShiftAmount;\n    }\n\n    /* Since an unconditional push was performed above, we may have pushed an extra value if it could have been\n       encoded without it.  Check if popping an int off (reducing total length by 4 bytes) is still bigger than the\n       needed size. */\n    if ((a[\"value\"].length << 2) - 4 >= bByteLen + aByteLen) {\n      a[\"value\"].pop();\n    }\n\n    return { value: a[\"value\"], binLen: a[\"binLen\"] + b[\"binLen\"] };\n  } else {\n    return { value: a[\"value\"].concat(b[\"value\"]), binLen: a[\"binLen\"] + b[\"binLen\"] };\n  }\n}\n\n/**\n * Validate hash list containing output formatting options, ensuring presence of every option or adding the default\n * value.\n *\n * @param options Hashmap of output formatting options from user.\n * @returns Validated hashmap containing output formatting options.\n */\nexport function getOutputOpts(options?: {\n  outputUpper?: boolean;\n  b64Pad?: string;\n  shakeLen?: number;\n  outputLen?: number;\n}): { outputUpper: boolean; b64Pad: string; outputLen: number } {\n  const retVal = { outputUpper: false, b64Pad: \"=\", outputLen: -1 },\n    outputOptions: { outputUpper?: boolean; b64Pad?: string; shakeLen?: number; outputLen?: number } = options || {},\n    lenErrstr = \"Output length must be a multiple of 8\";\n\n  retVal[\"outputUpper\"] = outputOptions[\"outputUpper\"] || false;\n\n  if (outputOptions[\"b64Pad\"]) {\n    retVal[\"b64Pad\"] = outputOptions[\"b64Pad\"];\n  }\n\n  if (outputOptions[\"outputLen\"]) {\n    if (outputOptions[\"outputLen\"] % 8 !== 0) {\n      throw new Error(lenErrstr);\n    }\n    retVal[\"outputLen\"] = outputOptions[\"outputLen\"];\n  } else if (outputOptions[\"shakeLen\"]) {\n    if (outputOptions[\"shakeLen\"] % 8 !== 0) {\n      throw new Error(lenErrstr);\n    }\n    retVal[\"outputLen\"] = outputOptions[\"shakeLen\"];\n  }\n\n  if (\"boolean\" !== typeof retVal[\"outputUpper\"]) {\n    throw new Error(\"Invalid outputUpper formatting option\");\n  }\n\n  if (\"string\" !== typeof retVal[\"b64Pad\"]) {\n    throw new Error(\"Invalid b64Pad formatting option\");\n  }\n\n  return retVal;\n}\n\n/**\n * Parses an external constructor object and returns a packed number, if possible.\n *\n * @param key The human-friendly key name to prefix any errors with\n * @param value The input value object to parse\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @param fallback Fallback value if `value` is undefined.  If not present and `value` is undefined, an Error is thrown\n */\nexport function parseInputOption(\n  key: string,\n  value: GenericInputType | undefined,\n  bigEndianMod: -1 | 1,\n  fallback?: packedValue\n): packedValue {\n  const errStr = key + \" must include a value and format\";\n  if (!value) {\n    if (!fallback) {\n      throw new Error(errStr);\n    }\n    return fallback;\n  }\n\n  if (typeof value[\"value\"] === \"undefined\" || !value[\"format\"]) {\n    throw new Error(errStr);\n  }\n\n  return getStrConverter(\n    value[\"format\"],\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore - the value of encoding gets value checked by getStrConverter\n    value[\"encoding\"] || \"UTF8\",\n    bigEndianMod\n  )(value[\"value\"]);\n}\n\nexport abstract class jsSHABase<StateT, VariantT> {\n  /**\n   * @param variant The desired SHA variant.\n   * @param inputFormat The input format to be used in future `update` calls.\n   * @param options Hashmap of extra input options.\n   */\n  /* Needed inputs */\n  protected readonly shaVariant: VariantT;\n  protected readonly inputFormat: FormatType;\n  protected readonly utfType: EncodingType;\n  protected readonly numRounds: number;\n\n  /* State */\n  protected abstract intermediateState: StateT;\n  protected keyWithIPad: number[];\n  protected keyWithOPad: number[];\n  protected remainder: number[];\n  protected remainderLen: number;\n  protected updateCalled: boolean;\n  protected processedLen: number;\n  protected macKeySet: boolean;\n\n  /* Variant specifics */\n  protected abstract readonly variantBlockSize: number;\n  protected abstract readonly bigEndianMod: -1 | 1;\n  protected abstract readonly outputBinLen: number;\n  protected abstract readonly isVariableLen: boolean;\n  protected abstract readonly HMACSupported: boolean;\n\n  /* Functions */\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected abstract readonly converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  protected abstract readonly roundFunc: (block: number[], H: StateT) => StateT;\n  protected abstract readonly finalizeFunc: (\n    remainder: number[],\n    remainderBinLen: number,\n    processedBinLen: number,\n    H: StateT,\n    outputLen: number\n  ) => number[];\n  protected abstract readonly stateCloneFunc: (state: StateT) => StateT;\n  protected abstract readonly newStateFunc: (variant: VariantT) => StateT;\n  protected abstract readonly getMAC: ((options: { outputLen: number }) => number[]) | null;\n\n  protected constructor(variant: VariantT, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  protected constructor(variant: VariantT, inputFormat: FormatNoTextType, options?: FixedLengthOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected constructor(variant: any, inputFormat: any, options?: any) {\n    const inputOptions = options || {};\n    this.inputFormat = inputFormat;\n\n    this.utfType = inputOptions[\"encoding\"] || \"UTF8\";\n    this.numRounds = inputOptions[\"numRounds\"] || 1;\n\n    /* eslint-disable-next-line @typescript-eslint/ban-ts-ignore */\n    // @ts-ignore - The spec actually says ToString is called on the first parseInt argument so it's OK to use it here\n    // to check if an arugment is an integer. This cheat would break if it's used to get the value of the argument.\n    if (isNaN(this.numRounds) || this.numRounds !== parseInt(this.numRounds, 10) || 1 > this.numRounds) {\n      throw new Error(\"numRounds must a integer >= 1\");\n    }\n\n    this.shaVariant = variant;\n    this.remainder = [];\n    this.remainderLen = 0;\n    this.updateCalled = false;\n    this.processedLen = 0;\n    this.macKeySet = false;\n    this.keyWithIPad = [];\n    this.keyWithOPad = [];\n  }\n\n  /**\n   * Hashes as many blocks as possible.  Stores the rest for either a future update or getHash call.\n   *\n   * @param srcString The input to be hashed.\n   */\n  update(srcString: string | ArrayBuffer | Uint8Array): void {\n    let i,\n      updateProcessedLen = 0;\n    const variantBlockIntInc = this.variantBlockSize >>> 5,\n      convertRet = this.converterFunc(srcString, this.remainder, this.remainderLen),\n      chunkBinLen = convertRet[\"binLen\"],\n      chunk = convertRet[\"value\"],\n      chunkIntLen = chunkBinLen >>> 5;\n\n    for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {\n      if (updateProcessedLen + this.variantBlockSize <= chunkBinLen) {\n        this.intermediateState = this.roundFunc(chunk.slice(i, i + variantBlockIntInc), this.intermediateState);\n        updateProcessedLen += this.variantBlockSize;\n      }\n    }\n    this.processedLen += updateProcessedLen;\n    this.remainder = chunk.slice(updateProcessedLen >>> 5);\n    this.remainderLen = chunkBinLen % this.variantBlockSize;\n    this.updateCalled = true;\n  }\n\n  /**\n   * Returns the desired SHA hash of the input fed in via `update` calls.\n   *\n   * @param format The desired output formatting\n   * @param options Hashmap of output formatting options. `outputLen` must be specified for variable length hashes.\n   *   `outputLen` replaces the now deprecated `shakeLen` key.\n   * @returns The hash in the format specified.\n   */\n  getHash(format: \"HEX\", options?: { outputUpper?: boolean; outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"B64\", options?: { b64Pad?: string; outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"BYTES\", options?: { outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"UINT8ARRAY\", options?: { outputLen?: number; shakeLen?: number }): Uint8Array;\n  getHash(format: \"ARRAYBUFFER\", options?: { outputLen?: number; shakeLen?: number }): ArrayBuffer;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getHash(format: any, options?: any): any {\n    let i,\n      finalizedState,\n      outputBinLen = this.outputBinLen;\n\n    const outputOptions = getOutputOpts(options);\n\n    if (this.isVariableLen) {\n      if (outputOptions[\"outputLen\"] === -1) {\n        throw new Error(\"Output length must be specified in options\");\n      }\n      outputBinLen = outputOptions[\"outputLen\"];\n    }\n\n    const formatFunc = getOutputConverter(format, outputBinLen, this.bigEndianMod, outputOptions);\n    if (this.macKeySet && this.getMAC) {\n      return formatFunc(this.getMAC(outputOptions));\n    }\n\n    finalizedState = this.finalizeFunc(\n      this.remainder.slice(),\n      this.remainderLen,\n      this.processedLen,\n      this.stateCloneFunc(this.intermediateState),\n      outputBinLen\n    );\n    for (i = 1; i < this.numRounds; i += 1) {\n      /* Need to mask out bits that should be zero due to output not being a multiple of 32 */\n      if (this.isVariableLen && outputBinLen % 32 !== 0) {\n        finalizedState[finalizedState.length - 1] &= 0x00ffffff >>> (24 - (outputBinLen % 32));\n      }\n      finalizedState = this.finalizeFunc(\n        finalizedState,\n        outputBinLen,\n        0,\n        this.newStateFunc(this.shaVariant),\n        outputBinLen\n      );\n    }\n\n    return formatFunc(finalizedState);\n  }\n\n  /**\n   * Sets the HMAC key for an eventual `getHMAC` call.  Must be called immediately after jsSHA object instantiation.\n   *\n   * @param key The key used to calculate the HMAC\n   * @param inputFormat The format of key.\n   * @param options Hashmap of extra input options.\n   */\n  setHMACKey(key: string, inputFormat: \"TEXT\", options?: { encoding?: EncodingType }): void;\n  setHMACKey(key: string, inputFormat: \"B64\" | \"HEX\" | \"BYTES\"): void;\n  setHMACKey(key: ArrayBuffer, inputFormat: \"ARRAYBUFFER\"): void;\n  setHMACKey(key: Uint8Array, inputFormat: \"UINT8ARRAY\"): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  setHMACKey(key: any, inputFormat: any, options?: any): void {\n    if (!this.HMACSupported) {\n      throw new Error(\"Variant does not support HMAC\");\n    }\n\n    if (this.updateCalled) {\n      throw new Error(\"Cannot set MAC key after calling update\");\n    }\n\n    const keyOptions = options || {},\n      keyConverterFunc = getStrConverter(inputFormat, keyOptions[\"encoding\"] || \"UTF8\", this.bigEndianMod);\n\n    this._setHMACKey(keyConverterFunc(key));\n  }\n\n  /**\n   * Internal function that sets the MAC key.\n   *\n   * @param key The packed MAC key to use\n   */\n  protected _setHMACKey(key: packedValue): void {\n    const blockByteSize = this.variantBlockSize >>> 3,\n      lastArrayIndex = blockByteSize / 4 - 1;\n    let i;\n    if (this.numRounds !== 1) {\n      throw new Error(mac_rounds_error);\n    }\n\n    if (this.macKeySet) {\n      throw new Error(\"MAC key already set\");\n    }\n\n    /* Figure out what to do with the key based on its size relative to\n     * the hash's block size */\n    if (blockByteSize < key[\"binLen\"] / 8) {\n      key[\"value\"] = this.finalizeFunc(\n        key[\"value\"],\n        key[\"binLen\"],\n        0,\n        this.newStateFunc(this.shaVariant),\n        this.outputBinLen\n      );\n    }\n    while (key[\"value\"].length <= lastArrayIndex) {\n      key[\"value\"].push(0);\n    }\n    /* Create ipad and opad */\n    for (i = 0; i <= lastArrayIndex; i += 1) {\n      this.keyWithIPad[i] = key[\"value\"][i] ^ 0x36363636;\n      this.keyWithOPad[i] = key[\"value\"][i] ^ 0x5c5c5c5c;\n    }\n\n    this.intermediateState = this.roundFunc(this.keyWithIPad, this.intermediateState);\n    this.processedLen = this.variantBlockSize;\n\n    this.macKeySet = true;\n  }\n\n  /**\n   * Returns the the HMAC in the specified format using the key given by a previous `setHMACKey` call.\n   *\n   * @param format The desired output formatting.\n   * @param options Hashmap of extra outputs options.\n   * @returns The HMAC in the format specified.\n   */\n  getHMAC(format: \"HEX\", options?: { outputUpper?: boolean }): string;\n  getHMAC(format: \"B64\", options?: { b64Pad?: string }): string;\n  getHMAC(format: \"BYTES\"): string;\n  getHMAC(format: \"UINT8ARRAY\"): Uint8Array;\n  getHMAC(format: \"ARRAYBUFFER\"): ArrayBuffer;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getHMAC(format: any, options?: any): any {\n    const outputOptions = getOutputOpts(options),\n      formatFunc = getOutputConverter(format, this.outputBinLen, this.bigEndianMod, outputOptions);\n\n    return formatFunc(this._getHMAC());\n  }\n\n  /**\n   * Internal function that returns the \"raw\" HMAC\n   */\n  protected _getHMAC(): number[] {\n    let finalizedState;\n\n    if (!this.macKeySet) {\n      throw new Error(\"Cannot call getHMAC without first setting MAC key\");\n    }\n\n    const firstHash = this.finalizeFunc(\n      this.remainder.slice(),\n      this.remainderLen,\n      this.processedLen,\n      this.stateCloneFunc(this.intermediateState),\n      this.outputBinLen\n    );\n    finalizedState = this.roundFunc(this.keyWithOPad, this.newStateFunc(this.shaVariant));\n    finalizedState = this.finalizeFunc(\n      firstHash,\n      this.outputBinLen,\n      this.variantBlockSize,\n      finalizedState,\n      this.outputBinLen\n    );\n\n    return finalizedState;\n  }\n}\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "/*\n * Note 1: All the functions in this file guarantee only that the bottom 32-bits of the return value are correct.\n * JavaScript is flakey when it comes to bit operations and a '1' in the highest order bit of a 32-bit number causes\n * it to be interpreted as a negative number per two's complement.\n *\n * Note 2: Per the ECMAScript spec, all JavaScript operations mask the shift amount by 0x1F.  This results in weird\n * cases like 1 << 32 == 1 and 1 << 33 === 1 << 1 === 2\n */\n\n/**\n * The 32-bit implementation of circular rotate left.\n *\n * @param x The 32-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted left circularly by `n` bits\n */\nexport function rotl_32(x: number, n: number): number {\n  return (x << n) | (x >>> (32 - n));\n}\n\n/**\n * The 32-bit implementation of circular rotate right.\n *\n * @param x The 32-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted right circularly by `n` bits\n */\nfunction rotr_32(x: number, n: number): number {\n  return (x >>> n) | (x << (32 - n));\n}\n\n/**\n * The 32-bit implementation of shift right.\n *\n * @param x The 32-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted by `n` bits.\n */\nfunction shr_32(x: number, n: number): number {\n  return x >>> n;\n}\n\n/**\n * The 32-bit implementation of the NIST specified Parity function.\n *\n * @param x The first 32-bit integer argument.\n * @param y The second 32-bit integer argument.\n * @param z The third 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function parity_32(x: number, y: number, z: number): number {\n  return x ^ y ^ z;\n}\n\n/**\n * The 32-bit implementation of the NIST specified Ch function.\n *\n * @param x The first 32-bit integer argument.\n * @param y The second 32-bit integer argument.\n * @param z The third 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function ch_32(x: number, y: number, z: number): number {\n  return (x & y) ^ (~x & z);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Maj function.\n *\n * @param x The first 32-bit integer argument.\n * @param y The second 32-bit integer argument.\n * @param z The third 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function maj_32(x: number, y: number, z: number): number {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Sigma0 function.\n *\n * @param x The 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function sigma0_32(x: number): number {\n  return rotr_32(x, 2) ^ rotr_32(x, 13) ^ rotr_32(x, 22);\n}\n\n/**\n * Add two 32-bit integers.\n *\n * This uses 16-bit operations internally to work around sign problems due to JavaScript's lack of uint32 support.\n *\n * @param a The first 32-bit integer argument to be added.\n * @param b The second 32-bit integer argument to be added.\n * @returns The sum of `a` + `b`.\n */\nexport function safeAdd_32_2(a: number, b: number): number {\n  const lsw = (a & 0xffff) + (b & 0xffff),\n    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);\n\n  return ((msw & 0xffff) << 16) | (lsw & 0xffff);\n}\n\n/**\n * Add four 32-bit integers.\n *\n * This uses 16-bit operations internally to work around sign problems due to JavaScript's lack of uint32 support.\n *\n * @param a The first 32-bit integer argument to be added.\n * @param b The second 32-bit integer argument to be added.\n * @param c The third 32-bit integer argument to be added.\n * @param d The fourth 32-bit integer argument to be added.\n * @returns The sum of `a` + `b` + `c` + `d`.\n */\nexport function safeAdd_32_4(a: number, b: number, c: number, d: number): number {\n  const lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff),\n    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (lsw >>> 16);\n\n  return ((msw & 0xffff) << 16) | (lsw & 0xffff);\n}\n\n/**\n * Add five 32-bit integers.\n *\n * This uses 16-bit operations internally to work around sign problems due to JavaScript's lack of uint32 support.\n *\n * @param a The first 32-bit integer argument to be added.\n * @param b The second 32-bit integer argument to be added.\n * @param c The third 32-bit integer argument to be added.\n * @param d The fourth 32-bit integer argument to be added.\n * @param e The fifth 32-bit integer argument to be added.\n * @returns The sum of `a` + `b` + `c` + `d` + `e`.\n */\nexport function safeAdd_32_5(a: number, b: number, c: number, d: number, e: number): number {\n  const lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),\n    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);\n\n  return ((msw & 0xffff) << 16) | (lsw & 0xffff);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Gamma1 function.\n *\n * @param x The 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function gamma1_32(x: number): number {\n  return rotr_32(x, 17) ^ rotr_32(x, 19) ^ shr_32(x, 10);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Gamma0 function.\n *\n * @param x The 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function gamma0_32(x: number): number {\n  return rotr_32(x, 7) ^ rotr_32(x, 18) ^ shr_32(x, 3);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Sigma1 function.\n *\n * @param x The 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function sigma1_32(x: number): number {\n  return rotr_32(x, 6) ^ rotr_32(x, 11) ^ rotr_32(x, 25);\n}\n", "import { jsSHABase, TWO_PWR_32, sha_variant_error, parseInputOption } from \"./common\";\nimport {\n  packedValue,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n} from \"./custom_types\";\nimport { getStrConverter } from \"./converters\";\nimport { ch_32, parity_32, maj_32, rotl_32, safeAdd_32_2, safeAdd_32_5 } from \"./primitives_32\";\n\n/**\n * Gets the state values for the specified SHA variant.\n *\n * @param _variant: Unused\n * @returns The initial state values.\n */\nfunction getNewState(_variant: \"SHA-1\"): number[] {\n  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n}\n\n/**\n * Performs a round of SHA-1 hashing over a 512-byte block.  This clobbers `H`.\n *\n * @param block The binary array representation of the block to hash.\n * @param H The intermediate H values from a previous round.\n * @returns The resulting H values.\n */\nfunction roundSHA1(block: number[], H: number[]): number[] {\n  let a, b, c, d, e, T, t;\n  const W: number[] = [];\n\n  a = H[0];\n  b = H[1];\n  c = H[2];\n  d = H[3];\n  e = H[4];\n\n  for (t = 0; t < 80; t += 1) {\n    if (t < 16) {\n      W[t] = block[t];\n    } else {\n      W[t] = rotl_32(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    if (t < 20) {\n      T = safeAdd_32_5(rotl_32(a, 5), ch_32(b, c, d), e, 0x5a827999, W[t]);\n    } else if (t < 40) {\n      T = safeAdd_32_5(rotl_32(a, 5), parity_32(b, c, d), e, 0x6ed9eba1, W[t]);\n    } else if (t < 60) {\n      T = safeAdd_32_5(rotl_32(a, 5), maj_32(b, c, d), e, 0x8f1bbcdc, W[t]);\n    } else {\n      T = safeAdd_32_5(rotl_32(a, 5), parity_32(b, c, d), e, 0xca62c1d6, W[t]);\n    }\n\n    e = d;\n    d = c;\n    c = rotl_32(b, 30);\n    b = a;\n    a = T;\n  }\n\n  H[0] = safeAdd_32_2(a, H[0]);\n  H[1] = safeAdd_32_2(b, H[1]);\n  H[2] = safeAdd_32_2(c, H[2]);\n  H[3] = safeAdd_32_2(d, H[3]);\n  H[4] = safeAdd_32_2(e, H[4]);\n\n  return H;\n}\n\n/**\n * Finalizes the SHA-1 hash.  This clobbers `remainder` and `H`.\n *\n * @param remainder Any leftover unprocessed packed ints that still need to be processed.\n * @param remainderBinLen The number of bits in `remainder`.\n * @param processedBinLen The number of bits already processed.\n * @param H The intermediate H values from a previous round.\n * @returns The array of integers representing the SHA-1 hash of message.\n */\nfunction finalizeSHA1(remainder: number[], remainderBinLen: number, processedBinLen: number, H: number[]): number[] {\n  let i;\n\n  /* The 65 addition is a hack but it works.  The correct number is\n\t\tactually 72 (64 + 8) but the below math fails if\n\t\tremainderBinLen + 72 % 512 = 0. Since remainderBinLen % 8 = 0,\n\t\t\"shorting\" the addition is OK. */\n  const offset = (((remainderBinLen + 65) >>> 9) << 4) + 15,\n    totalLen = remainderBinLen + processedBinLen;\n  while (remainder.length <= offset) {\n    remainder.push(0);\n  }\n  /* Append '1' at the end of the binary string */\n  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));\n\n  /* Append length of binary string in the position such that the new\n   * length is a multiple of 512.  Logic does not work for even multiples\n   * of 512 but there can never be even multiples of 512. JavaScript\n   * numbers are limited to 2^53 so it's \"safe\" to treat the totalLen as\n   * a 64-bit integer. */\n  remainder[offset] = totalLen & 0xffffffff;\n\n  /* Bitwise operators treat the operand as a 32-bit number so need to\n   * use hacky division and round to get access to upper 32-ish bits */\n  remainder[offset - 1] = (totalLen / TWO_PWR_32) | 0;\n\n  /* This will always be at least 1 full chunk */\n  for (i = 0; i < remainder.length; i += 16) {\n    H = roundSHA1(remainder.slice(i, i + 16), H);\n  }\n\n  return H;\n}\n\nexport default class jsSHA extends jsSHABase<number[], \"SHA-1\"> {\n  intermediateState: number[];\n  variantBlockSize: number;\n  bigEndianMod: -1 | 1;\n  outputBinLen: number;\n  isVariableLen: boolean;\n  HMACSupported: boolean;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  roundFunc: (block: number[], H: number[]) => number[];\n  finalizeFunc: (remainder: number[], remainderBinLen: number, processedBinLen: number, H: number[]) => number[];\n  stateCloneFunc: (state: number[]) => number[];\n  newStateFunc: (variant: \"SHA-1\") => number[];\n  getMAC: () => number[];\n\n  constructor(variant: \"SHA-1\", inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(variant: \"SHA-1\", inputFormat: FormatNoTextType, options?: FixedLengthOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    if (\"SHA-1\" !== variant) {\n      throw new Error(sha_variant_error);\n    }\n    super(variant, inputFormat, options);\n    const resolvedOptions = options || {};\n\n    this.HMACSupported = true;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    this.getMAC = this._getHMAC;\n    this.bigEndianMod = -1;\n    this.converterFunc = getStrConverter(this.inputFormat, this.utfType, this.bigEndianMod);\n    this.roundFunc = roundSHA1;\n    this.stateCloneFunc = function (state: number[]): number[] {\n      return state.slice();\n    };\n    this.newStateFunc = getNewState;\n    this.finalizeFunc = finalizeSHA1;\n\n    this.intermediateState = getNewState(variant);\n    this.variantBlockSize = 512;\n    this.outputBinLen = 160;\n    this.isVariableLen = false;\n\n    if (resolvedOptions[\"hmacKey\"]) {\n      this._setHMACKey(parseInputOption(\"hmacKey\", resolvedOptions[\"hmacKey\"], this.bigEndianMod));\n    }\n  }\n}\n", "import { jsSHABase, TWO_PWR_32, H_full, H_trunc, K_sha2, sha_variant_error, parseInputOption } from \"./common\";\nimport {\n  packedValue,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n} from \"./custom_types\";\nimport { getStrConverter } from \"./converters\";\nimport {\n  ch_32,\n  gamma0_32,\n  gamma1_32,\n  maj_32,\n  safeAdd_32_2,\n  safeAdd_32_4,\n  safeAdd_32_5,\n  sigma0_32,\n  sigma1_32,\n} from \"./primitives_32\";\n\ntype VariantType = \"SHA-224\" | \"SHA-256\";\n\n/**\n * Gets the state values for the specified SHA variant.\n *\n * @param variant: The SHA-256 family variant.\n * @returns The initial state values.\n */\nfunction getNewState256(variant: VariantType): number[] {\n  let retVal;\n\n  if (\"SHA-224\" == variant) {\n    retVal = H_trunc.slice();\n  } else {\n    /* \"SHA-256\" */\n    retVal = H_full.slice();\n  }\n  return retVal;\n}\n\n/**\n * Performs a round of SHA-256 hashing over a block. This clobbers `H`.\n *\n * @param block The binary array representation of the block to hash.\n * @param H The intermediate H values from a previous round.\n * @returns The resulting H values.\n */\nfunction roundSHA256(block: number[], H: number[]): number[] {\n  let a, b, c, d, e, f, g, h, T1, T2, t;\n\n  const W: number[] = [];\n\n  a = H[0];\n  b = H[1];\n  c = H[2];\n  d = H[3];\n  e = H[4];\n  f = H[5];\n  g = H[6];\n  h = H[7];\n\n  for (t = 0; t < 64; t += 1) {\n    if (t < 16) {\n      W[t] = block[t];\n    } else {\n      W[t] = safeAdd_32_4(gamma1_32(W[t - 2]), W[t - 7], gamma0_32(W[t - 15]), W[t - 16]);\n    }\n    T1 = safeAdd_32_5(h, sigma1_32(e), ch_32(e, f, g), K_sha2[t], W[t]);\n    T2 = safeAdd_32_2(sigma0_32(a), maj_32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = safeAdd_32_2(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = safeAdd_32_2(T1, T2);\n  }\n\n  H[0] = safeAdd_32_2(a, H[0]);\n  H[1] = safeAdd_32_2(b, H[1]);\n  H[2] = safeAdd_32_2(c, H[2]);\n  H[3] = safeAdd_32_2(d, H[3]);\n  H[4] = safeAdd_32_2(e, H[4]);\n  H[5] = safeAdd_32_2(f, H[5]);\n  H[6] = safeAdd_32_2(g, H[6]);\n  H[7] = safeAdd_32_2(h, H[7]);\n\n  return H;\n}\n\n/**\n * Finalizes the SHA-256 hash. This clobbers `remainder` and `H`.\n *\n * @param remainder Any leftover unprocessed packed ints that still need to be processed.\n * @param remainderBinLen The number of bits in `remainder`.\n * @param processedBinLen The number of bits already processed.\n * @param H The intermediate H values from a previous round.\n * @param variant The desired SHA-256 variant.\n * @returns The array of integers representing the SHA-2 hash of message.\n */\nfunction finalizeSHA256(\n  remainder: number[],\n  remainderBinLen: number,\n  processedBinLen: number,\n  H: number[],\n  variant: VariantType\n): number[] {\n  let i, retVal;\n\n  /* The 65 addition is a hack but it works.  The correct number is\n    actually 72 (64 + 8) but the below math fails if\n    remainderBinLen + 72 % 512 = 0. Since remainderBinLen % 8 = 0,\n    \"shorting\" the addition is OK. */\n  const offset = (((remainderBinLen + 65) >>> 9) << 4) + 15,\n    binaryStringInc = 16,\n    totalLen = remainderBinLen + processedBinLen;\n\n  while (remainder.length <= offset) {\n    remainder.push(0);\n  }\n  /* Append '1' at the end of the binary string */\n  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));\n  /* Append length of binary string in the position such that the new\n   * length is correct. JavaScript numbers are limited to 2^53 so it's\n   * \"safe\" to treat the totalLen as a 64-bit integer. */\n\n  remainder[offset] = totalLen & 0xffffffff;\n  /* Bitwise operators treat the operand as a 32-bit number so need to\n   * use hacky division and round to get access to upper 32-ish bits */\n  remainder[offset - 1] = (totalLen / TWO_PWR_32) | 0;\n\n  /* This will always be at least 1 full chunk */\n  for (i = 0; i < remainder.length; i += binaryStringInc) {\n    H = roundSHA256(remainder.slice(i, i + binaryStringInc), H);\n  }\n\n  if (\"SHA-224\" === variant) {\n    retVal = [H[0], H[1], H[2], H[3], H[4], H[5], H[6]];\n  } else {\n    /* \"SHA-256 */\n    retVal = H;\n  }\n\n  return retVal;\n}\nexport default class jsSHA extends jsSHABase<number[], VariantType> {\n  intermediateState: number[];\n  variantBlockSize: number;\n  bigEndianMod: -1 | 1;\n  outputBinLen: number;\n  isVariableLen: boolean;\n  HMACSupported: boolean;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  roundFunc: (block: number[], H: number[]) => number[];\n  finalizeFunc: (remainder: number[], remainderBinLen: number, processedBinLen: number, H: number[]) => number[];\n  stateCloneFunc: (state: number[]) => number[];\n  newStateFunc: (variant: VariantType) => number[];\n  getMAC: () => number[];\n\n  constructor(variant: VariantType, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(variant: VariantType, inputFormat: FormatNoTextType, options?: FixedLengthOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    if (!(\"SHA-224\" === variant || \"SHA-256\" === variant)) {\n      throw new Error(sha_variant_error);\n    }\n    super(variant, inputFormat, options);\n    const resolvedOptions = options || {};\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    this.getMAC = this._getHMAC;\n    this.HMACSupported = true;\n    this.bigEndianMod = -1;\n    this.converterFunc = getStrConverter(this.inputFormat, this.utfType, this.bigEndianMod);\n    this.roundFunc = roundSHA256;\n    this.stateCloneFunc = function (state): number[] {\n      return state.slice();\n    };\n\n    this.newStateFunc = getNewState256;\n    this.finalizeFunc = function (remainder, remainderBinLen, processedBinLen, H): number[] {\n      return finalizeSHA256(remainder, remainderBinLen, processedBinLen, H, variant);\n    };\n\n    this.intermediateState = getNewState256(variant);\n    this.variantBlockSize = 512;\n    this.outputBinLen = \"SHA-224\" === variant ? 224 : 256;\n    this.isVariableLen = false;\n\n    if (resolvedOptions[\"hmacKey\"]) {\n      this._setHMACKey(parseInputOption(\"hmacKey\", resolvedOptions[\"hmacKey\"], this.bigEndianMod));\n    }\n  }\n}\n", "/*\n * Note 1: All the functions in this file guarantee only that the bottom 32-bits of the returned Int_64 are correct.\n * JavaScript is flakey when it comes to bit operations and a '1' in the highest order bit of a 32-bit number causes\n * it to be interpreted as a negative number per two's complement.\n *\n * Note 2: Per the ECMAScript spec, all JavaScript operations mask the shift amount by 0x1F.  This results in weird\n * cases like 1 << 32 == 1 and 1 << 33 === 1 << 1 === 2\n */\n\n/**\n * Int_64 is a object for 2 32-bit numbers emulating a 64-bit number.\n */\nexport class Int_64 {\n  /**\n   * @param msint_32 The most significant 32-bits of a 64-bit number.\n   * @param lsint_32 The least significant 32-bits of a 64-bit number.\n   */\n  readonly highOrder: number;\n  readonly lowOrder: number;\n  constructor(msint_32: number, lsint_32: number) {\n    this.highOrder = msint_32;\n    this.lowOrder = lsint_32;\n  }\n}\n\n/**\n * The 64-bit implementation of circular rotate left.\n *\n * This does not work for n >= 64 or n == 32 but those are never done.\n *\n * @param x The 64-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted left circularly by `n` bits.\n */\nexport function rotl_64(x: Int_64, n: number): Int_64 {\n  let tmp;\n  if (n > 32) {\n    tmp = 64 - n;\n    return new Int_64((x.lowOrder << n) | (x.highOrder >>> tmp), (x.highOrder << n) | (x.lowOrder >>> tmp));\n  } else if (0 !== n) {\n    tmp = 32 - n;\n    return new Int_64((x.highOrder << n) | (x.lowOrder >>> tmp), (x.lowOrder << n) | (x.highOrder >>> tmp));\n  } else {\n    return x;\n  }\n}\n\n/**\n * The 64-bit implementation of circular rotate right.\n *\n * This does not work for n >= 64, n == 32, or n == 0 but those are never done.\n *\n * @param x The 64-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted right circularly by `n` bits.\n */\nfunction rotr_64(x: Int_64, n: number): Int_64 {\n  let tmp;\n  if (n < 32) {\n    tmp = 32 - n;\n    return new Int_64((x.highOrder >>> n) | (x.lowOrder << tmp), (x.lowOrder >>> n) | (x.highOrder << tmp));\n  } else {\n    tmp = 64 - n;\n    return new Int_64((x.lowOrder >>> n) | (x.highOrder << tmp), (x.highOrder >>> n) | (x.lowOrder << tmp));\n  }\n}\n\n/**\n * The 64-bit implementation of shift right.\n *\n * This does not work for n >= 32 but is only called for n < 32.\n *\n * @param x The 64-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted right by `n` bits\n */\nfunction shr_64(x: Int_64, n: number): Int_64 {\n  return new Int_64(x.highOrder >>> n, (x.lowOrder >>> n) | (x.highOrder << (32 - n)));\n}\n\n/**\n * The 64-bit implementation of the NIST specified Ch function.\n *\n * @param x The first 64-bit integer argument.\n * @param y The second 64-bit integer argument.\n * @param z The third 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function ch_64(x: Int_64, y: Int_64, z: Int_64): Int_64 {\n  return new Int_64(\n    (x.highOrder & y.highOrder) ^ (~x.highOrder & z.highOrder),\n    (x.lowOrder & y.lowOrder) ^ (~x.lowOrder & z.lowOrder)\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Maj function.\n *\n * @param x The first 64-bit integer argument.\n * @param y The second 64-bit integer argument.\n * @param z The third 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function maj_64(x: Int_64, y: Int_64, z: Int_64): Int_64 {\n  return new Int_64(\n    (x.highOrder & y.highOrder) ^ (x.highOrder & z.highOrder) ^ (y.highOrder & z.highOrder),\n    (x.lowOrder & y.lowOrder) ^ (x.lowOrder & z.lowOrder) ^ (y.lowOrder & z.lowOrder)\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Sigma0 function.\n *\n * @param x The 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function sigma0_64(x: Int_64): Int_64 {\n  const rotr28 = rotr_64(x, 28),\n    rotr34 = rotr_64(x, 34),\n    rotr39 = rotr_64(x, 39);\n\n  return new Int_64(\n    rotr28.highOrder ^ rotr34.highOrder ^ rotr39.highOrder,\n    rotr28.lowOrder ^ rotr34.lowOrder ^ rotr39.lowOrder\n  );\n}\n\n/**\n * Add two 64-bit integers.\n *\n * @param x The first 64-bit integer argument to be added.\n * @param y The second 64-bit integer argument to be added.\n * @returns The sum of `x` + `y`.\n */\nexport function safeAdd_64_2(x: Int_64, y: Int_64): Int_64 {\n  let lsw, msw;\n\n  lsw = (x.lowOrder & 0xffff) + (y.lowOrder & 0xffff);\n  msw = (x.lowOrder >>> 16) + (y.lowOrder >>> 16) + (lsw >>> 16);\n  const lowOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  lsw = (x.highOrder & 0xffff) + (y.highOrder & 0xffff) + (msw >>> 16);\n  msw = (x.highOrder >>> 16) + (y.highOrder >>> 16) + (lsw >>> 16);\n  const highOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  return new Int_64(highOrder, lowOrder);\n}\n\n/**\n * Add four 64-bit integers.\n *\n * @param a The first 64-bit integer argument to be added.\n * @param b The second 64-bit integer argument to be added.\n * @param c The third 64-bit integer argument to be added.\n * @param d The fouth 64-bit integer argument to be added.\n * @returns The sum of `a` + `b` + `c` + `d`.\n */\nexport function safeAdd_64_4(a: Int_64, b: Int_64, c: Int_64, d: Int_64): Int_64 {\n  let lsw, msw;\n\n  lsw = (a.lowOrder & 0xffff) + (b.lowOrder & 0xffff) + (c.lowOrder & 0xffff) + (d.lowOrder & 0xffff);\n  msw = (a.lowOrder >>> 16) + (b.lowOrder >>> 16) + (c.lowOrder >>> 16) + (d.lowOrder >>> 16) + (lsw >>> 16);\n  const lowOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  lsw =\n    (a.highOrder & 0xffff) + (b.highOrder & 0xffff) + (c.highOrder & 0xffff) + (d.highOrder & 0xffff) + (msw >>> 16);\n  msw = (a.highOrder >>> 16) + (b.highOrder >>> 16) + (c.highOrder >>> 16) + (d.highOrder >>> 16) + (lsw >>> 16);\n  const highOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  return new Int_64(highOrder, lowOrder);\n}\n\n/**\n * Add five 64-bit integers.\n *\n * @param a The first 64-bit integer argument to be added.\n * @param b The second 64-bit integer argument to be added.\n * @param c The third 64-bit integer argument to be added.\n * @param d The fouth 64-bit integer argument to be added.\n * @param e The fifth 64-bit integer argument to be added.\n * @returns The sum of `a` + `b` + `c` + `d` + `e`.\n */\nexport function safeAdd_64_5(a: Int_64, b: Int_64, c: Int_64, d: Int_64, e: Int_64): Int_64 {\n  let lsw, msw;\n\n  lsw =\n    (a.lowOrder & 0xffff) +\n    (b.lowOrder & 0xffff) +\n    (c.lowOrder & 0xffff) +\n    (d.lowOrder & 0xffff) +\n    (e.lowOrder & 0xffff);\n  msw =\n    (a.lowOrder >>> 16) +\n    (b.lowOrder >>> 16) +\n    (c.lowOrder >>> 16) +\n    (d.lowOrder >>> 16) +\n    (e.lowOrder >>> 16) +\n    (lsw >>> 16);\n  const lowOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  lsw =\n    (a.highOrder & 0xffff) +\n    (b.highOrder & 0xffff) +\n    (c.highOrder & 0xffff) +\n    (d.highOrder & 0xffff) +\n    (e.highOrder & 0xffff) +\n    (msw >>> 16);\n  msw =\n    (a.highOrder >>> 16) +\n    (b.highOrder >>> 16) +\n    (c.highOrder >>> 16) +\n    (d.highOrder >>> 16) +\n    (e.highOrder >>> 16) +\n    (lsw >>> 16);\n  const highOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  return new Int_64(highOrder, lowOrder);\n}\n\n/**\n * XORs two given arguments.\n *\n * @param a The first argument to be XORed.\n * @param b The second argument to be XORed.\n * @returns The The XOR `a` and `b`\n */\nexport function xor_64_2(a: Int_64, b: Int_64): Int_64 {\n  return new Int_64(a.highOrder ^ b.highOrder, a.lowOrder ^ b.lowOrder);\n}\n\n/**\n * XORs five given arguments.\n *\n * @param a The first argument to be XORed.\n * @param b The second argument to be XORed.\n * @param c The third argument to be XORed.\n * @param d The fourth argument to be XORed.\n * @param e The fifth argument to be XORed.\n * @returns The XOR of `a`, `b`, `c`, `d`, and `e`.\n */\nexport function xor_64_5(a: Int_64, b: Int_64, c: Int_64, d: Int_64, e: Int_64): Int_64 {\n  return new Int_64(\n    a.highOrder ^ b.highOrder ^ c.highOrder ^ d.highOrder ^ e.highOrder,\n    a.lowOrder ^ b.lowOrder ^ c.lowOrder ^ d.lowOrder ^ e.lowOrder\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Gamma1 function.\n *\n * @param x The 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function gamma1_64(x: Int_64): Int_64 {\n  const rotr19 = rotr_64(x, 19),\n    rotr61 = rotr_64(x, 61),\n    shr6 = shr_64(x, 6);\n\n  return new Int_64(\n    rotr19.highOrder ^ rotr61.highOrder ^ shr6.highOrder,\n    rotr19.lowOrder ^ rotr61.lowOrder ^ shr6.lowOrder\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Gamma0 function.\n *\n * @param x The 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function gamma0_64(x: Int_64): Int_64 {\n  const rotr1 = rotr_64(x, 1),\n    rotr8 = rotr_64(x, 8),\n    shr7 = shr_64(x, 7);\n\n  return new Int_64(\n    rotr1.highOrder ^ rotr8.highOrder ^ shr7.highOrder,\n    rotr1.lowOrder ^ rotr8.lowOrder ^ shr7.lowOrder\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Sigma1 function.\n *\n * @param x The 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function sigma1_64(x: Int_64): Int_64 {\n  const rotr14 = rotr_64(x, 14),\n    rotr18 = rotr_64(x, 18),\n    rotr41 = rotr_64(x, 41);\n\n  return new Int_64(\n    rotr14.highOrder ^ rotr18.highOrder ^ rotr41.highOrder,\n    rotr14.lowOrder ^ rotr18.lowOrder ^ rotr41.lowOrder\n  );\n}\n", "import { jsSHABase, TWO_PWR_32, H_trunc, H_full, K_sha2, sha_variant_error, parseInputOption } from \"./common\";\nimport {\n  packedValue,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n} from \"./custom_types\";\nimport { getStrConverter } from \"./converters\";\nimport {\n  ch_64,\n  gamma0_64,\n  gamma1_64,\n  Int_64,\n  maj_64,\n  safeAdd_64_2,\n  safeAdd_64_4,\n  safeAdd_64_5,\n  sigma0_64,\n  sigma1_64,\n} from \"./primitives_64\";\n\ntype VariantType = \"SHA-384\" | \"SHA-512\";\n\nconst K_sha512 = [\n  new Int_64(K_sha2[0], 0xd728ae22),\n  new Int_64(K_sha2[1], 0x23ef65cd),\n  new Int_64(K_sha2[2], 0xec4d3b2f),\n  new Int_64(K_sha2[3], 0x8189dbbc),\n  new Int_64(K_sha2[4], 0xf348b538),\n  new Int_64(K_sha2[5], 0xb605d019),\n  new Int_64(K_sha2[6], 0xaf194f9b),\n  new Int_64(K_sha2[7], 0xda6d8118),\n  new Int_64(K_sha2[8], 0xa3030242),\n  new Int_64(K_sha2[9], 0x45706fbe),\n  new Int_64(K_sha2[10], 0x4ee4b28c),\n  new Int_64(K_sha2[11], 0xd5ffb4e2),\n  new Int_64(K_sha2[12], 0xf27b896f),\n  new Int_64(K_sha2[13], 0x3b1696b1),\n  new Int_64(K_sha2[14], 0x25c71235),\n  new Int_64(K_sha2[15], 0xcf692694),\n  new Int_64(K_sha2[16], 0x9ef14ad2),\n  new Int_64(K_sha2[17], 0x384f25e3),\n  new Int_64(K_sha2[18], 0x8b8cd5b5),\n  new Int_64(K_sha2[19], 0x77ac9c65),\n  new Int_64(K_sha2[20], 0x592b0275),\n  new Int_64(K_sha2[21], 0x6ea6e483),\n  new Int_64(K_sha2[22], 0xbd41fbd4),\n  new Int_64(K_sha2[23], 0x831153b5),\n  new Int_64(K_sha2[24], 0xee66dfab),\n  new Int_64(K_sha2[25], 0x2db43210),\n  new Int_64(K_sha2[26], 0x98fb213f),\n  new Int_64(K_sha2[27], 0xbeef0ee4),\n  new Int_64(K_sha2[28], 0x3da88fc2),\n  new Int_64(K_sha2[29], 0x930aa725),\n  new Int_64(K_sha2[30], 0xe003826f),\n  new Int_64(K_sha2[31], 0x0a0e6e70),\n  new Int_64(K_sha2[32], 0x46d22ffc),\n  new Int_64(K_sha2[33], 0x5c26c926),\n  new Int_64(K_sha2[34], 0x5ac42aed),\n  new Int_64(K_sha2[35], 0x9d95b3df),\n  new Int_64(K_sha2[36], 0x8baf63de),\n  new Int_64(K_sha2[37], 0x3c77b2a8),\n  new Int_64(K_sha2[38], 0x47edaee6),\n  new Int_64(K_sha2[39], 0x1482353b),\n  new Int_64(K_sha2[40], 0x4cf10364),\n  new Int_64(K_sha2[41], 0xbc423001),\n  new Int_64(K_sha2[42], 0xd0f89791),\n  new Int_64(K_sha2[43], 0x0654be30),\n  new Int_64(K_sha2[44], 0xd6ef5218),\n  new Int_64(K_sha2[45], 0x5565a910),\n  new Int_64(K_sha2[46], 0x5771202a),\n  new Int_64(K_sha2[47], 0x32bbd1b8),\n  new Int_64(K_sha2[48], 0xb8d2d0c8),\n  new Int_64(K_sha2[49], 0x5141ab53),\n  new Int_64(K_sha2[50], 0xdf8eeb99),\n  new Int_64(K_sha2[51], 0xe19b48a8),\n  new Int_64(K_sha2[52], 0xc5c95a63),\n  new Int_64(K_sha2[53], 0xe3418acb),\n  new Int_64(K_sha2[54], 0x7763e373),\n  new Int_64(K_sha2[55], 0xd6b2b8a3),\n  new Int_64(K_sha2[56], 0x5defb2fc),\n  new Int_64(K_sha2[57], 0x43172f60),\n  new Int_64(K_sha2[58], 0xa1f0ab72),\n  new Int_64(K_sha2[59], 0x1a6439ec),\n  new Int_64(K_sha2[60], 0x23631e28),\n  new Int_64(K_sha2[61], 0xde82bde9),\n  new Int_64(K_sha2[62], 0xb2c67915),\n  new Int_64(K_sha2[63], 0xe372532b),\n  new Int_64(0xca273ece, 0xea26619c),\n  new Int_64(0xd186b8c7, 0x21c0c207),\n  new Int_64(0xeada7dd6, 0xcde0eb1e),\n  new Int_64(0xf57d4f7f, 0xee6ed178),\n  new Int_64(0x06f067aa, 0x72176fba),\n  new Int_64(0x0a637dc5, 0xa2c898a6),\n  new Int_64(0x113f9804, 0xbef90dae),\n  new Int_64(0x1b710b35, 0x131c471b),\n  new Int_64(0x28db77f5, 0x23047d84),\n  new Int_64(0x32caab7b, 0x40c72493),\n  new Int_64(0x3c9ebe0a, 0x15c9bebc),\n  new Int_64(0x431d67c4, 0x9c100d4c),\n  new Int_64(0x4cc5d4be, 0xcb3e42b6),\n  new Int_64(0x597f299c, 0xfc657e2a),\n  new Int_64(0x5fcb6fab, 0x3ad6faec),\n  new Int_64(0x6c44198c, 0x4a475817),\n];\n\n/**\n * Gets the state values for the specified SHA variant.\n *\n * @param variant: The SHA-512 family variant.\n * @returns The initial state values.\n */\nfunction getNewState512(variant: VariantType): Int_64[] {\n  if (\"SHA-384\" === variant) {\n    return [\n      new Int_64(0xcbbb9d5d, H_trunc[0]),\n      new Int_64(0x0629a292a, H_trunc[1]),\n      new Int_64(0x9159015a, H_trunc[2]),\n      new Int_64(0x0152fecd8, H_trunc[3]),\n      new Int_64(0x67332667, H_trunc[4]),\n      new Int_64(0x98eb44a87, H_trunc[5]),\n      new Int_64(0xdb0c2e0d, H_trunc[6]),\n      new Int_64(0x047b5481d, H_trunc[7]),\n    ];\n  } else {\n    /* SHA-512 */\n    return [\n      new Int_64(H_full[0], 0xf3bcc908),\n      new Int_64(H_full[1], 0x84caa73b),\n      new Int_64(H_full[2], 0xfe94f82b),\n      new Int_64(H_full[3], 0x5f1d36f1),\n      new Int_64(H_full[4], 0xade682d1),\n      new Int_64(H_full[5], 0x2b3e6c1f),\n      new Int_64(H_full[6], 0xfb41bd6b),\n      new Int_64(H_full[7], 0x137e2179),\n    ];\n  }\n}\n\n/**\n * Performs a round of SHA-512 hashing over a block. This clobbers `H`.\n *\n * @param block The binary array representation of the block to hash.\n * @param H The intermediate H values from a previous round.\n * @returns The resulting H values.\n */\nfunction roundSHA512(block: number[], H: Int_64[]): Int_64[] {\n  let a, b, c, d, e, f, g, h, T1, T2, t, offset;\n\n  const W: Int_64[] = [];\n\n  a = H[0];\n  b = H[1];\n  c = H[2];\n  d = H[3];\n  e = H[4];\n  f = H[5];\n  g = H[6];\n  h = H[7];\n\n  for (t = 0; t < 80; t += 1) {\n    if (t < 16) {\n      offset = t * 2;\n      W[t] = new Int_64(block[offset], block[offset + 1]);\n    } else {\n      W[t] = safeAdd_64_4(gamma1_64(W[t - 2]), W[t - 7], gamma0_64(W[t - 15]), W[t - 16]);\n    }\n    T1 = safeAdd_64_5(h, sigma1_64(e), ch_64(e, f, g), K_sha512[t], W[t]);\n    T2 = safeAdd_64_2(sigma0_64(a), maj_64(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = safeAdd_64_2(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = safeAdd_64_2(T1, T2);\n  }\n\n  H[0] = safeAdd_64_2(a, H[0]);\n  H[1] = safeAdd_64_2(b, H[1]);\n  H[2] = safeAdd_64_2(c, H[2]);\n  H[3] = safeAdd_64_2(d, H[3]);\n  H[4] = safeAdd_64_2(e, H[4]);\n  H[5] = safeAdd_64_2(f, H[5]);\n  H[6] = safeAdd_64_2(g, H[6]);\n  H[7] = safeAdd_64_2(h, H[7]);\n\n  return H;\n}\n\n/**\n * Finalizes the SHA-512 hash. This clobbers `remainder` and `H`.\n *\n * @param remainder Any leftover unprocessed packed ints that still need to be processed.\n * @param remainderBinLen The number of bits in `remainder`.\n * @param processedBinLen The number of bits already processed.\n * @param H The intermediate H values from a previous round.\n * @param variant The desired SHA-512 variant.\n * @returns The array of integers representing the SHA-512 hash of message.\n */\nfunction finalizeSHA512(\n  remainder: number[],\n  remainderBinLen: number,\n  processedBinLen: number,\n  H: Int_64[],\n  variant: VariantType\n): number[] {\n  let i, retVal;\n\n  /* The 129 addition is a hack but it works.  The correct number is\n    actually 136 (128 + 8) but the below math fails if\n    remainderBinLen + 136 % 1024 = 0. Since remainderBinLen % 8 = 0,\n    \"shorting\" the addition is OK. */\n  const offset = (((remainderBinLen + 129) >>> 10) << 5) + 31,\n    binaryStringInc = 32,\n    totalLen = remainderBinLen + processedBinLen;\n\n  while (remainder.length <= offset) {\n    remainder.push(0);\n  }\n  /* Append '1' at the end of the binary string */\n  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));\n  /* Append length of binary string in the position such that the new\n   * length is correct. JavaScript numbers are limited to 2^53 so it's\n   * \"safe\" to treat the totalLen as a 64-bit integer. */\n\n  remainder[offset] = totalLen & 0xffffffff;\n  /* Bitwise operators treat the operand as a 32-bit number so need to\n   * use hacky division and round to get access to upper 32-ish bits */\n  remainder[offset - 1] = (totalLen / TWO_PWR_32) | 0;\n\n  /* This will always be at least 1 full chunk */\n  for (i = 0; i < remainder.length; i += binaryStringInc) {\n    H = roundSHA512(remainder.slice(i, i + binaryStringInc), H);\n  }\n\n  if (\"SHA-384\" === variant) {\n    H = (H as unknown) as Int_64[];\n    retVal = [\n      H[0].highOrder,\n      H[0].lowOrder,\n      H[1].highOrder,\n      H[1].lowOrder,\n      H[2].highOrder,\n      H[2].lowOrder,\n      H[3].highOrder,\n      H[3].lowOrder,\n      H[4].highOrder,\n      H[4].lowOrder,\n      H[5].highOrder,\n      H[5].lowOrder,\n    ];\n  } else {\n    /* SHA-512 */\n    retVal = [\n      H[0].highOrder,\n      H[0].lowOrder,\n      H[1].highOrder,\n      H[1].lowOrder,\n      H[2].highOrder,\n      H[2].lowOrder,\n      H[3].highOrder,\n      H[3].lowOrder,\n      H[4].highOrder,\n      H[4].lowOrder,\n      H[5].highOrder,\n      H[5].lowOrder,\n      H[6].highOrder,\n      H[6].lowOrder,\n      H[7].highOrder,\n      H[7].lowOrder,\n    ];\n  }\n  return retVal;\n}\n\nexport default class jsSHA extends jsSHABase<Int_64[], VariantType> {\n  intermediateState: Int_64[];\n  variantBlockSize: number;\n  bigEndianMod: -1 | 1;\n  outputBinLen: number;\n  isVariableLen: boolean;\n  HMACSupported: boolean;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  roundFunc: (block: number[], H: Int_64[]) => Int_64[];\n  finalizeFunc: (remainder: number[], remainderBinLen: number, processedBinLen: number, H: Int_64[]) => number[];\n  stateCloneFunc: (state: Int_64[]) => Int_64[];\n  newStateFunc: (variant: VariantType) => Int_64[];\n  getMAC: () => number[];\n\n  constructor(variant: VariantType, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(variant: VariantType, inputFormat: FormatNoTextType, options?: FixedLengthOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    if (!(\"SHA-384\" === variant || \"SHA-512\" === variant)) {\n      throw new Error(sha_variant_error);\n    }\n    super(variant, inputFormat, options);\n    const resolvedOptions = options || {};\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    this.getMAC = this._getHMAC;\n    this.HMACSupported = true;\n    this.bigEndianMod = -1;\n    this.converterFunc = getStrConverter(this.inputFormat, this.utfType, this.bigEndianMod);\n    this.roundFunc = roundSHA512;\n    this.stateCloneFunc = function (state): Int_64[] {\n      return state.slice();\n    };\n    this.newStateFunc = getNewState512;\n    this.finalizeFunc = function (remainder, remainderBinLen, processedBinLen, H): number[] {\n      return finalizeSHA512(remainder, remainderBinLen, processedBinLen, H, variant);\n    };\n\n    this.intermediateState = getNewState512(variant);\n    this.variantBlockSize = 1024;\n    this.outputBinLen = \"SHA-384\" === variant ? 384 : 512;\n    this.isVariableLen = false;\n\n    if (resolvedOptions[\"hmacKey\"]) {\n      this._setHMACKey(parseInputOption(\"hmacKey\", resolvedOptions[\"hmacKey\"], this.bigEndianMod));\n    }\n  }\n}\n", "import { jsSHABase, packedLEConcat, sha_variant_error, mac_rounds_error, TWO_PWR_32, parseInputOption } from \"./common\";\nimport {\n  packedValue,\n  CSHAKEOptionsNoEncodingType,\n  CSHAKEOptionsEncodingType,\n  SHAKEOptionsNoEncodingType,\n  SHAKEOptionsEncodingType,\n  KMACOptionsNoEncodingType,\n  KMACOptionsEncodingType,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n  ResolvedCSHAKEOptionsNoEncodingType,\n  ResolvedKMACOptionsNoEncodingType,\n} from \"./custom_types\";\nimport { getStrConverter } from \"./converters\";\nimport { Int_64, rotl_64, xor_64_2, xor_64_5 } from \"./primitives_64\";\n\ntype FixedLengthVariantType = \"SHA3-224\" | \"SHA3-256\" | \"SHA3-384\" | \"SHA3-512\" | \"SHAKE128\" | \"SHAKE256\";\n\ntype VariantType = FixedLengthVariantType | \"SHAKE128\" | \"SHAKE256\" | \"CSHAKE128\" | \"CSHAKE256\" | \"KMAC128\" | \"KMAC256\";\n\nconst rc_sha3 = [\n  new Int_64(0x00000000, 0x00000001),\n  new Int_64(0x00000000, 0x00008082),\n  new Int_64(0x80000000, 0x0000808a),\n  new Int_64(0x80000000, 0x80008000),\n  new Int_64(0x00000000, 0x0000808b),\n  new Int_64(0x00000000, 0x80000001),\n  new Int_64(0x80000000, 0x80008081),\n  new Int_64(0x80000000, 0x00008009),\n  new Int_64(0x00000000, 0x0000008a),\n  new Int_64(0x00000000, 0x00000088),\n  new Int_64(0x00000000, 0x80008009),\n  new Int_64(0x00000000, 0x8000000a),\n  new Int_64(0x00000000, 0x8000808b),\n  new Int_64(0x80000000, 0x0000008b),\n  new Int_64(0x80000000, 0x00008089),\n  new Int_64(0x80000000, 0x00008003),\n  new Int_64(0x80000000, 0x00008002),\n  new Int_64(0x80000000, 0x00000080),\n  new Int_64(0x00000000, 0x0000800a),\n  new Int_64(0x80000000, 0x8000000a),\n  new Int_64(0x80000000, 0x80008081),\n  new Int_64(0x80000000, 0x00008080),\n  new Int_64(0x00000000, 0x80000001),\n  new Int_64(0x80000000, 0x80008008),\n];\n\nconst r_sha3 = [\n  [0, 36, 3, 41, 18],\n  [1, 44, 10, 45, 2],\n  [62, 6, 43, 15, 61],\n  [28, 55, 25, 21, 56],\n  [27, 20, 39, 8, 14],\n];\n\n/**\n * Gets the state values for the specified SHA-3 variant.\n *\n * @param _variant Unused for this family.\n * @returns The initial state values.\n */\nfunction getNewState(_variant: VariantType): Int_64[][] {\n  let i;\n  const retVal = [];\n\n  for (i = 0; i < 5; i += 1) {\n    retVal[i] = [new Int_64(0, 0), new Int_64(0, 0), new Int_64(0, 0), new Int_64(0, 0), new Int_64(0, 0)];\n  }\n\n  return retVal;\n}\n\n/**\n * Returns a clone of the given SHA3 state.\n *\n * @param state The state to be cloned.\n * @returns The cloned state.\n */\nfunction cloneSHA3State(state: Int_64[][]): Int_64[][] {\n  let i;\n  const clone = [];\n  for (i = 0; i < 5; i += 1) {\n    clone[i] = state[i].slice();\n  }\n\n  return clone;\n}\n\n/**\n * Performs a round of SHA-3 hashing over a block. This clobbers `state`.\n *\n * @param block The binary array representation of the block to hash.\n * @param state Hash state from a previous round.\n * @returns The resulting state value.\n */\nfunction roundSHA3(block: number[] | null, state: Int_64[][]): Int_64[][] {\n  let round, x, y, B;\n  const C = [],\n    D = [];\n\n  if (null !== block) {\n    for (x = 0; x < block.length; x += 2) {\n      state[(x >>> 1) % 5][((x >>> 1) / 5) | 0] = xor_64_2(\n        state[(x >>> 1) % 5][((x >>> 1) / 5) | 0],\n        new Int_64(block[x + 1], block[x])\n      );\n    }\n  }\n\n  for (round = 0; round < 24; round += 1) {\n    /* Any SHA-3 variant name will do here */\n    B = getNewState(\"SHA3-384\");\n\n    /* Perform theta step */\n    for (x = 0; x < 5; x += 1) {\n      C[x] = xor_64_5(state[x][0], state[x][1], state[x][2], state[x][3], state[x][4]);\n    }\n    for (x = 0; x < 5; x += 1) {\n      D[x] = xor_64_2(C[(x + 4) % 5], rotl_64(C[(x + 1) % 5], 1));\n    }\n    for (x = 0; x < 5; x += 1) {\n      for (y = 0; y < 5; y += 1) {\n        state[x][y] = xor_64_2(state[x][y], D[x]);\n      }\n    }\n\n    /* Perform combined ro and pi steps */\n    for (x = 0; x < 5; x += 1) {\n      for (y = 0; y < 5; y += 1) {\n        B[y][(2 * x + 3 * y) % 5] = rotl_64(state[x][y], r_sha3[x][y]);\n      }\n    }\n\n    /* Perform chi step */\n    for (x = 0; x < 5; x += 1) {\n      for (y = 0; y < 5; y += 1) {\n        state[x][y] = xor_64_2(\n          B[x][y],\n          new Int_64(\n            ~B[(x + 1) % 5][y].highOrder & B[(x + 2) % 5][y].highOrder,\n            ~B[(x + 1) % 5][y].lowOrder & B[(x + 2) % 5][y].lowOrder\n          )\n        );\n      }\n    }\n\n    /* Perform iota step */\n    state[0][0] = xor_64_2(state[0][0], rc_sha3[round]);\n  }\n\n  return state;\n}\n\n/**\n * Finalizes the SHA-3 hash. This clobbers `remainder` and `state`.\n *\n * @param remainder Any leftover unprocessed packed ints that still need to be processed.\n * @param remainderBinLen The number of bits in `remainder`.\n * @param _processedBinLen Unused for this family.\n * @param state The state from a previous round.\n * @param blockSize The block size/rate of the variant in bits\n * @param delimiter The delimiter value for the variant\n * @param outputLen The output length for the variant in bits\n * @returns The array of integers representing the SHA-3 hash of message.\n */\nfunction finalizeSHA3(\n  remainder: number[],\n  remainderBinLen: number,\n  _processedBinLen: number,\n  state: Int_64[][],\n  blockSize: number,\n  delimiter: number,\n  outputLen: number\n): number[] {\n  let i,\n    state_offset = 0,\n    temp;\n  const retVal = [],\n    binaryStringInc = blockSize >>> 5,\n    remainderIntLen = remainderBinLen >>> 5;\n\n  /* Process as many blocks as possible, some may be here for multiple rounds\n\t\twith SHAKE\n\t*/\n  for (i = 0; i < remainderIntLen && remainderBinLen >= blockSize; i += binaryStringInc) {\n    state = roundSHA3(remainder.slice(i, i + binaryStringInc), state);\n    remainderBinLen -= blockSize;\n  }\n\n  remainder = remainder.slice(i);\n  remainderBinLen = remainderBinLen % blockSize;\n\n  /* Pad out the remainder to a full block */\n  while (remainder.length < binaryStringInc) {\n    remainder.push(0);\n  }\n\n  /* Find the next \"empty\" byte for the 0x80 and append it via an xor */\n  i = remainderBinLen >>> 3;\n  remainder[i >> 2] ^= delimiter << (8 * (i % 4));\n\n  remainder[binaryStringInc - 1] ^= 0x80000000;\n  state = roundSHA3(remainder, state);\n\n  while (retVal.length * 32 < outputLen) {\n    temp = state[state_offset % 5][(state_offset / 5) | 0];\n    retVal.push(temp.lowOrder);\n    if (retVal.length * 32 >= outputLen) {\n      break;\n    }\n    retVal.push(temp.highOrder);\n    state_offset += 1;\n\n    if (0 === (state_offset * 64) % blockSize) {\n      roundSHA3(null, state);\n      state_offset = 0;\n    }\n  }\n\n  return retVal;\n}\n\n/**\n * Performs NIST left_encode function returned with no extra garbage bits. `x` is limited to <= 9007199254740991.\n *\n * @param x 32-bit number to to encode.\n * @returns The NIST specified output of the function.\n */\nfunction left_encode(x: number): packedValue {\n  let byteOffset,\n    byte,\n    numEncodedBytes = 0;\n  /* JavaScript numbers max out at 0x1FFFFFFFFFFFFF (7 bytes) so this will return a maximum of 7 + 1 = 8 bytes */\n  const retVal = [0, 0],\n    x_64 = [x & 0xffffffff, (x / TWO_PWR_32) & 0x1fffff];\n\n  for (byteOffset = 6; byteOffset >= 0; byteOffset--) {\n    /* This will surprisingly work for large shifts because JavaScript masks the shift amount by 0x1F */\n    byte = (x_64[byteOffset >> 2] >>> (8 * byteOffset)) & 0xff;\n\n    /* Starting from the most significant byte of a 64-bit number, start recording the first non-0 byte and then\n       every byte thereafter */\n    if (byte !== 0 || numEncodedBytes !== 0) {\n      retVal[(numEncodedBytes + 1) >> 2] |= byte << ((numEncodedBytes + 1) * 8);\n      numEncodedBytes += 1;\n    }\n  }\n  numEncodedBytes = numEncodedBytes !== 0 ? numEncodedBytes : 1;\n  retVal[0] |= numEncodedBytes;\n\n  return { value: numEncodedBytes + 1 > 4 ? retVal : [retVal[0]], binLen: 8 + numEncodedBytes * 8 };\n}\n\n/**\n * Performs NIST right_encode function returned with no extra garbage bits. `x` is limited to <= 9007199254740991.\n *\n * @param x 32-bit number to to encode.\n * @returns The NIST specified output of the function.\n */\nfunction right_encode(x: number): packedValue {\n  let byteOffset,\n    byte,\n    numEncodedBytes = 0;\n  /* JavaScript numbers max out at 0x1FFFFFFFFFFFFF (7 bytes) so this will return a maximum of 7 + 1 = 8 bytes */\n  const retVal = [0, 0],\n    x_64 = [x & 0xffffffff, (x / TWO_PWR_32) & 0x1fffff];\n\n  for (byteOffset = 6; byteOffset >= 0; byteOffset--) {\n    /* This will surprisingly work for large shifts because JavaScript masks the shift amount by 0x1F */\n    byte = (x_64[byteOffset >> 2] >>> (8 * byteOffset)) & 0xff;\n\n    /* Starting from the most significant byte of a 64-bit number, start recording the first non-0 byte and then\n       every byte thereafter */\n    if (byte !== 0 || numEncodedBytes !== 0) {\n      retVal[numEncodedBytes >> 2] |= byte << (numEncodedBytes * 8);\n      numEncodedBytes += 1;\n    }\n  }\n  numEncodedBytes = numEncodedBytes !== 0 ? numEncodedBytes : 1;\n  retVal[numEncodedBytes >> 2] |= numEncodedBytes << (numEncodedBytes * 8);\n\n  return { value: numEncodedBytes + 1 > 4 ? retVal : [retVal[0]], binLen: 8 + numEncodedBytes * 8 };\n}\n\n/**\n * Performs NIST encode_string function.\n *\n * @param input Packed array of integers.\n * @returns NIST encode_string output.\n */\nfunction encode_string(input: packedValue): packedValue {\n  return packedLEConcat(left_encode(input[\"binLen\"]), input);\n}\n\n/**\n * Performs NIST byte_pad function.\n *\n * @param packed Packed array of integers.\n * @param outputByteLen Desired length of the output in bytes, assumed to be a multiple of 4.\n * @returns NIST byte_pad output.\n */\nfunction byte_pad(packed: packedValue, outputByteLen: number): number[] {\n  let encodedLen = left_encode(outputByteLen),\n    i;\n\n  encodedLen = packedLEConcat(encodedLen, packed);\n  const outputIntLen = outputByteLen >>> 2,\n    intsToAppend = (outputIntLen - (encodedLen[\"value\"].length % outputIntLen)) % outputIntLen;\n\n  for (i = 0; i < intsToAppend; i++) {\n    encodedLen[\"value\"].push(0);\n  }\n\n  return encodedLen[\"value\"];\n}\n\n/**\n * Parses/validate constructor options for a CSHAKE variant\n *\n * @param options Option given to constructor\n */\nfunction resolveCSHAKEOptions(options: CSHAKEOptionsNoEncodingType): ResolvedCSHAKEOptionsNoEncodingType {\n  const resolvedOptions = options || {};\n\n  return {\n    funcName: parseInputOption(\"funcName\", resolvedOptions[\"funcName\"], 1, { value: [], binLen: 0 }),\n    customization: parseInputOption(\"Customization\", resolvedOptions[\"customization\"], 1, { value: [], binLen: 0 }),\n  };\n}\n\n/**\n * Parses/validate constructor options for a KMAC variant\n *\n * @param options Option given to constructor\n */\nfunction resolveKMACOptions(options: KMACOptionsNoEncodingType): ResolvedKMACOptionsNoEncodingType {\n  const resolvedOptions = options || {};\n\n  return {\n    kmacKey: parseInputOption(\"kmacKey\", resolvedOptions[\"kmacKey\"], 1),\n    /* This is little-endian packed \"KMAC\" */\n    funcName: { value: [0x43414d4b], binLen: 32 },\n    customization: parseInputOption(\"Customization\", resolvedOptions[\"customization\"], 1, { value: [], binLen: 0 }),\n  };\n}\n\nexport default class jsSHA extends jsSHABase<Int_64[][], VariantType> {\n  intermediateState: Int_64[][];\n  variantBlockSize: number;\n  bigEndianMod: -1 | 1;\n  outputBinLen: number;\n  isVariableLen: boolean;\n  HMACSupported: boolean;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  roundFunc: (block: number[], H: Int_64[][]) => Int_64[][];\n  finalizeFunc: (\n    remainder: number[],\n    remainderBinLen: number,\n    processedBinLen: number,\n    H: Int_64[][],\n    outputLen: number\n  ) => number[];\n  stateCloneFunc: (state: Int_64[][]) => Int_64[][];\n  newStateFunc: (variant: VariantType) => Int_64[][];\n  getMAC: ((options: { outputLen: number }) => number[]) | null;\n\n  constructor(variant: FixedLengthVariantType, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(\n    variant: FixedLengthVariantType,\n    inputFormat: FormatNoTextType,\n    options?: FixedLengthOptionsNoEncodingType\n  );\n  constructor(variant: \"SHAKE128\" | \"SHAKE256\", inputFormat: \"TEXT\", options?: SHAKEOptionsEncodingType);\n  constructor(variant: \"SHAKE128\" | \"SHAKE256\", inputFormat: FormatNoTextType, options?: SHAKEOptionsNoEncodingType);\n  constructor(variant: \"CSHAKE128\" | \"CSHAKE256\", inputFormat: \"TEXT\", options?: CSHAKEOptionsEncodingType);\n  constructor(variant: \"CSHAKE128\" | \"CSHAKE256\", inputFormat: FormatNoTextType, options?: CSHAKEOptionsNoEncodingType);\n  constructor(variant: \"KMAC128\" | \"KMAC256\", inputFormat: \"TEXT\", options: KMACOptionsEncodingType);\n  constructor(variant: \"KMAC128\" | \"KMAC256\", inputFormat: FormatNoTextType, options: KMACOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    let delimiter = 0x06,\n      variantBlockSize = 0;\n    super(variant, inputFormat, options);\n    const resolvedOptions = options || {};\n\n    /* In other variants, this was done after variable initialization but need to do it earlier here becaue we want to\n       avoid KMAC initialization */\n    if (this.numRounds !== 1) {\n      if (resolvedOptions[\"kmacKey\"] || resolvedOptions[\"hmacKey\"]) {\n        throw new Error(mac_rounds_error);\n      } else if (this.shaVariant === \"CSHAKE128\" || this.shaVariant === \"CSHAKE256\") {\n        throw new Error(\"Cannot set numRounds for CSHAKE variants\");\n      }\n    }\n\n    this.bigEndianMod = 1;\n    this.converterFunc = getStrConverter(this.inputFormat, this.utfType, this.bigEndianMod);\n    this.roundFunc = roundSHA3;\n    this.stateCloneFunc = cloneSHA3State;\n    this.newStateFunc = getNewState;\n    this.intermediateState = getNewState(variant);\n\n    this.isVariableLen = false;\n    switch (variant) {\n      case \"SHA3-224\":\n        this.variantBlockSize = variantBlockSize = 1152;\n        this.outputBinLen = 224;\n        this.HMACSupported = true;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getHMAC;\n        break;\n      case \"SHA3-256\":\n        this.variantBlockSize = variantBlockSize = 1088;\n        this.outputBinLen = 256;\n        this.HMACSupported = true;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getHMAC;\n        break;\n      case \"SHA3-384\":\n        this.variantBlockSize = variantBlockSize = 832;\n        this.outputBinLen = 384;\n        this.HMACSupported = true;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getHMAC;\n        break;\n      case \"SHA3-512\":\n        this.variantBlockSize = variantBlockSize = 576;\n        this.outputBinLen = 512;\n        this.HMACSupported = true;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getHMAC;\n        break;\n      case \"SHAKE128\":\n        delimiter = 0x1f;\n        this.variantBlockSize = variantBlockSize = 1344;\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        this.getMAC = null;\n        break;\n      case \"SHAKE256\":\n        delimiter = 0x1f;\n        this.variantBlockSize = variantBlockSize = 1088;\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        this.getMAC = null;\n        break;\n      case \"KMAC128\":\n        delimiter = 0x4;\n        this.variantBlockSize = variantBlockSize = 1344;\n        this._initializeKMAC(options);\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getKMAC;\n        break;\n      case \"KMAC256\":\n        delimiter = 0x4;\n        this.variantBlockSize = variantBlockSize = 1088;\n        this._initializeKMAC(options);\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getKMAC;\n        break;\n      case \"CSHAKE128\":\n        this.variantBlockSize = variantBlockSize = 1344;\n        delimiter = this._initializeCSHAKE(options);\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        this.getMAC = null;\n        break;\n      case \"CSHAKE256\":\n        this.variantBlockSize = variantBlockSize = 1088;\n        delimiter = this._initializeCSHAKE(options);\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        this.getMAC = null;\n        break;\n      default:\n        throw new Error(sha_variant_error);\n    }\n\n    /* This needs to be down here as CSHAKE can change its delimiter */\n    this.finalizeFunc = function (remainder, remainderBinLen, processedBinLen, state, outputBinLen): number[] {\n      return finalizeSHA3(\n        remainder,\n        remainderBinLen,\n        processedBinLen,\n        state,\n        variantBlockSize,\n        delimiter,\n        outputBinLen\n      );\n    };\n\n    if (resolvedOptions[\"hmacKey\"]) {\n      this._setHMACKey(parseInputOption(\"hmacKey\", resolvedOptions[\"hmacKey\"], this.bigEndianMod));\n    }\n  }\n\n  /**\n   * Initialize CSHAKE variants.\n   *\n   * @param options Options containing CSHAKE params.\n   * @param funcNameOverride Overrides any \"funcName\" present in `options` (used with KMAC)\n   * @returns The delimiter to be used\n   */\n  protected _initializeCSHAKE(options?: CSHAKEOptionsNoEncodingType, funcNameOverride?: packedValue): number {\n    const resolvedOptions = resolveCSHAKEOptions(options || {});\n    if (funcNameOverride) {\n      resolvedOptions[\"funcName\"] = funcNameOverride;\n    }\n    const packedParams = packedLEConcat(\n      encode_string(resolvedOptions[\"funcName\"]),\n      encode_string(resolvedOptions[\"customization\"])\n    );\n\n    /* CSHAKE is defined to be a call to SHAKE iff both the customization and function-name string are both empty.  This\n       can be accomplished by processing nothing in this step. */\n    if (resolvedOptions[\"customization\"][\"binLen\"] !== 0 || resolvedOptions[\"funcName\"][\"binLen\"] !== 0) {\n      const byte_pad_out = byte_pad(packedParams, this.variantBlockSize >>> 3);\n      for (let i = 0; i < byte_pad_out.length; i += this.variantBlockSize >>> 5) {\n        this.intermediateState = this.roundFunc(\n          byte_pad_out.slice(i, i + (this.variantBlockSize >>> 5)),\n          this.intermediateState\n        );\n        this.processedLen += this.variantBlockSize;\n      }\n      return 0x04;\n    } else {\n      return 0x1f;\n    }\n  }\n\n  /**\n   * Initialize KMAC variants.\n   *\n   * @param options Options containing KMAC params.\n   */\n  protected _initializeKMAC(options: KMACOptionsNoEncodingType): void {\n    const resolvedOptions = resolveKMACOptions(options || {});\n\n    this._initializeCSHAKE(options, resolvedOptions[\"funcName\"]);\n    const byte_pad_out = byte_pad(encode_string(resolvedOptions[\"kmacKey\"]), this.variantBlockSize >>> 3);\n    for (let i = 0; i < byte_pad_out.length; i += this.variantBlockSize >>> 5) {\n      this.intermediateState = this.roundFunc(\n        byte_pad_out.slice(i, i + (this.variantBlockSize >>> 5)),\n        this.intermediateState\n      );\n      this.processedLen += this.variantBlockSize;\n    }\n    this.macKeySet = true;\n  }\n\n  /**\n   * Returns the the KMAC in the specified format.\n   *\n   * @param options Hashmap of extra outputs options. `outputLen` must be specified.\n   * @returns The KMAC in the format specified.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected _getKMAC(options: { outputLen: number }): number[] {\n    const concatedRemainder = packedLEConcat(\n      { value: this.remainder.slice(), binLen: this.remainderLen },\n      right_encode(options[\"outputLen\"])\n    );\n\n    return this.finalizeFunc(\n      concatedRemainder[\"value\"],\n      concatedRemainder[\"binLen\"],\n      this.processedLen,\n      this.stateCloneFunc(this.intermediateState),\n      options[\"outputLen\"]\n    );\n  }\n}\n", "import { sha_variant_error } from \"./common\";\nimport {\n  CSHAKEOptionsEncodingType,\n  CSHAKEOptionsNoEncodingType,\n  SHAKEOptionsEncodingType,\n  SHAKEOptionsNoEncodingType,\n  EncodingType,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n  KMACOptionsNoEncodingType,\n  KMACOptionsEncodingType,\n} from \"./custom_types\";\nimport jsSHA1 from \"./sha1\";\nimport jsSHA256 from \"./sha256\";\nimport jsSHA512 from \"./sha512\";\nimport jsSHA3 from \"./sha3\";\n\ntype FixedLengthVariantType =\n  | \"SHA-1\"\n  | \"SHA-224\"\n  | \"SHA-256\"\n  | \"SHA-384\"\n  | \"SHA-512\"\n  | \"SHA3-224\"\n  | \"SHA3-256\"\n  | \"SHA3-384\"\n  | \"SHA3-512\";\n\nexport default class jsSHA {\n  private readonly shaObj: jsSHA1 | jsSHA256 | jsSHA512 | jsSHA3;\n  /**\n   * @param variant The desired SHA variant (SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA3-224, SHA3-256, SHA3-256,\n   *   SHA3-384, SHA3-512, SHAKE128, SHAKE256, CSHAKE128, CSHAKE256, KMAC128, or KMAC256) as a string.\n   * @param inputFormat The input format to be used in future `update` calls (TEXT, HEX, B64, BYTES, ARRAYBUFFER,\n   *   or UINT8ARRAY) as a string.\n   * @param options Options in the form of { encoding?: \"UTF8\" | \"UTF16BE\" | \"UTF16LE\"; numRounds?: number }.\n   *   `encoding` is for only TEXT input (defaults to UTF8) and `numRounds` defaults to 1.\n   *   `numRounds` is not valid for any of the MAC or CSHAKE variants.\n   *   * If the variant supports HMAC, `options` may have an additional `hmacKey` key which must be in the form of\n   *     {value: <INPUT>, format: <FORMAT>, encoding?: \"UTF8\" | \"UTF16BE\" | \"UTF16LE\"} where <FORMAT> takes the same\n   *     values as `inputFormat` and <INPUT> can be a `string | ArrayBuffer | Uint8Array` depending on <FORMAT>.\n   *     Supplying this key switches to HMAC calculation and replaces the now deprecated call to `setHMACKey`.\n   *   * If the variant is CSHAKE128 or CSHAKE256, `options` may have two additional keys, `customization` and `funcName`,\n   *     which are the NIST customization and function-name strings.  Both must be in the same form as `hmacKey`.\n   *   * If the variant is KMAC128 or KMAC256, `options` can include the `customization` key from CSHAKE variants and\n   *     *must* have a `kmacKey` key that takes the same form as the `customization` key.\n   */\n  constructor(variant: FixedLengthVariantType, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(\n    variant: FixedLengthVariantType,\n    inputFormat: FormatNoTextType,\n    options?: FixedLengthOptionsNoEncodingType\n  );\n  constructor(variant: \"SHAKE128\" | \"SHAKE256\", inputFormat: \"TEXT\", options?: SHAKEOptionsEncodingType);\n  constructor(variant: \"SHAKE128\" | \"SHAKE256\", inputFormat: FormatNoTextType, options?: SHAKEOptionsNoEncodingType);\n  constructor(variant: \"CSHAKE128\" | \"CSHAKE256\", inputFormat: \"TEXT\", options?: CSHAKEOptionsEncodingType);\n  constructor(variant: \"CSHAKE128\" | \"CSHAKE256\", inputFormat: FormatNoTextType, options?: CSHAKEOptionsNoEncodingType);\n  constructor(variant: \"KMAC128\" | \"KMAC256\", inputFormat: \"TEXT\", options: KMACOptionsEncodingType);\n  constructor(variant: \"KMAC128\" | \"KMAC256\", inputFormat: FormatNoTextType, options: KMACOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    if (\"SHA-1\" == variant) {\n      this.shaObj = new jsSHA1(variant, inputFormat, options);\n    } else if (\"SHA-224\" == variant || \"SHA-256\" == variant) {\n      this.shaObj = new jsSHA256(variant, inputFormat, options);\n    } else if (\"SHA-384\" == variant || \"SHA-512\" == variant) {\n      this.shaObj = new jsSHA512(variant, inputFormat, options);\n    } else if (\n      \"SHA3-224\" == variant ||\n      \"SHA3-256\" == variant ||\n      \"SHA3-384\" == variant ||\n      \"SHA3-512\" == variant ||\n      \"SHAKE128\" == variant ||\n      \"SHAKE256\" == variant ||\n      \"CSHAKE128\" == variant ||\n      \"CSHAKE256\" == variant ||\n      \"KMAC128\" == variant ||\n      \"KMAC256\" == variant\n    ) {\n      this.shaObj = new jsSHA3(variant, inputFormat, options);\n    } else {\n      throw new Error(sha_variant_error);\n    }\n  }\n\n  /**\n   * Takes `input` and hashes as many blocks as possible. Stores the rest for either a future `update` or `getHash` call.\n   *\n   * @param input The input to be hashed\n   */\n  update(input: string | ArrayBuffer | Uint8Array): void {\n    this.shaObj.update(input);\n  }\n\n  /**\n   * Returns the desired SHA or MAC (if a HMAC/KMAC key was specified) hash of the input fed in via `update` calls.\n   *\n   * @param format The desired output formatting (B64, HEX, BYTES, ARRAYBUFFER, or UINT8ARRAY) as a string.\n   * @param options Options in the form of { outputUpper?: boolean; b64Pad?: string; outputLen?: number;  }.\n   *   `outputLen` is required for variable length output variants (this option was previously called `shakeLen` which\n   *    is now deprecated).\n   *   `outputUpper` is only for HEX output (defaults to false) and b64pad is only for B64 output (defaults to \"=\").\n   * @returns The hash in the format specified.\n   */\n  getHash(format: \"HEX\", options?: { outputUpper?: boolean; outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"B64\", options?: { b64Pad?: string; outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"BYTES\", options?: { outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"UINT8ARRAY\", options?: { outputLen?: number; shakeLen?: number }): Uint8Array;\n  getHash(format: \"ARRAYBUFFER\", options?: { outputLen?: number; shakeLen?: number }): ArrayBuffer;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getHash(format: any, options?: any): any {\n    return this.shaObj.getHash(format, options);\n  }\n\n  /**\n   * Sets the HMAC key for an eventual `getHMAC` call.  Must be called immediately after jsSHA object instantiation.\n   * Now deprecated in favor of setting the `hmacKey` at object instantiation.\n   *\n   * @param key The key used to calculate the HMAC\n   * @param inputFormat The format of key (HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY) as a string.\n   * @param options Options in the form of { encoding?: \"UTF8\" | \"UTF16BE\" | \"UTF16LE }.  `encoding` is only for TEXT\n   *   and defaults to UTF8.\n   */\n  setHMACKey(key: string, inputFormat: \"TEXT\", options?: { encoding?: EncodingType }): void;\n  setHMACKey(key: string, inputFormat: \"B64\" | \"HEX\" | \"BYTES\"): void;\n  setHMACKey(key: ArrayBuffer, inputFormat: \"ARRAYBUFFER\"): void;\n  setHMACKey(key: Uint8Array, inputFormat: \"UINT8ARRAY\"): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  setHMACKey(key: any, inputFormat: any, options?: any): void {\n    this.shaObj.setHMACKey(key, inputFormat, options);\n  }\n\n  /**\n   * Returns the the HMAC in the specified format using the key given by a previous `setHMACKey` call. Now deprecated\n   * in favor of just calling `getHash`.\n   *\n   * @param format The desired output formatting (B64, HEX, BYTES, ARRAYBUFFER, or UINT8ARRAY) as a string.\n   * @param options Options in the form of { outputUpper?: boolean; b64Pad?: string }. `outputUpper` is only for HEX\n   *   output (defaults to false) and `b64pad` is only for B64 output (defaults to \"=\").\n   * @returns The HMAC in the format specified.\n   */\n  getHMAC(format: \"HEX\", options?: { outputUpper?: boolean }): string;\n  getHMAC(format: \"B64\", options?: { b64Pad?: string }): string;\n  getHMAC(format: \"BYTES\"): string;\n  getHMAC(format: \"UINT8ARRAY\"): Uint8Array;\n  getHMAC(format: \"ARRAYBUFFER\"): ArrayBuffer;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getHMAC(format: any, options?: any): any {\n    return this.shaObj.getHMAC(format, options);\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;\nfunction getSecureRandomBytes(size) {\n    return Buffer.from(window.crypto.getRandomValues(new Uint8Array(size)));\n}\nexports.getSecureRandomBytes = getSecureRandomBytes;\nfunction getSecureRandomWords(size) {\n    return window.crypto.getRandomValues(new Uint16Array(size));\n}\nexports.getSecureRandomWords = getSecureRandomWords;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac_sha512 = void 0;\nasync function hmac_sha512(key, data) {\n    let keyBuffer = typeof key === 'string' ? Buffer.from(key, 'utf-8') : key;\n    let dataBuffer = typeof data === 'string' ? Buffer.from(data, 'utf-8') : data;\n    const hmacAlgo = { name: \"HMAC\", hash: \"SHA-512\" };\n    const hmacKey = await window.crypto.subtle.importKey(\"raw\", keyBuffer, hmacAlgo, false, [\"sign\"]);\n    return Buffer.from(await crypto.subtle.sign(hmacAlgo, hmacKey, dataBuffer));\n}\nexports.hmac_sha512 = hmac_sha512;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2_sha512 = void 0;\nasync function pbkdf2_sha512(key, salt, iterations, keyLen) {\n    const keyBuffer = typeof key === 'string' ? Buffer.from(key, 'utf-8') : key;\n    const saltBuffer = typeof salt === 'string' ? Buffer.from(salt, 'utf-8') : salt;\n    const pbkdf2_key = await window.crypto.subtle.importKey(\"raw\", keyBuffer, { name: \"PBKDF2\" }, false, [\"deriveBits\"]);\n    const derivedBits = await window.crypto.subtle.deriveBits({ name: \"PBKDF2\", hash: \"SHA-512\", salt: saltBuffer, iterations: iterations }, pbkdf2_key, keyLen * 8);\n    return Buffer.from(derivedBits);\n}\nexports.pbkdf2_sha512 = pbkdf2_sha512;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nasync function sha256(source) {\n    if (typeof source === 'string') {\n        return Buffer.from(await crypto.subtle.digest(\"SHA-256\", Buffer.from(source, 'utf-8')));\n    }\n    return Buffer.from(await crypto.subtle.digest(\"SHA-256\", source));\n}\nexports.sha256 = sha256;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha512 = void 0;\nasync function sha512(source) {\n    if (typeof source === 'string') {\n        return Buffer.from(await crypto.subtle.digest(\"SHA-512\", Buffer.from(source, 'utf-8')));\n    }\n    return Buffer.from(await crypto.subtle.digest(\"SHA-512\", source));\n}\nexports.sha512 = sha512;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha512 = exports.sha256 = exports.pbkdf2_sha512 = exports.hmac_sha512 = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;\nvar getSecureRandom_1 = require(\"./browser/getSecureRandom\");\nObject.defineProperty(exports, \"getSecureRandomBytes\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomBytes; } });\nObject.defineProperty(exports, \"getSecureRandomWords\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomWords; } });\nvar hmac_sha512_1 = require(\"./browser/hmac_sha512\");\nObject.defineProperty(exports, \"hmac_sha512\", { enumerable: true, get: function () { return hmac_sha512_1.hmac_sha512; } });\nvar pbkdf2_sha512_1 = require(\"./browser/pbkdf2_sha512\");\nObject.defineProperty(exports, \"pbkdf2_sha512\", { enumerable: true, get: function () { return pbkdf2_sha512_1.pbkdf2_sha512; } });\nvar sha256_1 = require(\"./browser/sha256\");\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha256_1.sha256; } });\nvar sha512_1 = require(\"./browser/sha512\");\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha512_1.sha512; } });\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = exports.sha256_fallback = exports.sha256_sync = void 0;\nconst jssha_1 = __importDefault(require(\"jssha\"));\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction sha256_sync(source) {\n    let src;\n    if (typeof source === 'string') {\n        src = Buffer.from(source, 'utf-8').toString('hex');\n    }\n    else {\n        src = source.toString('hex');\n    }\n    let hasher = new jssha_1.default('SHA-256', 'HEX');\n    hasher.update(src);\n    let res = hasher.getHash('HEX');\n    return Buffer.from(res, 'hex');\n}\nexports.sha256_sync = sha256_sync;\nasync function sha256_fallback(source) {\n    return sha256_sync(source);\n}\nexports.sha256_fallback = sha256_fallback;\nfunction sha256(source) {\n    return (0, ton_crypto_primitives_1.sha256)(source);\n}\nexports.sha256 = sha256;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha512 = exports.sha512_fallback = exports.sha512_sync = void 0;\nconst jssha_1 = __importDefault(require(\"jssha\"));\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction sha512_sync(source) {\n    let src;\n    if (typeof source === 'string') {\n        src = Buffer.from(source, 'utf-8').toString('hex');\n    }\n    else {\n        src = source.toString('hex');\n    }\n    let hasher = new jssha_1.default('SHA-512', 'HEX');\n    hasher.update(src);\n    let res = hasher.getHash('HEX');\n    return Buffer.from(res, 'hex');\n}\nexports.sha512_sync = sha512_sync;\nasync function sha512_fallback(source) {\n    return sha512_sync(source);\n}\nexports.sha512_fallback = sha512_fallback;\nasync function sha512(source) {\n    return (0, ton_crypto_primitives_1.sha512)(source);\n}\nexports.sha512 = sha512;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2_sha512 = void 0;\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction pbkdf2_sha512(key, salt, iterations, keyLen) {\n    return (0, ton_crypto_primitives_1.pbkdf2_sha512)(key, salt, iterations, keyLen);\n}\nexports.pbkdf2_sha512 = pbkdf2_sha512;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac_sha512 = exports.hmac_sha512_fallback = void 0;\nconst jssha_1 = __importDefault(require(\"jssha\"));\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nasync function hmac_sha512_fallback(key, data) {\n    let keyBuffer = typeof key === 'string' ? Buffer.from(key, 'utf-8') : key;\n    let dataBuffer = typeof data === 'string' ? Buffer.from(data, 'utf-8') : data;\n    const shaObj = new jssha_1.default(\"SHA-512\", \"HEX\", {\n        hmacKey: { value: keyBuffer.toString('hex'), format: \"HEX\" },\n    });\n    shaObj.update(dataBuffer.toString('hex'));\n    const hmac = shaObj.getHash(\"HEX\");\n    return Buffer.from(hmac, 'hex');\n}\nexports.hmac_sha512_fallback = hmac_sha512_fallback;\nfunction hmac_sha512(key, data) {\n    return (0, ton_crypto_primitives_1.hmac_sha512)(key, data);\n}\nexports.hmac_sha512 = hmac_sha512;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nasync function getSecureRandomBytes(size) {\n    return (0, ton_crypto_primitives_1.getSecureRandomBytes)(size);\n}\nexports.getSecureRandomBytes = getSecureRandomBytes;\nasync function getSecureRandomWords(size) {\n    return getSecureRandomWords(size);\n}\nexports.getSecureRandomWords = getSecureRandomWords;\nasync function getSecureRandomNumber(min, max) {\n    let range = max - min;\n    var bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n        throw new Error('Range is too large');\n    }\n    var bytesNeeded = Math.ceil(bitsNeeded / 8);\n    var mask = Math.pow(2, bitsNeeded) - 1;\n    while (true) {\n        let res = await getSecureRandomBytes(bitsNeeded);\n        let power = (bytesNeeded - 1) * 8;\n        let numberValue = 0;\n        for (var i = 0; i < bytesNeeded; i++) {\n            numberValue += res[i] * Math.pow(2, power);\n            power -= 8;\n        }\n        numberValue = numberValue & mask; // Truncate\n        if (numberValue >= range) {\n            continue;\n        }\n        return min + numberValue;\n    }\n}\nexports.getSecureRandomNumber = getSecureRandomNumber;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\n// Source https://www.eff.org/dice\nexports.wordlist = [\n    'abacus',\n    'abdomen',\n    'abdominal',\n    'abide',\n    'abiding',\n    'ability',\n    'ablaze',\n    'able',\n    'abnormal',\n    'abrasion',\n    'abrasive',\n    'abreast',\n    'abridge',\n    'abroad',\n    'abruptly',\n    'absence',\n    'absentee',\n    'absently',\n    'absinthe',\n    'absolute',\n    'absolve',\n    'abstain',\n    'abstract',\n    'absurd',\n    'accent',\n    'acclaim',\n    'acclimate',\n    'accompany',\n    'account',\n    'accuracy',\n    'accurate',\n    'accustom',\n    'acetone',\n    'achiness',\n    'aching',\n    'acid',\n    'acorn',\n    'acquaint',\n    'acquire',\n    'acre',\n    'acrobat',\n    'acronym',\n    'acting',\n    'action',\n    'activate',\n    'activator',\n    'active',\n    'activism',\n    'activist',\n    'activity',\n    'actress',\n    'acts',\n    'acutely',\n    'acuteness',\n    'aeration',\n    'aerobics',\n    'aerosol',\n    'aerospace',\n    'afar',\n    'affair',\n    'affected',\n    'affecting',\n    'affection',\n    'affidavit',\n    'affiliate',\n    'affirm',\n    'affix',\n    'afflicted',\n    'affluent',\n    'afford',\n    'affront',\n    'aflame',\n    'afloat',\n    'aflutter',\n    'afoot',\n    'afraid',\n    'afterglow',\n    'afterlife',\n    'aftermath',\n    'aftermost',\n    'afternoon',\n    'aged',\n    'ageless',\n    'agency',\n    'agenda',\n    'agent',\n    'aggregate',\n    'aghast',\n    'agile',\n    'agility',\n    'aging',\n    'agnostic',\n    'agonize',\n    'agonizing',\n    'agony',\n    'agreeable',\n    'agreeably',\n    'agreed',\n    'agreeing',\n    'agreement',\n    'aground',\n    'ahead',\n    'ahoy',\n    'aide',\n    'aids',\n    'aim',\n    'ajar',\n    'alabaster',\n    'alarm',\n    'albatross',\n    'album',\n    'alfalfa',\n    'algebra',\n    'algorithm',\n    'alias',\n    'alibi',\n    'alienable',\n    'alienate',\n    'aliens',\n    'alike',\n    'alive',\n    'alkaline',\n    'alkalize',\n    'almanac',\n    'almighty',\n    'almost',\n    'aloe',\n    'aloft',\n    'aloha',\n    'alone',\n    'alongside',\n    'aloof',\n    'alphabet',\n    'alright',\n    'although',\n    'altitude',\n    'alto',\n    'aluminum',\n    'alumni',\n    'always',\n    'amaretto',\n    'amaze',\n    'amazingly',\n    'amber',\n    'ambiance',\n    'ambiguity',\n    'ambiguous',\n    'ambition',\n    'ambitious',\n    'ambulance',\n    'ambush',\n    'amendable',\n    'amendment',\n    'amends',\n    'amenity',\n    'amiable',\n    'amicably',\n    'amid',\n    'amigo',\n    'amino',\n    'amiss',\n    'ammonia',\n    'ammonium',\n    'amnesty',\n    'amniotic',\n    'among',\n    'amount',\n    'amperage',\n    'ample',\n    'amplifier',\n    'amplify',\n    'amply',\n    'amuck',\n    'amulet',\n    'amusable',\n    'amused',\n    'amusement',\n    'amuser',\n    'amusing',\n    'anaconda',\n    'anaerobic',\n    'anagram',\n    'anatomist',\n    'anatomy',\n    'anchor',\n    'anchovy',\n    'ancient',\n    'android',\n    'anemia',\n    'anemic',\n    'aneurism',\n    'anew',\n    'angelfish',\n    'angelic',\n    'anger',\n    'angled',\n    'angler',\n    'angles',\n    'angling',\n    'angrily',\n    'angriness',\n    'anguished',\n    'angular',\n    'animal',\n    'animate',\n    'animating',\n    'animation',\n    'animator',\n    'anime',\n    'animosity',\n    'ankle',\n    'annex',\n    'annotate',\n    'announcer',\n    'annoying',\n    'annually',\n    'annuity',\n    'anointer',\n    'another',\n    'answering',\n    'antacid',\n    'antarctic',\n    'anteater',\n    'antelope',\n    'antennae',\n    'anthem',\n    'anthill',\n    'anthology',\n    'antibody',\n    'antics',\n    'antidote',\n    'antihero',\n    'antiquely',\n    'antiques',\n    'antiquity',\n    'antirust',\n    'antitoxic',\n    'antitrust',\n    'antiviral',\n    'antivirus',\n    'antler',\n    'antonym',\n    'antsy',\n    'anvil',\n    'anybody',\n    'anyhow',\n    'anymore',\n    'anyone',\n    'anyplace',\n    'anything',\n    'anytime',\n    'anyway',\n    'anywhere',\n    'aorta',\n    'apache',\n    'apostle',\n    'appealing',\n    'appear',\n    'appease',\n    'appeasing',\n    'appendage',\n    'appendix',\n    'appetite',\n    'appetizer',\n    'applaud',\n    'applause',\n    'apple',\n    'appliance',\n    'applicant',\n    'applied',\n    'apply',\n    'appointee',\n    'appraisal',\n    'appraiser',\n    'apprehend',\n    'approach',\n    'approval',\n    'approve',\n    'apricot',\n    'april',\n    'apron',\n    'aptitude',\n    'aptly',\n    'aqua',\n    'aqueduct',\n    'arbitrary',\n    'arbitrate',\n    'ardently',\n    'area',\n    'arena',\n    'arguable',\n    'arguably',\n    'argue',\n    'arise',\n    'armadillo',\n    'armband',\n    'armchair',\n    'armed',\n    'armful',\n    'armhole',\n    'arming',\n    'armless',\n    'armoire',\n    'armored',\n    'armory',\n    'armrest',\n    'army',\n    'aroma',\n    'arose',\n    'around',\n    'arousal',\n    'arrange',\n    'array',\n    'arrest',\n    'arrival',\n    'arrive',\n    'arrogance',\n    'arrogant',\n    'arson',\n    'art',\n    'ascend',\n    'ascension',\n    'ascent',\n    'ascertain',\n    'ashamed',\n    'ashen',\n    'ashes',\n    'ashy',\n    'aside',\n    'askew',\n    'asleep',\n    'asparagus',\n    'aspect',\n    'aspirate',\n    'aspire',\n    'aspirin',\n    'astonish',\n    'astound',\n    'astride',\n    'astrology',\n    'astronaut',\n    'astronomy',\n    'astute',\n    'atlantic',\n    'atlas',\n    'atom',\n    'atonable',\n    'atop',\n    'atrium',\n    'atrocious',\n    'atrophy',\n    'attach',\n    'attain',\n    'attempt',\n    'attendant',\n    'attendee',\n    'attention',\n    'attentive',\n    'attest',\n    'attic',\n    'attire',\n    'attitude',\n    'attractor',\n    'attribute',\n    'atypical',\n    'auction',\n    'audacious',\n    'audacity',\n    'audible',\n    'audibly',\n    'audience',\n    'audio',\n    'audition',\n    'augmented',\n    'august',\n    'authentic',\n    'author',\n    'autism',\n    'autistic',\n    'autograph',\n    'automaker',\n    'automated',\n    'automatic',\n    'autopilot',\n    'available',\n    'avalanche',\n    'avatar',\n    'avenge',\n    'avenging',\n    'avenue',\n    'average',\n    'aversion',\n    'avert',\n    'aviation',\n    'aviator',\n    'avid',\n    'avoid',\n    'await',\n    'awaken',\n    'award',\n    'aware',\n    'awhile',\n    'awkward',\n    'awning',\n    'awoke',\n    'awry',\n    'axis',\n    'babble',\n    'babbling',\n    'babied',\n    'baboon',\n    'backache',\n    'backboard',\n    'backboned',\n    'backdrop',\n    'backed',\n    'backer',\n    'backfield',\n    'backfire',\n    'backhand',\n    'backing',\n    'backlands',\n    'backlash',\n    'backless',\n    'backlight',\n    'backlit',\n    'backlog',\n    'backpack',\n    'backpedal',\n    'backrest',\n    'backroom',\n    'backshift',\n    'backside',\n    'backslid',\n    'backspace',\n    'backspin',\n    'backstab',\n    'backstage',\n    'backtalk',\n    'backtrack',\n    'backup',\n    'backward',\n    'backwash',\n    'backwater',\n    'backyard',\n    'bacon',\n    'bacteria',\n    'bacterium',\n    'badass',\n    'badge',\n    'badland',\n    'badly',\n    'badness',\n    'baffle',\n    'baffling',\n    'bagel',\n    'bagful',\n    'baggage',\n    'bagged',\n    'baggie',\n    'bagginess',\n    'bagging',\n    'baggy',\n    'bagpipe',\n    'baguette',\n    'baked',\n    'bakery',\n    'bakeshop',\n    'baking',\n    'balance',\n    'balancing',\n    'balcony',\n    'balmy',\n    'balsamic',\n    'bamboo',\n    'banana',\n    'banish',\n    'banister',\n    'banjo',\n    'bankable',\n    'bankbook',\n    'banked',\n    'banker',\n    'banking',\n    'banknote',\n    'bankroll',\n    'banner',\n    'bannister',\n    'banshee',\n    'banter',\n    'barbecue',\n    'barbed',\n    'barbell',\n    'barber',\n    'barcode',\n    'barge',\n    'bargraph',\n    'barista',\n    'baritone',\n    'barley',\n    'barmaid',\n    'barman',\n    'barn',\n    'barometer',\n    'barrack',\n    'barracuda',\n    'barrel',\n    'barrette',\n    'barricade',\n    'barrier',\n    'barstool',\n    'bartender',\n    'barterer',\n    'bash',\n    'basically',\n    'basics',\n    'basil',\n    'basin',\n    'basis',\n    'basket',\n    'batboy',\n    'batch',\n    'bath',\n    'baton',\n    'bats',\n    'battalion',\n    'battered',\n    'battering',\n    'battery',\n    'batting',\n    'battle',\n    'bauble',\n    'bazooka',\n    'blabber',\n    'bladder',\n    'blade',\n    'blah',\n    'blame',\n    'blaming',\n    'blanching',\n    'blandness',\n    'blank',\n    'blaspheme',\n    'blasphemy',\n    'blast',\n    'blatancy',\n    'blatantly',\n    'blazer',\n    'blazing',\n    'bleach',\n    'bleak',\n    'bleep',\n    'blemish',\n    'blend',\n    'bless',\n    'blighted',\n    'blimp',\n    'bling',\n    'blinked',\n    'blinker',\n    'blinking',\n    'blinks',\n    'blip',\n    'blissful',\n    'blitz',\n    'blizzard',\n    'bloated',\n    'bloating',\n    'blob',\n    'blog',\n    'bloomers',\n    'blooming',\n    'blooper',\n    'blot',\n    'blouse',\n    'blubber',\n    'bluff',\n    'bluish',\n    'blunderer',\n    'blunt',\n    'blurb',\n    'blurred',\n    'blurry',\n    'blurt',\n    'blush',\n    'blustery',\n    'boaster',\n    'boastful',\n    'boasting',\n    'boat',\n    'bobbed',\n    'bobbing',\n    'bobble',\n    'bobcat',\n    'bobsled',\n    'bobtail',\n    'bodacious',\n    'body',\n    'bogged',\n    'boggle',\n    'bogus',\n    'boil',\n    'bok',\n    'bolster',\n    'bolt',\n    'bonanza',\n    'bonded',\n    'bonding',\n    'bondless',\n    'boned',\n    'bonehead',\n    'boneless',\n    'bonelike',\n    'boney',\n    'bonfire',\n    'bonnet',\n    'bonsai',\n    'bonus',\n    'bony',\n    'boogeyman',\n    'boogieman',\n    'book',\n    'boondocks',\n    'booted',\n    'booth',\n    'bootie',\n    'booting',\n    'bootlace',\n    'bootleg',\n    'boots',\n    'boozy',\n    'borax',\n    'boring',\n    'borough',\n    'borrower',\n    'borrowing',\n    'boss',\n    'botanical',\n    'botanist',\n    'botany',\n    'botch',\n    'both',\n    'bottle',\n    'bottling',\n    'bottom',\n    'bounce',\n    'bouncing',\n    'bouncy',\n    'bounding',\n    'boundless',\n    'bountiful',\n    'bovine',\n    'boxcar',\n    'boxer',\n    'boxing',\n    'boxlike',\n    'boxy',\n    'breach',\n    'breath',\n    'breeches',\n    'breeching',\n    'breeder',\n    'breeding',\n    'breeze',\n    'breezy',\n    'brethren',\n    'brewery',\n    'brewing',\n    'briar',\n    'bribe',\n    'brick',\n    'bride',\n    'bridged',\n    'brigade',\n    'bright',\n    'brilliant',\n    'brim',\n    'bring',\n    'brink',\n    'brisket',\n    'briskly',\n    'briskness',\n    'bristle',\n    'brittle',\n    'broadband',\n    'broadcast',\n    'broaden',\n    'broadly',\n    'broadness',\n    'broadside',\n    'broadways',\n    'broiler',\n    'broiling',\n    'broken',\n    'broker',\n    'bronchial',\n    'bronco',\n    'bronze',\n    'bronzing',\n    'brook',\n    'broom',\n    'brought',\n    'browbeat',\n    'brownnose',\n    'browse',\n    'browsing',\n    'bruising',\n    'brunch',\n    'brunette',\n    'brunt',\n    'brush',\n    'brussels',\n    'brute',\n    'brutishly',\n    'bubble',\n    'bubbling',\n    'bubbly',\n    'buccaneer',\n    'bucked',\n    'bucket',\n    'buckle',\n    'buckshot',\n    'buckskin',\n    'bucktooth',\n    'buckwheat',\n    'buddhism',\n    'buddhist',\n    'budding',\n    'buddy',\n    'budget',\n    'buffalo',\n    'buffed',\n    'buffer',\n    'buffing',\n    'buffoon',\n    'buggy',\n    'bulb',\n    'bulge',\n    'bulginess',\n    'bulgur',\n    'bulk',\n    'bulldog',\n    'bulldozer',\n    'bullfight',\n    'bullfrog',\n    'bullhorn',\n    'bullion',\n    'bullish',\n    'bullpen',\n    'bullring',\n    'bullseye',\n    'bullwhip',\n    'bully',\n    'bunch',\n    'bundle',\n    'bungee',\n    'bunion',\n    'bunkbed',\n    'bunkhouse',\n    'bunkmate',\n    'bunny',\n    'bunt',\n    'busboy',\n    'bush',\n    'busily',\n    'busload',\n    'bust',\n    'busybody',\n    'buzz',\n    'cabana',\n    'cabbage',\n    'cabbie',\n    'cabdriver',\n    'cable',\n    'caboose',\n    'cache',\n    'cackle',\n    'cacti',\n    'cactus',\n    'caddie',\n    'caddy',\n    'cadet',\n    'cadillac',\n    'cadmium',\n    'cage',\n    'cahoots',\n    'cake',\n    'calamari',\n    'calamity',\n    'calcium',\n    'calculate',\n    'calculus',\n    'caliber',\n    'calibrate',\n    'calm',\n    'caloric',\n    'calorie',\n    'calzone',\n    'camcorder',\n    'cameo',\n    'camera',\n    'camisole',\n    'camper',\n    'campfire',\n    'camping',\n    'campsite',\n    'campus',\n    'canal',\n    'canary',\n    'cancel',\n    'candied',\n    'candle',\n    'candy',\n    'cane',\n    'canine',\n    'canister',\n    'cannabis',\n    'canned',\n    'canning',\n    'cannon',\n    'cannot',\n    'canola',\n    'canon',\n    'canopener',\n    'canopy',\n    'canteen',\n    'canyon',\n    'capable',\n    'capably',\n    'capacity',\n    'cape',\n    'capillary',\n    'capital',\n    'capitol',\n    'capped',\n    'capricorn',\n    'capsize',\n    'capsule',\n    'caption',\n    'captivate',\n    'captive',\n    'captivity',\n    'capture',\n    'caramel',\n    'carat',\n    'caravan',\n    'carbon',\n    'cardboard',\n    'carded',\n    'cardiac',\n    'cardigan',\n    'cardinal',\n    'cardstock',\n    'carefully',\n    'caregiver',\n    'careless',\n    'caress',\n    'caretaker',\n    'cargo',\n    'caring',\n    'carless',\n    'carload',\n    'carmaker',\n    'carnage',\n    'carnation',\n    'carnival',\n    'carnivore',\n    'carol',\n    'carpenter',\n    'carpentry',\n    'carpool',\n    'carport',\n    'carried',\n    'carrot',\n    'carrousel',\n    'carry',\n    'cartel',\n    'cartload',\n    'carton',\n    'cartoon',\n    'cartridge',\n    'cartwheel',\n    'carve',\n    'carving',\n    'carwash',\n    'cascade',\n    'case',\n    'cash',\n    'casing',\n    'casino',\n    'casket',\n    'cassette',\n    'casually',\n    'casualty',\n    'catacomb',\n    'catalog',\n    'catalyst',\n    'catalyze',\n    'catapult',\n    'cataract',\n    'catatonic',\n    'catcall',\n    'catchable',\n    'catcher',\n    'catching',\n    'catchy',\n    'caterer',\n    'catering',\n    'catfight',\n    'catfish',\n    'cathedral',\n    'cathouse',\n    'catlike',\n    'catnap',\n    'catnip',\n    'catsup',\n    'cattail',\n    'cattishly',\n    'cattle',\n    'catty',\n    'catwalk',\n    'caucasian',\n    'caucus',\n    'causal',\n    'causation',\n    'cause',\n    'causing',\n    'cauterize',\n    'caution',\n    'cautious',\n    'cavalier',\n    'cavalry',\n    'caviar',\n    'cavity',\n    'cedar',\n    'celery',\n    'celestial',\n    'celibacy',\n    'celibate',\n    'celtic',\n    'cement',\n    'census',\n    'ceramics',\n    'ceremony',\n    'certainly',\n    'certainty',\n    'certified',\n    'certify',\n    'cesarean',\n    'cesspool',\n    'chafe',\n    'chaffing',\n    'chain',\n    'chair',\n    'chalice',\n    'challenge',\n    'chamber',\n    'chamomile',\n    'champion',\n    'chance',\n    'change',\n    'channel',\n    'chant',\n    'chaos',\n    'chaperone',\n    'chaplain',\n    'chapped',\n    'chaps',\n    'chapter',\n    'character',\n    'charbroil',\n    'charcoal',\n    'charger',\n    'charging',\n    'chariot',\n    'charity',\n    'charm',\n    'charred',\n    'charter',\n    'charting',\n    'chase',\n    'chasing',\n    'chaste',\n    'chastise',\n    'chastity',\n    'chatroom',\n    'chatter',\n    'chatting',\n    'chatty',\n    'cheating',\n    'cheddar',\n    'cheek',\n    'cheer',\n    'cheese',\n    'cheesy',\n    'chef',\n    'chemicals',\n    'chemist',\n    'chemo',\n    'cherisher',\n    'cherub',\n    'chess',\n    'chest',\n    'chevron',\n    'chevy',\n    'chewable',\n    'chewer',\n    'chewing',\n    'chewy',\n    'chief',\n    'chihuahua',\n    'childcare',\n    'childhood',\n    'childish',\n    'childless',\n    'childlike',\n    'chili',\n    'chill',\n    'chimp',\n    'chip',\n    'chirping',\n    'chirpy',\n    'chitchat',\n    'chivalry',\n    'chive',\n    'chloride',\n    'chlorine',\n    'choice',\n    'chokehold',\n    'choking',\n    'chomp',\n    'chooser',\n    'choosing',\n    'choosy',\n    'chop',\n    'chosen',\n    'chowder',\n    'chowtime',\n    'chrome',\n    'chubby',\n    'chuck',\n    'chug',\n    'chummy',\n    'chump',\n    'chunk',\n    'churn',\n    'chute',\n    'cider',\n    'cilantro',\n    'cinch',\n    'cinema',\n    'cinnamon',\n    'circle',\n    'circling',\n    'circular',\n    'circulate',\n    'circus',\n    'citable',\n    'citadel',\n    'citation',\n    'citizen',\n    'citric',\n    'citrus',\n    'city',\n    'civic',\n    'civil',\n    'clad',\n    'claim',\n    'clambake',\n    'clammy',\n    'clamor',\n    'clamp',\n    'clamshell',\n    'clang',\n    'clanking',\n    'clapped',\n    'clapper',\n    'clapping',\n    'clarify',\n    'clarinet',\n    'clarity',\n    'clash',\n    'clasp',\n    'class',\n    'clatter',\n    'clause',\n    'clavicle',\n    'claw',\n    'clay',\n    'clean',\n    'clear',\n    'cleat',\n    'cleaver',\n    'cleft',\n    'clench',\n    'clergyman',\n    'clerical',\n    'clerk',\n    'clever',\n    'clicker',\n    'client',\n    'climate',\n    'climatic',\n    'cling',\n    'clinic',\n    'clinking',\n    'clip',\n    'clique',\n    'cloak',\n    'clobber',\n    'clock',\n    'clone',\n    'cloning',\n    'closable',\n    'closure',\n    'clothes',\n    'clothing',\n    'cloud',\n    'clover',\n    'clubbed',\n    'clubbing',\n    'clubhouse',\n    'clump',\n    'clumsily',\n    'clumsy',\n    'clunky',\n    'clustered',\n    'clutch',\n    'clutter',\n    'coach',\n    'coagulant',\n    'coastal',\n    'coaster',\n    'coasting',\n    'coastland',\n    'coastline',\n    'coat',\n    'coauthor',\n    'cobalt',\n    'cobbler',\n    'cobweb',\n    'cocoa',\n    'coconut',\n    'cod',\n    'coeditor',\n    'coerce',\n    'coexist',\n    'coffee',\n    'cofounder',\n    'cognition',\n    'cognitive',\n    'cogwheel',\n    'coherence',\n    'coherent',\n    'cohesive',\n    'coil',\n    'coke',\n    'cola',\n    'cold',\n    'coleslaw',\n    'coliseum',\n    'collage',\n    'collapse',\n    'collar',\n    'collected',\n    'collector',\n    'collide',\n    'collie',\n    'collision',\n    'colonial',\n    'colonist',\n    'colonize',\n    'colony',\n    'colossal',\n    'colt',\n    'coma',\n    'come',\n    'comfort',\n    'comfy',\n    'comic',\n    'coming',\n    'comma',\n    'commence',\n    'commend',\n    'comment',\n    'commerce',\n    'commode',\n    'commodity',\n    'commodore',\n    'common',\n    'commotion',\n    'commute',\n    'commuting',\n    'compacted',\n    'compacter',\n    'compactly',\n    'compactor',\n    'companion',\n    'company',\n    'compare',\n    'compel',\n    'compile',\n    'comply',\n    'component',\n    'composed',\n    'composer',\n    'composite',\n    'compost',\n    'composure',\n    'compound',\n    'compress',\n    'comprised',\n    'computer',\n    'computing',\n    'comrade',\n    'concave',\n    'conceal',\n    'conceded',\n    'concept',\n    'concerned',\n    'concert',\n    'conch',\n    'concierge',\n    'concise',\n    'conclude',\n    'concrete',\n    'concur',\n    'condense',\n    'condiment',\n    'condition',\n    'condone',\n    'conducive',\n    'conductor',\n    'conduit',\n    'cone',\n    'confess',\n    'confetti',\n    'confidant',\n    'confident',\n    'confider',\n    'confiding',\n    'configure',\n    'confined',\n    'confining',\n    'confirm',\n    'conflict',\n    'conform',\n    'confound',\n    'confront',\n    'confused',\n    'confusing',\n    'confusion',\n    'congenial',\n    'congested',\n    'congrats',\n    'congress',\n    'conical',\n    'conjoined',\n    'conjure',\n    'conjuror',\n    'connected',\n    'connector',\n    'consensus',\n    'consent',\n    'console',\n    'consoling',\n    'consonant',\n    'constable',\n    'constant',\n    'constrain',\n    'constrict',\n    'construct',\n    'consult',\n    'consumer',\n    'consuming',\n    'contact',\n    'container',\n    'contempt',\n    'contend',\n    'contented',\n    'contently',\n    'contents',\n    'contest',\n    'context',\n    'contort',\n    'contour',\n    'contrite',\n    'control',\n    'contusion',\n    'convene',\n    'convent',\n    'copartner',\n    'cope',\n    'copied',\n    'copier',\n    'copilot',\n    'coping',\n    'copious',\n    'copper',\n    'copy',\n    'coral',\n    'cork',\n    'cornball',\n    'cornbread',\n    'corncob',\n    'cornea',\n    'corned',\n    'corner',\n    'cornfield',\n    'cornflake',\n    'cornhusk',\n    'cornmeal',\n    'cornstalk',\n    'corny',\n    'coronary',\n    'coroner',\n    'corporal',\n    'corporate',\n    'corral',\n    'correct',\n    'corridor',\n    'corrode',\n    'corroding',\n    'corrosive',\n    'corsage',\n    'corset',\n    'cortex',\n    'cosigner',\n    'cosmetics',\n    'cosmic',\n    'cosmos',\n    'cosponsor',\n    'cost',\n    'cottage',\n    'cotton',\n    'couch',\n    'cough',\n    'could',\n    'countable',\n    'countdown',\n    'counting',\n    'countless',\n    'country',\n    'county',\n    'courier',\n    'covenant',\n    'cover',\n    'coveted',\n    'coveting',\n    'coyness',\n    'cozily',\n    'coziness',\n    'cozy',\n    'crabbing',\n    'crabgrass',\n    'crablike',\n    'crabmeat',\n    'cradle',\n    'cradling',\n    'crafter',\n    'craftily',\n    'craftsman',\n    'craftwork',\n    'crafty',\n    'cramp',\n    'cranberry',\n    'crane',\n    'cranial',\n    'cranium',\n    'crank',\n    'crate',\n    'crave',\n    'craving',\n    'crawfish',\n    'crawlers',\n    'crawling',\n    'crayfish',\n    'crayon',\n    'crazed',\n    'crazily',\n    'craziness',\n    'crazy',\n    'creamed',\n    'creamer',\n    'creamlike',\n    'crease',\n    'creasing',\n    'creatable',\n    'create',\n    'creation',\n    'creative',\n    'creature',\n    'credible',\n    'credibly',\n    'credit',\n    'creed',\n    'creme',\n    'creole',\n    'crepe',\n    'crept',\n    'crescent',\n    'crested',\n    'cresting',\n    'crestless',\n    'crevice',\n    'crewless',\n    'crewman',\n    'crewmate',\n    'crib',\n    'cricket',\n    'cried',\n    'crier',\n    'crimp',\n    'crimson',\n    'cringe',\n    'cringing',\n    'crinkle',\n    'crinkly',\n    'crisped',\n    'crisping',\n    'crisply',\n    'crispness',\n    'crispy',\n    'criteria',\n    'critter',\n    'croak',\n    'crock',\n    'crook',\n    'croon',\n    'crop',\n    'cross',\n    'crouch',\n    'crouton',\n    'crowbar',\n    'crowd',\n    'crown',\n    'crucial',\n    'crudely',\n    'crudeness',\n    'cruelly',\n    'cruelness',\n    'cruelty',\n    'crumb',\n    'crummiest',\n    'crummy',\n    'crumpet',\n    'crumpled',\n    'cruncher',\n    'crunching',\n    'crunchy',\n    'crusader',\n    'crushable',\n    'crushed',\n    'crusher',\n    'crushing',\n    'crust',\n    'crux',\n    'crying',\n    'cryptic',\n    'crystal',\n    'cubbyhole',\n    'cube',\n    'cubical',\n    'cubicle',\n    'cucumber',\n    'cuddle',\n    'cuddly',\n    'cufflink',\n    'culinary',\n    'culminate',\n    'culpable',\n    'culprit',\n    'cultivate',\n    'cultural',\n    'culture',\n    'cupbearer',\n    'cupcake',\n    'cupid',\n    'cupped',\n    'cupping',\n    'curable',\n    'curator',\n    'curdle',\n    'cure',\n    'curfew',\n    'curing',\n    'curled',\n    'curler',\n    'curliness',\n    'curling',\n    'curly',\n    'curry',\n    'curse',\n    'cursive',\n    'cursor',\n    'curtain',\n    'curtly',\n    'curtsy',\n    'curvature',\n    'curve',\n    'curvy',\n    'cushy',\n    'cusp',\n    'cussed',\n    'custard',\n    'custodian',\n    'custody',\n    'customary',\n    'customer',\n    'customize',\n    'customs',\n    'cut',\n    'cycle',\n    'cyclic',\n    'cycling',\n    'cyclist',\n    'cylinder',\n    'cymbal',\n    'cytoplasm',\n    'cytoplast',\n    'dab',\n    'dad',\n    'daffodil',\n    'dagger',\n    'daily',\n    'daintily',\n    'dainty',\n    'dairy',\n    'daisy',\n    'dallying',\n    'dance',\n    'dancing',\n    'dandelion',\n    'dander',\n    'dandruff',\n    'dandy',\n    'danger',\n    'dangle',\n    'dangling',\n    'daredevil',\n    'dares',\n    'daringly',\n    'darkened',\n    'darkening',\n    'darkish',\n    'darkness',\n    'darkroom',\n    'darling',\n    'darn',\n    'dart',\n    'darwinism',\n    'dash',\n    'dastardly',\n    'data',\n    'datebook',\n    'dating',\n    'daughter',\n    'daunting',\n    'dawdler',\n    'dawn',\n    'daybed',\n    'daybreak',\n    'daycare',\n    'daydream',\n    'daylight',\n    'daylong',\n    'dayroom',\n    'daytime',\n    'dazzler',\n    'dazzling',\n    'deacon',\n    'deafening',\n    'deafness',\n    'dealer',\n    'dealing',\n    'dealmaker',\n    'dealt',\n    'dean',\n    'debatable',\n    'debate',\n    'debating',\n    'debit',\n    'debrief',\n    'debtless',\n    'debtor',\n    'debug',\n    'debunk',\n    'decade',\n    'decaf',\n    'decal',\n    'decathlon',\n    'decay',\n    'deceased',\n    'deceit',\n    'deceiver',\n    'deceiving',\n    'december',\n    'decency',\n    'decent',\n    'deception',\n    'deceptive',\n    'decibel',\n    'decidable',\n    'decimal',\n    'decimeter',\n    'decipher',\n    'deck',\n    'declared',\n    'decline',\n    'decode',\n    'decompose',\n    'decorated',\n    'decorator',\n    'decoy',\n    'decrease',\n    'decree',\n    'dedicate',\n    'dedicator',\n    'deduce',\n    'deduct',\n    'deed',\n    'deem',\n    'deepen',\n    'deeply',\n    'deepness',\n    'deface',\n    'defacing',\n    'defame',\n    'default',\n    'defeat',\n    'defection',\n    'defective',\n    'defendant',\n    'defender',\n    'defense',\n    'defensive',\n    'deferral',\n    'deferred',\n    'defiance',\n    'defiant',\n    'defile',\n    'defiling',\n    'define',\n    'definite',\n    'deflate',\n    'deflation',\n    'deflator',\n    'deflected',\n    'deflector',\n    'defog',\n    'deforest',\n    'defraud',\n    'defrost',\n    'deftly',\n    'defuse',\n    'defy',\n    'degraded',\n    'degrading',\n    'degrease',\n    'degree',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delay',\n    'delegate',\n    'delegator',\n    'delete',\n    'deletion',\n    'delicacy',\n    'delicate',\n    'delicious',\n    'delighted',\n    'delirious',\n    'delirium',\n    'deliverer',\n    'delivery',\n    'delouse',\n    'delta',\n    'deluge',\n    'delusion',\n    'deluxe',\n    'demanding',\n    'demeaning',\n    'demeanor',\n    'demise',\n    'democracy',\n    'democrat',\n    'demote',\n    'demotion',\n    'demystify',\n    'denatured',\n    'deniable',\n    'denial',\n    'denim',\n    'denote',\n    'dense',\n    'density',\n    'dental',\n    'dentist',\n    'denture',\n    'deny',\n    'deodorant',\n    'deodorize',\n    'departed',\n    'departure',\n    'depict',\n    'deplete',\n    'depletion',\n    'deplored',\n    'deploy',\n    'deport',\n    'depose',\n    'depraved',\n    'depravity',\n    'deprecate',\n    'depress',\n    'deprive',\n    'depth',\n    'deputize',\n    'deputy',\n    'derail',\n    'deranged',\n    'derby',\n    'derived',\n    'desecrate',\n    'deserve',\n    'deserving',\n    'designate',\n    'designed',\n    'designer',\n    'designing',\n    'deskbound',\n    'desktop',\n    'deskwork',\n    'desolate',\n    'despair',\n    'despise',\n    'despite',\n    'destiny',\n    'destitute',\n    'destruct',\n    'detached',\n    'detail',\n    'detection',\n    'detective',\n    'detector',\n    'detention',\n    'detergent',\n    'detest',\n    'detonate',\n    'detonator',\n    'detoxify',\n    'detract',\n    'deuce',\n    'devalue',\n    'deviancy',\n    'deviant',\n    'deviate',\n    'deviation',\n    'deviator',\n    'device',\n    'devious',\n    'devotedly',\n    'devotee',\n    'devotion',\n    'devourer',\n    'devouring',\n    'devoutly',\n    'dexterity',\n    'dexterous',\n    'diabetes',\n    'diabetic',\n    'diabolic',\n    'diagnoses',\n    'diagnosis',\n    'diagram',\n    'dial',\n    'diameter',\n    'diaper',\n    'diaphragm',\n    'diary',\n    'dice',\n    'dicing',\n    'dictate',\n    'dictation',\n    'dictator',\n    'difficult',\n    'diffused',\n    'diffuser',\n    'diffusion',\n    'diffusive',\n    'dig',\n    'dilation',\n    'diligence',\n    'diligent',\n    'dill',\n    'dilute',\n    'dime',\n    'diminish',\n    'dimly',\n    'dimmed',\n    'dimmer',\n    'dimness',\n    'dimple',\n    'diner',\n    'dingbat',\n    'dinghy',\n    'dinginess',\n    'dingo',\n    'dingy',\n    'dining',\n    'dinner',\n    'diocese',\n    'dioxide',\n    'diploma',\n    'dipped',\n    'dipper',\n    'dipping',\n    'directed',\n    'direction',\n    'directive',\n    'directly',\n    'directory',\n    'direness',\n    'dirtiness',\n    'disabled',\n    'disagree',\n    'disallow',\n    'disarm',\n    'disarray',\n    'disaster',\n    'disband',\n    'disbelief',\n    'disburse',\n    'discard',\n    'discern',\n    'discharge',\n    'disclose',\n    'discolor',\n    'discount',\n    'discourse',\n    'discover',\n    'discuss',\n    'disdain',\n    'disengage',\n    'disfigure',\n    'disgrace',\n    'dish',\n    'disinfect',\n    'disjoin',\n    'disk',\n    'dislike',\n    'disliking',\n    'dislocate',\n    'dislodge',\n    'disloyal',\n    'dismantle',\n    'dismay',\n    'dismiss',\n    'dismount',\n    'disobey',\n    'disorder',\n    'disown',\n    'disparate',\n    'disparity',\n    'dispatch',\n    'dispense',\n    'dispersal',\n    'dispersed',\n    'disperser',\n    'displace',\n    'display',\n    'displease',\n    'disposal',\n    'dispose',\n    'disprove',\n    'dispute',\n    'disregard',\n    'disrupt',\n    'dissuade',\n    'distance',\n    'distant',\n    'distaste',\n    'distill',\n    'distinct',\n    'distort',\n    'distract',\n    'distress',\n    'district',\n    'distrust',\n    'ditch',\n    'ditto',\n    'ditzy',\n    'dividable',\n    'divided',\n    'dividend',\n    'dividers',\n    'dividing',\n    'divinely',\n    'diving',\n    'divinity',\n    'divisible',\n    'divisibly',\n    'division',\n    'divisive',\n    'divorcee',\n    'dizziness',\n    'dizzy',\n    'doable',\n    'docile',\n    'dock',\n    'doctrine',\n    'document',\n    'dodge',\n    'dodgy',\n    'doily',\n    'doing',\n    'dole',\n    'dollar',\n    'dollhouse',\n    'dollop',\n    'dolly',\n    'dolphin',\n    'domain',\n    'domelike',\n    'domestic',\n    'dominion',\n    'dominoes',\n    'donated',\n    'donation',\n    'donator',\n    'donor',\n    'donut',\n    'doodle',\n    'doorbell',\n    'doorframe',\n    'doorknob',\n    'doorman',\n    'doormat',\n    'doornail',\n    'doorpost',\n    'doorstep',\n    'doorstop',\n    'doorway',\n    'doozy',\n    'dork',\n    'dormitory',\n    'dorsal',\n    'dosage',\n    'dose',\n    'dotted',\n    'doubling',\n    'douche',\n    'dove',\n    'down',\n    'dowry',\n    'doze',\n    'drab',\n    'dragging',\n    'dragonfly',\n    'dragonish',\n    'dragster',\n    'drainable',\n    'drainage',\n    'drained',\n    'drainer',\n    'drainpipe',\n    'dramatic',\n    'dramatize',\n    'drank',\n    'drapery',\n    'drastic',\n    'draw',\n    'dreaded',\n    'dreadful',\n    'dreadlock',\n    'dreamboat',\n    'dreamily',\n    'dreamland',\n    'dreamless',\n    'dreamlike',\n    'dreamt',\n    'dreamy',\n    'drearily',\n    'dreary',\n    'drench',\n    'dress',\n    'drew',\n    'dribble',\n    'dried',\n    'drier',\n    'drift',\n    'driller',\n    'drilling',\n    'drinkable',\n    'drinking',\n    'dripping',\n    'drippy',\n    'drivable',\n    'driven',\n    'driver',\n    'driveway',\n    'driving',\n    'drizzle',\n    'drizzly',\n    'drone',\n    'drool',\n    'droop',\n    'drop-down',\n    'dropbox',\n    'dropkick',\n    'droplet',\n    'dropout',\n    'dropper',\n    'drove',\n    'drown',\n    'drowsily',\n    'drudge',\n    'drum',\n    'dry',\n    'dubbed',\n    'dubiously',\n    'duchess',\n    'duckbill',\n    'ducking',\n    'duckling',\n    'ducktail',\n    'ducky',\n    'duct',\n    'dude',\n    'duffel',\n    'dugout',\n    'duh',\n    'duke',\n    'duller',\n    'dullness',\n    'duly',\n    'dumping',\n    'dumpling',\n    'dumpster',\n    'duo',\n    'dupe',\n    'duplex',\n    'duplicate',\n    'duplicity',\n    'durable',\n    'durably',\n    'duration',\n    'duress',\n    'during',\n    'dusk',\n    'dust',\n    'dutiful',\n    'duty',\n    'duvet',\n    'dwarf',\n    'dweeb',\n    'dwelled',\n    'dweller',\n    'dwelling',\n    'dwindle',\n    'dwindling',\n    'dynamic',\n    'dynamite',\n    'dynasty',\n    'dyslexia',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earache',\n    'eardrum',\n    'earflap',\n    'earful',\n    'earlobe',\n    'early',\n    'earmark',\n    'earmuff',\n    'earphone',\n    'earpiece',\n    'earplugs',\n    'earring',\n    'earshot',\n    'earthen',\n    'earthlike',\n    'earthling',\n    'earthly',\n    'earthworm',\n    'earthy',\n    'earwig',\n    'easeful',\n    'easel',\n    'easiest',\n    'easily',\n    'easiness',\n    'easing',\n    'eastbound',\n    'eastcoast',\n    'easter',\n    'eastward',\n    'eatable',\n    'eaten',\n    'eatery',\n    'eating',\n    'eats',\n    'ebay',\n    'ebony',\n    'ebook',\n    'ecard',\n    'eccentric',\n    'echo',\n    'eclair',\n    'eclipse',\n    'ecologist',\n    'ecology',\n    'economic',\n    'economist',\n    'economy',\n    'ecosphere',\n    'ecosystem',\n    'edge',\n    'edginess',\n    'edging',\n    'edgy',\n    'edition',\n    'editor',\n    'educated',\n    'education',\n    'educator',\n    'eel',\n    'effective',\n    'effects',\n    'efficient',\n    'effort',\n    'eggbeater',\n    'egging',\n    'eggnog',\n    'eggplant',\n    'eggshell',\n    'egomaniac',\n    'egotism',\n    'egotistic',\n    'either',\n    'eject',\n    'elaborate',\n    'elastic',\n    'elated',\n    'elbow',\n    'eldercare',\n    'elderly',\n    'eldest',\n    'electable',\n    'election',\n    'elective',\n    'elephant',\n    'elevate',\n    'elevating',\n    'elevation',\n    'elevator',\n    'eleven',\n    'elf',\n    'eligible',\n    'eligibly',\n    'eliminate',\n    'elite',\n    'elitism',\n    'elixir',\n    'elk',\n    'ellipse',\n    'elliptic',\n    'elm',\n    'elongated',\n    'elope',\n    'eloquence',\n    'eloquent',\n    'elsewhere',\n    'elude',\n    'elusive',\n    'elves',\n    'email',\n    'embargo',\n    'embark',\n    'embassy',\n    'embattled',\n    'embellish',\n    'ember',\n    'embezzle',\n    'emblaze',\n    'emblem',\n    'embody',\n    'embolism',\n    'emboss',\n    'embroider',\n    'emcee',\n    'emerald',\n    'emergency',\n    'emission',\n    'emit',\n    'emote',\n    'emoticon',\n    'emotion',\n    'empathic',\n    'empathy',\n    'emperor',\n    'emphases',\n    'emphasis',\n    'emphasize',\n    'emphatic',\n    'empirical',\n    'employed',\n    'employee',\n    'employer',\n    'emporium',\n    'empower',\n    'emptier',\n    'emptiness',\n    'empty',\n    'emu',\n    'enable',\n    'enactment',\n    'enamel',\n    'enchanted',\n    'enchilada',\n    'encircle',\n    'enclose',\n    'enclosure',\n    'encode',\n    'encore',\n    'encounter',\n    'encourage',\n    'encroach',\n    'encrust',\n    'encrypt',\n    'endanger',\n    'endeared',\n    'endearing',\n    'ended',\n    'ending',\n    'endless',\n    'endnote',\n    'endocrine',\n    'endorphin',\n    'endorse',\n    'endowment',\n    'endpoint',\n    'endurable',\n    'endurance',\n    'enduring',\n    'energetic',\n    'energize',\n    'energy',\n    'enforced',\n    'enforcer',\n    'engaged',\n    'engaging',\n    'engine',\n    'engorge',\n    'engraved',\n    'engraver',\n    'engraving',\n    'engross',\n    'engulf',\n    'enhance',\n    'enigmatic',\n    'enjoyable',\n    'enjoyably',\n    'enjoyer',\n    'enjoying',\n    'enjoyment',\n    'enlarged',\n    'enlarging',\n    'enlighten',\n    'enlisted',\n    'enquirer',\n    'enrage',\n    'enrich',\n    'enroll',\n    'enslave',\n    'ensnare',\n    'ensure',\n    'entail',\n    'entangled',\n    'entering',\n    'entertain',\n    'enticing',\n    'entire',\n    'entitle',\n    'entity',\n    'entomb',\n    'entourage',\n    'entrap',\n    'entree',\n    'entrench',\n    'entrust',\n    'entryway',\n    'entwine',\n    'enunciate',\n    'envelope',\n    'enviable',\n    'enviably',\n    'envious',\n    'envision',\n    'envoy',\n    'envy',\n    'enzyme',\n    'epic',\n    'epidemic',\n    'epidermal',\n    'epidermis',\n    'epidural',\n    'epilepsy',\n    'epileptic',\n    'epilogue',\n    'epiphany',\n    'episode',\n    'equal',\n    'equate',\n    'equation',\n    'equator',\n    'equinox',\n    'equipment',\n    'equity',\n    'equivocal',\n    'eradicate',\n    'erasable',\n    'erased',\n    'eraser',\n    'erasure',\n    'ergonomic',\n    'errand',\n    'errant',\n    'erratic',\n    'error',\n    'erupt',\n    'escalate',\n    'escalator',\n    'escapable',\n    'escapade',\n    'escapist',\n    'escargot',\n    'eskimo',\n    'esophagus',\n    'espionage',\n    'espresso',\n    'esquire',\n    'essay',\n    'essence',\n    'essential',\n    'establish',\n    'estate',\n    'esteemed',\n    'estimate',\n    'estimator',\n    'estranged',\n    'estrogen',\n    'etching',\n    'eternal',\n    'eternity',\n    'ethanol',\n    'ether',\n    'ethically',\n    'ethics',\n    'euphemism',\n    'evacuate',\n    'evacuee',\n    'evade',\n    'evaluate',\n    'evaluator',\n    'evaporate',\n    'evasion',\n    'evasive',\n    'even',\n    'everglade',\n    'evergreen',\n    'everybody',\n    'everyday',\n    'everyone',\n    'evict',\n    'evidence',\n    'evident',\n    'evil',\n    'evoke',\n    'evolution',\n    'evolve',\n    'exact',\n    'exalted',\n    'example',\n    'excavate',\n    'excavator',\n    'exceeding',\n    'exception',\n    'excess',\n    'exchange',\n    'excitable',\n    'exciting',\n    'exclaim',\n    'exclude',\n    'excluding',\n    'exclusion',\n    'exclusive',\n    'excretion',\n    'excretory',\n    'excursion',\n    'excusable',\n    'excusably',\n    'excuse',\n    'exemplary',\n    'exemplify',\n    'exemption',\n    'exerciser',\n    'exert',\n    'exes',\n    'exfoliate',\n    'exhale',\n    'exhaust',\n    'exhume',\n    'exile',\n    'existing',\n    'exit',\n    'exodus',\n    'exonerate',\n    'exorcism',\n    'exorcist',\n    'expand',\n    'expanse',\n    'expansion',\n    'expansive',\n    'expectant',\n    'expedited',\n    'expediter',\n    'expel',\n    'expend',\n    'expenses',\n    'expensive',\n    'expert',\n    'expire',\n    'expiring',\n    'explain',\n    'expletive',\n    'explicit',\n    'explode',\n    'exploit',\n    'explore',\n    'exploring',\n    'exponent',\n    'exporter',\n    'exposable',\n    'expose',\n    'exposure',\n    'express',\n    'expulsion',\n    'exquisite',\n    'extended',\n    'extending',\n    'extent',\n    'extenuate',\n    'exterior',\n    'external',\n    'extinct',\n    'extortion',\n    'extradite',\n    'extras',\n    'extrovert',\n    'extrude',\n    'extruding',\n    'exuberant',\n    'fable',\n    'fabric',\n    'fabulous',\n    'facebook',\n    'facecloth',\n    'facedown',\n    'faceless',\n    'facelift',\n    'faceplate',\n    'faceted',\n    'facial',\n    'facility',\n    'facing',\n    'facsimile',\n    'faction',\n    'factoid',\n    'factor',\n    'factsheet',\n    'factual',\n    'faculty',\n    'fade',\n    'fading',\n    'failing',\n    'falcon',\n    'fall',\n    'false',\n    'falsify',\n    'fame',\n    'familiar',\n    'family',\n    'famine',\n    'famished',\n    'fanatic',\n    'fancied',\n    'fanciness',\n    'fancy',\n    'fanfare',\n    'fang',\n    'fanning',\n    'fantasize',\n    'fantastic',\n    'fantasy',\n    'fascism',\n    'fastball',\n    'faster',\n    'fasting',\n    'fastness',\n    'faucet',\n    'favorable',\n    'favorably',\n    'favored',\n    'favoring',\n    'favorite',\n    'fax',\n    'feast',\n    'federal',\n    'fedora',\n    'feeble',\n    'feed',\n    'feel',\n    'feisty',\n    'feline',\n    'felt-tip',\n    'feminine',\n    'feminism',\n    'feminist',\n    'feminize',\n    'femur',\n    'fence',\n    'fencing',\n    'fender',\n    'ferment',\n    'fernlike',\n    'ferocious',\n    'ferocity',\n    'ferret',\n    'ferris',\n    'ferry',\n    'fervor',\n    'fester',\n    'festival',\n    'festive',\n    'festivity',\n    'fetal',\n    'fetch',\n    'fever',\n    'fiber',\n    'fiction',\n    'fiddle',\n    'fiddling',\n    'fidelity',\n    'fidgeting',\n    'fidgety',\n    'fifteen',\n    'fifth',\n    'fiftieth',\n    'fifty',\n    'figment',\n    'figure',\n    'figurine',\n    'filing',\n    'filled',\n    'filler',\n    'filling',\n    'film',\n    'filter',\n    'filth',\n    'filtrate',\n    'finale',\n    'finalist',\n    'finalize',\n    'finally',\n    'finance',\n    'financial',\n    'finch',\n    'fineness',\n    'finer',\n    'finicky',\n    'finished',\n    'finisher',\n    'finishing',\n    'finite',\n    'finless',\n    'finlike',\n    'fiscally',\n    'fit',\n    'five',\n    'flaccid',\n    'flagman',\n    'flagpole',\n    'flagship',\n    'flagstick',\n    'flagstone',\n    'flail',\n    'flakily',\n    'flaky',\n    'flame',\n    'flammable',\n    'flanked',\n    'flanking',\n    'flannels',\n    'flap',\n    'flaring',\n    'flashback',\n    'flashbulb',\n    'flashcard',\n    'flashily',\n    'flashing',\n    'flashy',\n    'flask',\n    'flatbed',\n    'flatfoot',\n    'flatly',\n    'flatness',\n    'flatten',\n    'flattered',\n    'flatterer',\n    'flattery',\n    'flattop',\n    'flatware',\n    'flatworm',\n    'flavored',\n    'flavorful',\n    'flavoring',\n    'flaxseed',\n    'fled',\n    'fleshed',\n    'fleshy',\n    'flick',\n    'flier',\n    'flight',\n    'flinch',\n    'fling',\n    'flint',\n    'flip',\n    'flirt',\n    'float',\n    'flock',\n    'flogging',\n    'flop',\n    'floral',\n    'florist',\n    'floss',\n    'flounder',\n    'flyable',\n    'flyaway',\n    'flyer',\n    'flying',\n    'flyover',\n    'flypaper',\n    'foam',\n    'foe',\n    'fog',\n    'foil',\n    'folic',\n    'folk',\n    'follicle',\n    'follow',\n    'fondling',\n    'fondly',\n    'fondness',\n    'fondue',\n    'font',\n    'food',\n    'fool',\n    'footage',\n    'football',\n    'footbath',\n    'footboard',\n    'footer',\n    'footgear',\n    'foothill',\n    'foothold',\n    'footing',\n    'footless',\n    'footman',\n    'footnote',\n    'footpad',\n    'footpath',\n    'footprint',\n    'footrest',\n    'footsie',\n    'footsore',\n    'footwear',\n    'footwork',\n    'fossil',\n    'foster',\n    'founder',\n    'founding',\n    'fountain',\n    'fox',\n    'foyer',\n    'fraction',\n    'fracture',\n    'fragile',\n    'fragility',\n    'fragment',\n    'fragrance',\n    'fragrant',\n    'frail',\n    'frame',\n    'framing',\n    'frantic',\n    'fraternal',\n    'frayed',\n    'fraying',\n    'frays',\n    'freckled',\n    'freckles',\n    'freebase',\n    'freebee',\n    'freebie',\n    'freedom',\n    'freefall',\n    'freehand',\n    'freeing',\n    'freeload',\n    'freely',\n    'freemason',\n    'freeness',\n    'freestyle',\n    'freeware',\n    'freeway',\n    'freewill',\n    'freezable',\n    'freezing',\n    'freight',\n    'french',\n    'frenzied',\n    'frenzy',\n    'frequency',\n    'frequent',\n    'fresh',\n    'fretful',\n    'fretted',\n    'friction',\n    'friday',\n    'fridge',\n    'fried',\n    'friend',\n    'frighten',\n    'frightful',\n    'frigidity',\n    'frigidly',\n    'frill',\n    'fringe',\n    'frisbee',\n    'frisk',\n    'fritter',\n    'frivolous',\n    'frolic',\n    'from',\n    'front',\n    'frostbite',\n    'frosted',\n    'frostily',\n    'frosting',\n    'frostlike',\n    'frosty',\n    'froth',\n    'frown',\n    'frozen',\n    'fructose',\n    'frugality',\n    'frugally',\n    'fruit',\n    'frustrate',\n    'frying',\n    'gab',\n    'gaffe',\n    'gag',\n    'gainfully',\n    'gaining',\n    'gains',\n    'gala',\n    'gallantly',\n    'galleria',\n    'gallery',\n    'galley',\n    'gallon',\n    'gallows',\n    'gallstone',\n    'galore',\n    'galvanize',\n    'gambling',\n    'game',\n    'gaming',\n    'gamma',\n    'gander',\n    'gangly',\n    'gangrene',\n    'gangway',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'gargle',\n    'garland',\n    'garlic',\n    'garment',\n    'garnet',\n    'garnish',\n    'garter',\n    'gas',\n    'gatherer',\n    'gathering',\n    'gating',\n    'gauging',\n    'gauntlet',\n    'gauze',\n    'gave',\n    'gawk',\n    'gazing',\n    'gear',\n    'gecko',\n    'geek',\n    'geiger',\n    'gem',\n    'gender',\n    'generic',\n    'generous',\n    'genetics',\n    'genre',\n    'gentile',\n    'gentleman',\n    'gently',\n    'gents',\n    'geography',\n    'geologic',\n    'geologist',\n    'geology',\n    'geometric',\n    'geometry',\n    'geranium',\n    'gerbil',\n    'geriatric',\n    'germicide',\n    'germinate',\n    'germless',\n    'germproof',\n    'gestate',\n    'gestation',\n    'gesture',\n    'getaway',\n    'getting',\n    'getup',\n    'giant',\n    'gibberish',\n    'giblet',\n    'giddily',\n    'giddiness',\n    'giddy',\n    'gift',\n    'gigabyte',\n    'gigahertz',\n    'gigantic',\n    'giggle',\n    'giggling',\n    'giggly',\n    'gigolo',\n    'gilled',\n    'gills',\n    'gimmick',\n    'girdle',\n    'giveaway',\n    'given',\n    'giver',\n    'giving',\n    'gizmo',\n    'gizzard',\n    'glacial',\n    'glacier',\n    'glade',\n    'gladiator',\n    'gladly',\n    'glamorous',\n    'glamour',\n    'glance',\n    'glancing',\n    'glandular',\n    'glare',\n    'glaring',\n    'glass',\n    'glaucoma',\n    'glazing',\n    'gleaming',\n    'gleeful',\n    'glider',\n    'gliding',\n    'glimmer',\n    'glimpse',\n    'glisten',\n    'glitch',\n    'glitter',\n    'glitzy',\n    'gloater',\n    'gloating',\n    'gloomily',\n    'gloomy',\n    'glorified',\n    'glorifier',\n    'glorify',\n    'glorious',\n    'glory',\n    'gloss',\n    'glove',\n    'glowing',\n    'glowworm',\n    'glucose',\n    'glue',\n    'gluten',\n    'glutinous',\n    'glutton',\n    'gnarly',\n    'gnat',\n    'goal',\n    'goatskin',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'goldmine',\n    'goldsmith',\n    'golf',\n    'goliath',\n    'gonad',\n    'gondola',\n    'gone',\n    'gong',\n    'good',\n    'gooey',\n    'goofball',\n    'goofiness',\n    'goofy',\n    'google',\n    'goon',\n    'gopher',\n    'gore',\n    'gorged',\n    'gorgeous',\n    'gory',\n    'gosling',\n    'gossip',\n    'gothic',\n    'gotten',\n    'gout',\n    'gown',\n    'grab',\n    'graceful',\n    'graceless',\n    'gracious',\n    'gradation',\n    'graded',\n    'grader',\n    'gradient',\n    'grading',\n    'gradually',\n    'graduate',\n    'graffiti',\n    'grafted',\n    'grafting',\n    'grain',\n    'granddad',\n    'grandkid',\n    'grandly',\n    'grandma',\n    'grandpa',\n    'grandson',\n    'granite',\n    'granny',\n    'granola',\n    'grant',\n    'granular',\n    'grape',\n    'graph',\n    'grapple',\n    'grappling',\n    'grasp',\n    'grass',\n    'gratified',\n    'gratify',\n    'grating',\n    'gratitude',\n    'gratuity',\n    'gravel',\n    'graveness',\n    'graves',\n    'graveyard',\n    'gravitate',\n    'gravity',\n    'gravy',\n    'gray',\n    'grazing',\n    'greasily',\n    'greedily',\n    'greedless',\n    'greedy',\n    'green',\n    'greeter',\n    'greeting',\n    'grew',\n    'greyhound',\n    'grid',\n    'grief',\n    'grievance',\n    'grieving',\n    'grievous',\n    'grill',\n    'grimace',\n    'grimacing',\n    'grime',\n    'griminess',\n    'grimy',\n    'grinch',\n    'grinning',\n    'grip',\n    'gristle',\n    'grit',\n    'groggily',\n    'groggy',\n    'groin',\n    'groom',\n    'groove',\n    'grooving',\n    'groovy',\n    'grope',\n    'ground',\n    'grouped',\n    'grout',\n    'grove',\n    'grower',\n    'growing',\n    'growl',\n    'grub',\n    'grudge',\n    'grudging',\n    'grueling',\n    'gruffly',\n    'grumble',\n    'grumbling',\n    'grumbly',\n    'grumpily',\n    'grunge',\n    'grunt',\n    'guacamole',\n    'guidable',\n    'guidance',\n    'guide',\n    'guiding',\n    'guileless',\n    'guise',\n    'gulf',\n    'gullible',\n    'gully',\n    'gulp',\n    'gumball',\n    'gumdrop',\n    'gumminess',\n    'gumming',\n    'gummy',\n    'gurgle',\n    'gurgling',\n    'guru',\n    'gush',\n    'gusto',\n    'gusty',\n    'gutless',\n    'guts',\n    'gutter',\n    'guy',\n    'guzzler',\n    'gyration',\n    'habitable',\n    'habitant',\n    'habitat',\n    'habitual',\n    'hacked',\n    'hacker',\n    'hacking',\n    'hacksaw',\n    'had',\n    'haggler',\n    'haiku',\n    'half',\n    'halogen',\n    'halt',\n    'halved',\n    'halves',\n    'hamburger',\n    'hamlet',\n    'hammock',\n    'hamper',\n    'hamster',\n    'hamstring',\n    'handbag',\n    'handball',\n    'handbook',\n    'handbrake',\n    'handcart',\n    'handclap',\n    'handclasp',\n    'handcraft',\n    'handcuff',\n    'handed',\n    'handful',\n    'handgrip',\n    'handgun',\n    'handheld',\n    'handiness',\n    'handiwork',\n    'handlebar',\n    'handled',\n    'handler',\n    'handling',\n    'handmade',\n    'handoff',\n    'handpick',\n    'handprint',\n    'handrail',\n    'handsaw',\n    'handset',\n    'handsfree',\n    'handshake',\n    'handstand',\n    'handwash',\n    'handwork',\n    'handwoven',\n    'handwrite',\n    'handyman',\n    'hangnail',\n    'hangout',\n    'hangover',\n    'hangup',\n    'hankering',\n    'hankie',\n    'hanky',\n    'haphazard',\n    'happening',\n    'happier',\n    'happiest',\n    'happily',\n    'happiness',\n    'happy',\n    'harbor',\n    'hardcopy',\n    'hardcore',\n    'hardcover',\n    'harddisk',\n    'hardened',\n    'hardener',\n    'hardening',\n    'hardhat',\n    'hardhead',\n    'hardiness',\n    'hardly',\n    'hardness',\n    'hardship',\n    'hardware',\n    'hardwired',\n    'hardwood',\n    'hardy',\n    'harmful',\n    'harmless',\n    'harmonica',\n    'harmonics',\n    'harmonize',\n    'harmony',\n    'harness',\n    'harpist',\n    'harsh',\n    'harvest',\n    'hash',\n    'hassle',\n    'haste',\n    'hastily',\n    'hastiness',\n    'hasty',\n    'hatbox',\n    'hatchback',\n    'hatchery',\n    'hatchet',\n    'hatching',\n    'hatchling',\n    'hate',\n    'hatless',\n    'hatred',\n    'haunt',\n    'haven',\n    'hazard',\n    'hazelnut',\n    'hazily',\n    'haziness',\n    'hazing',\n    'hazy',\n    'headache',\n    'headband',\n    'headboard',\n    'headcount',\n    'headdress',\n    'headed',\n    'header',\n    'headfirst',\n    'headgear',\n    'heading',\n    'headlamp',\n    'headless',\n    'headlock',\n    'headphone',\n    'headpiece',\n    'headrest',\n    'headroom',\n    'headscarf',\n    'headset',\n    'headsman',\n    'headstand',\n    'headstone',\n    'headway',\n    'headwear',\n    'heap',\n    'heat',\n    'heave',\n    'heavily',\n    'heaviness',\n    'heaving',\n    'hedge',\n    'hedging',\n    'heftiness',\n    'hefty',\n    'helium',\n    'helmet',\n    'helper',\n    'helpful',\n    'helping',\n    'helpless',\n    'helpline',\n    'hemlock',\n    'hemstitch',\n    'hence',\n    'henchman',\n    'henna',\n    'herald',\n    'herbal',\n    'herbicide',\n    'herbs',\n    'heritage',\n    'hermit',\n    'heroics',\n    'heroism',\n    'herring',\n    'herself',\n    'hertz',\n    'hesitancy',\n    'hesitant',\n    'hesitate',\n    'hexagon',\n    'hexagram',\n    'hubcap',\n    'huddle',\n    'huddling',\n    'huff',\n    'hug',\n    'hula',\n    'hulk',\n    'hull',\n    'human',\n    'humble',\n    'humbling',\n    'humbly',\n    'humid',\n    'humiliate',\n    'humility',\n    'humming',\n    'hummus',\n    'humongous',\n    'humorist',\n    'humorless',\n    'humorous',\n    'humpback',\n    'humped',\n    'humvee',\n    'hunchback',\n    'hundredth',\n    'hunger',\n    'hungrily',\n    'hungry',\n    'hunk',\n    'hunter',\n    'hunting',\n    'huntress',\n    'huntsman',\n    'hurdle',\n    'hurled',\n    'hurler',\n    'hurling',\n    'hurray',\n    'hurricane',\n    'hurried',\n    'hurry',\n    'hurt',\n    'husband',\n    'hush',\n    'husked',\n    'huskiness',\n    'hut',\n    'hybrid',\n    'hydrant',\n    'hydrated',\n    'hydration',\n    'hydrogen',\n    'hydroxide',\n    'hyperlink',\n    'hypertext',\n    'hyphen',\n    'hypnoses',\n    'hypnosis',\n    'hypnotic',\n    'hypnotism',\n    'hypnotist',\n    'hypnotize',\n    'hypocrisy',\n    'hypocrite',\n    'ibuprofen',\n    'ice',\n    'iciness',\n    'icing',\n    'icky',\n    'icon',\n    'icy',\n    'idealism',\n    'idealist',\n    'idealize',\n    'ideally',\n    'idealness',\n    'identical',\n    'identify',\n    'identity',\n    'ideology',\n    'idiocy',\n    'idiom',\n    'idly',\n    'igloo',\n    'ignition',\n    'ignore',\n    'iguana',\n    'illicitly',\n    'illusion',\n    'illusive',\n    'image',\n    'imaginary',\n    'imagines',\n    'imaging',\n    'imbecile',\n    'imitate',\n    'imitation',\n    'immature',\n    'immerse',\n    'immersion',\n    'imminent',\n    'immobile',\n    'immodest',\n    'immorally',\n    'immortal',\n    'immovable',\n    'immovably',\n    'immunity',\n    'immunize',\n    'impaired',\n    'impale',\n    'impart',\n    'impatient',\n    'impeach',\n    'impeding',\n    'impending',\n    'imperfect',\n    'imperial',\n    'impish',\n    'implant',\n    'implement',\n    'implicate',\n    'implicit',\n    'implode',\n    'implosion',\n    'implosive',\n    'imply',\n    'impolite',\n    'important',\n    'importer',\n    'impose',\n    'imposing',\n    'impotence',\n    'impotency',\n    'impotent',\n    'impound',\n    'imprecise',\n    'imprint',\n    'imprison',\n    'impromptu',\n    'improper',\n    'improve',\n    'improving',\n    'improvise',\n    'imprudent',\n    'impulse',\n    'impulsive',\n    'impure',\n    'impurity',\n    'iodine',\n    'iodize',\n    'ion',\n    'ipad',\n    'iphone',\n    'ipod',\n    'irate',\n    'irk',\n    'iron',\n    'irregular',\n    'irrigate',\n    'irritable',\n    'irritably',\n    'irritant',\n    'irritate',\n    'islamic',\n    'islamist',\n    'isolated',\n    'isolating',\n    'isolation',\n    'isotope',\n    'issue',\n    'issuing',\n    'italicize',\n    'italics',\n    'item',\n    'itinerary',\n    'itunes',\n    'ivory',\n    'ivy',\n    'jab',\n    'jackal',\n    'jacket',\n    'jackknife',\n    'jackpot',\n    'jailbird',\n    'jailbreak',\n    'jailer',\n    'jailhouse',\n    'jalapeno',\n    'jam',\n    'janitor',\n    'january',\n    'jargon',\n    'jarring',\n    'jasmine',\n    'jaundice',\n    'jaunt',\n    'java',\n    'jawed',\n    'jawless',\n    'jawline',\n    'jaws',\n    'jaybird',\n    'jaywalker',\n    'jazz',\n    'jeep',\n    'jeeringly',\n    'jellied',\n    'jelly',\n    'jersey',\n    'jester',\n    'jet',\n    'jiffy',\n    'jigsaw',\n    'jimmy',\n    'jingle',\n    'jingling',\n    'jinx',\n    'jitters',\n    'jittery',\n    'job',\n    'jockey',\n    'jockstrap',\n    'jogger',\n    'jogging',\n    'john',\n    'joining',\n    'jokester',\n    'jokingly',\n    'jolliness',\n    'jolly',\n    'jolt',\n    'jot',\n    'jovial',\n    'joyfully',\n    'joylessly',\n    'joyous',\n    'joyride',\n    'joystick',\n    'jubilance',\n    'jubilant',\n    'judge',\n    'judgingly',\n    'judicial',\n    'judiciary',\n    'judo',\n    'juggle',\n    'juggling',\n    'jugular',\n    'juice',\n    'juiciness',\n    'juicy',\n    'jujitsu',\n    'jukebox',\n    'july',\n    'jumble',\n    'jumbo',\n    'jump',\n    'junction',\n    'juncture',\n    'june',\n    'junior',\n    'juniper',\n    'junkie',\n    'junkman',\n    'junkyard',\n    'jurist',\n    'juror',\n    'jury',\n    'justice',\n    'justifier',\n    'justify',\n    'justly',\n    'justness',\n    'juvenile',\n    'kabob',\n    'kangaroo',\n    'karaoke',\n    'karate',\n    'karma',\n    'kebab',\n    'keenly',\n    'keenness',\n    'keep',\n    'keg',\n    'kelp',\n    'kennel',\n    'kept',\n    'kerchief',\n    'kerosene',\n    'kettle',\n    'kick',\n    'kiln',\n    'kilobyte',\n    'kilogram',\n    'kilometer',\n    'kilowatt',\n    'kilt',\n    'kimono',\n    'kindle',\n    'kindling',\n    'kindly',\n    'kindness',\n    'kindred',\n    'kinetic',\n    'kinfolk',\n    'king',\n    'kinship',\n    'kinsman',\n    'kinswoman',\n    'kissable',\n    'kisser',\n    'kissing',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kitty',\n    'kiwi',\n    'kleenex',\n    'knapsack',\n    'knee',\n    'knelt',\n    'knickers',\n    'knoll',\n    'koala',\n    'kooky',\n    'kosher',\n    'krypton',\n    'kudos',\n    'kung',\n    'labored',\n    'laborer',\n    'laboring',\n    'laborious',\n    'labrador',\n    'ladder',\n    'ladies',\n    'ladle',\n    'ladybug',\n    'ladylike',\n    'lagged',\n    'lagging',\n    'lagoon',\n    'lair',\n    'lake',\n    'lance',\n    'landed',\n    'landfall',\n    'landfill',\n    'landing',\n    'landlady',\n    'landless',\n    'landline',\n    'landlord',\n    'landmark',\n    'landmass',\n    'landmine',\n    'landowner',\n    'landscape',\n    'landside',\n    'landslide',\n    'language',\n    'lankiness',\n    'lanky',\n    'lantern',\n    'lapdog',\n    'lapel',\n    'lapped',\n    'lapping',\n    'laptop',\n    'lard',\n    'large',\n    'lark',\n    'lash',\n    'lasso',\n    'last',\n    'latch',\n    'late',\n    'lather',\n    'latitude',\n    'latrine',\n    'latter',\n    'latticed',\n    'launch',\n    'launder',\n    'laundry',\n    'laurel',\n    'lavender',\n    'lavish',\n    'laxative',\n    'lazily',\n    'laziness',\n    'lazy',\n    'lecturer',\n    'left',\n    'legacy',\n    'legal',\n    'legend',\n    'legged',\n    'leggings',\n    'legible',\n    'legibly',\n    'legislate',\n    'lego',\n    'legroom',\n    'legume',\n    'legwarmer',\n    'legwork',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'lent',\n    'leotard',\n    'lesser',\n    'letdown',\n    'lethargic',\n    'lethargy',\n    'letter',\n    'lettuce',\n    'level',\n    'leverage',\n    'levers',\n    'levitate',\n    'levitator',\n    'liability',\n    'liable',\n    'liberty',\n    'librarian',\n    'library',\n    'licking',\n    'licorice',\n    'lid',\n    'life',\n    'lifter',\n    'lifting',\n    'liftoff',\n    'ligament',\n    'likely',\n    'likeness',\n    'likewise',\n    'liking',\n    'lilac',\n    'lilly',\n    'lily',\n    'limb',\n    'limeade',\n    'limelight',\n    'limes',\n    'limit',\n    'limping',\n    'limpness',\n    'line',\n    'lingo',\n    'linguini',\n    'linguist',\n    'lining',\n    'linked',\n    'linoleum',\n    'linseed',\n    'lint',\n    'lion',\n    'lip',\n    'liquefy',\n    'liqueur',\n    'liquid',\n    'lisp',\n    'list',\n    'litigate',\n    'litigator',\n    'litmus',\n    'litter',\n    'little',\n    'livable',\n    'lived',\n    'lively',\n    'liver',\n    'livestock',\n    'lividly',\n    'living',\n    'lizard',\n    'lubricant',\n    'lubricate',\n    'lucid',\n    'luckily',\n    'luckiness',\n    'luckless',\n    'lucrative',\n    'ludicrous',\n    'lugged',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'luminance',\n    'luminous',\n    'lumpiness',\n    'lumping',\n    'lumpish',\n    'lunacy',\n    'lunar',\n    'lunchbox',\n    'luncheon',\n    'lunchroom',\n    'lunchtime',\n    'lung',\n    'lurch',\n    'lure',\n    'luridness',\n    'lurk',\n    'lushly',\n    'lushness',\n    'luster',\n    'lustfully',\n    'lustily',\n    'lustiness',\n    'lustrous',\n    'lusty',\n    'luxurious',\n    'luxury',\n    'lying',\n    'lyrically',\n    'lyricism',\n    'lyricist',\n    'lyrics',\n    'macarena',\n    'macaroni',\n    'macaw',\n    'mace',\n    'machine',\n    'machinist',\n    'magazine',\n    'magenta',\n    'maggot',\n    'magical',\n    'magician',\n    'magma',\n    'magnesium',\n    'magnetic',\n    'magnetism',\n    'magnetize',\n    'magnifier',\n    'magnify',\n    'magnitude',\n    'magnolia',\n    'mahogany',\n    'maimed',\n    'majestic',\n    'majesty',\n    'majorette',\n    'majority',\n    'makeover',\n    'maker',\n    'makeshift',\n    'making',\n    'malformed',\n    'malt',\n    'mama',\n    'mammal',\n    'mammary',\n    'mammogram',\n    'manager',\n    'managing',\n    'manatee',\n    'mandarin',\n    'mandate',\n    'mandatory',\n    'mandolin',\n    'manger',\n    'mangle',\n    'mango',\n    'mangy',\n    'manhandle',\n    'manhole',\n    'manhood',\n    'manhunt',\n    'manicotti',\n    'manicure',\n    'manifesto',\n    'manila',\n    'mankind',\n    'manlike',\n    'manliness',\n    'manly',\n    'manmade',\n    'manned',\n    'mannish',\n    'manor',\n    'manpower',\n    'mantis',\n    'mantra',\n    'manual',\n    'many',\n    'map',\n    'marathon',\n    'marauding',\n    'marbled',\n    'marbles',\n    'marbling',\n    'march',\n    'mardi',\n    'margarine',\n    'margarita',\n    'margin',\n    'marigold',\n    'marina',\n    'marine',\n    'marital',\n    'maritime',\n    'marlin',\n    'marmalade',\n    'maroon',\n    'married',\n    'marrow',\n    'marry',\n    'marshland',\n    'marshy',\n    'marsupial',\n    'marvelous',\n    'marxism',\n    'mascot',\n    'masculine',\n    'mashed',\n    'mashing',\n    'massager',\n    'masses',\n    'massive',\n    'mastiff',\n    'matador',\n    'matchbook',\n    'matchbox',\n    'matcher',\n    'matching',\n    'matchless',\n    'material',\n    'maternal',\n    'maternity',\n    'math',\n    'mating',\n    'matriarch',\n    'matrimony',\n    'matrix',\n    'matron',\n    'matted',\n    'matter',\n    'maturely',\n    'maturing',\n    'maturity',\n    'mauve',\n    'maverick',\n    'maximize',\n    'maximum',\n    'maybe',\n    'mayday',\n    'mayflower',\n    'moaner',\n    'moaning',\n    'mobile',\n    'mobility',\n    'mobilize',\n    'mobster',\n    'mocha',\n    'mocker',\n    'mockup',\n    'modified',\n    'modify',\n    'modular',\n    'modulator',\n    'module',\n    'moisten',\n    'moistness',\n    'moisture',\n    'molar',\n    'molasses',\n    'mold',\n    'molecular',\n    'molecule',\n    'molehill',\n    'mollusk',\n    'mom',\n    'monastery',\n    'monday',\n    'monetary',\n    'monetize',\n    'moneybags',\n    'moneyless',\n    'moneywise',\n    'mongoose',\n    'mongrel',\n    'monitor',\n    'monkhood',\n    'monogamy',\n    'monogram',\n    'monologue',\n    'monopoly',\n    'monorail',\n    'monotone',\n    'monotype',\n    'monoxide',\n    'monsieur',\n    'monsoon',\n    'monstrous',\n    'monthly',\n    'monument',\n    'moocher',\n    'moodiness',\n    'moody',\n    'mooing',\n    'moonbeam',\n    'mooned',\n    'moonlight',\n    'moonlike',\n    'moonlit',\n    'moonrise',\n    'moonscape',\n    'moonshine',\n    'moonstone',\n    'moonwalk',\n    'mop',\n    'morale',\n    'morality',\n    'morally',\n    'morbidity',\n    'morbidly',\n    'morphine',\n    'morphing',\n    'morse',\n    'mortality',\n    'mortally',\n    'mortician',\n    'mortified',\n    'mortify',\n    'mortuary',\n    'mosaic',\n    'mossy',\n    'most',\n    'mothball',\n    'mothproof',\n    'motion',\n    'motivate',\n    'motivator',\n    'motive',\n    'motocross',\n    'motor',\n    'motto',\n    'mountable',\n    'mountain',\n    'mounted',\n    'mounting',\n    'mourner',\n    'mournful',\n    'mouse',\n    'mousiness',\n    'moustache',\n    'mousy',\n    'mouth',\n    'movable',\n    'move',\n    'movie',\n    'moving',\n    'mower',\n    'mowing',\n    'much',\n    'muck',\n    'mud',\n    'mug',\n    'mulberry',\n    'mulch',\n    'mule',\n    'mulled',\n    'mullets',\n    'multiple',\n    'multiply',\n    'multitask',\n    'multitude',\n    'mumble',\n    'mumbling',\n    'mumbo',\n    'mummified',\n    'mummify',\n    'mummy',\n    'mumps',\n    'munchkin',\n    'mundane',\n    'municipal',\n    'muppet',\n    'mural',\n    'murkiness',\n    'murky',\n    'murmuring',\n    'muscular',\n    'museum',\n    'mushily',\n    'mushiness',\n    'mushroom',\n    'mushy',\n    'music',\n    'musket',\n    'muskiness',\n    'musky',\n    'mustang',\n    'mustard',\n    'muster',\n    'mustiness',\n    'musty',\n    'mutable',\n    'mutate',\n    'mutation',\n    'mute',\n    'mutilated',\n    'mutilator',\n    'mutiny',\n    'mutt',\n    'mutual',\n    'muzzle',\n    'myself',\n    'myspace',\n    'mystified',\n    'mystify',\n    'myth',\n    'nacho',\n    'nag',\n    'nail',\n    'name',\n    'naming',\n    'nanny',\n    'nanometer',\n    'nape',\n    'napkin',\n    'napped',\n    'napping',\n    'nappy',\n    'narrow',\n    'nastily',\n    'nastiness',\n    'national',\n    'native',\n    'nativity',\n    'natural',\n    'nature',\n    'naturist',\n    'nautical',\n    'navigate',\n    'navigator',\n    'navy',\n    'nearby',\n    'nearest',\n    'nearly',\n    'nearness',\n    'neatly',\n    'neatness',\n    'nebula',\n    'nebulizer',\n    'nectar',\n    'negate',\n    'negation',\n    'negative',\n    'neglector',\n    'negligee',\n    'negligent',\n    'negotiate',\n    'nemeses',\n    'nemesis',\n    'neon',\n    'nephew',\n    'nerd',\n    'nervous',\n    'nervy',\n    'nest',\n    'net',\n    'neurology',\n    'neuron',\n    'neurosis',\n    'neurotic',\n    'neuter',\n    'neutron',\n    'never',\n    'next',\n    'nibble',\n    'nickname',\n    'nicotine',\n    'niece',\n    'nifty',\n    'nimble',\n    'nimbly',\n    'nineteen',\n    'ninetieth',\n    'ninja',\n    'nintendo',\n    'ninth',\n    'nuclear',\n    'nuclei',\n    'nucleus',\n    'nugget',\n    'nullify',\n    'number',\n    'numbing',\n    'numbly',\n    'numbness',\n    'numeral',\n    'numerate',\n    'numerator',\n    'numeric',\n    'numerous',\n    'nuptials',\n    'nursery',\n    'nursing',\n    'nurture',\n    'nutcase',\n    'nutlike',\n    'nutmeg',\n    'nutrient',\n    'nutshell',\n    'nuttiness',\n    'nutty',\n    'nuzzle',\n    'nylon',\n    'oaf',\n    'oak',\n    'oasis',\n    'oat',\n    'obedience',\n    'obedient',\n    'obituary',\n    'object',\n    'obligate',\n    'obliged',\n    'oblivion',\n    'oblivious',\n    'oblong',\n    'obnoxious',\n    'oboe',\n    'obscure',\n    'obscurity',\n    'observant',\n    'observer',\n    'observing',\n    'obsessed',\n    'obsession',\n    'obsessive',\n    'obsolete',\n    'obstacle',\n    'obstinate',\n    'obstruct',\n    'obtain',\n    'obtrusive',\n    'obtuse',\n    'obvious',\n    'occultist',\n    'occupancy',\n    'occupant',\n    'occupier',\n    'occupy',\n    'ocean',\n    'ocelot',\n    'octagon',\n    'octane',\n    'october',\n    'octopus',\n    'ogle',\n    'oil',\n    'oink',\n    'ointment',\n    'okay',\n    'old',\n    'olive',\n    'olympics',\n    'omega',\n    'omen',\n    'ominous',\n    'omission',\n    'omit',\n    'omnivore',\n    'onboard',\n    'oncoming',\n    'ongoing',\n    'onion',\n    'online',\n    'onlooker',\n    'only',\n    'onscreen',\n    'onset',\n    'onshore',\n    'onslaught',\n    'onstage',\n    'onto',\n    'onward',\n    'onyx',\n    'oops',\n    'ooze',\n    'oozy',\n    'opacity',\n    'opal',\n    'open',\n    'operable',\n    'operate',\n    'operating',\n    'operation',\n    'operative',\n    'operator',\n    'opium',\n    'opossum',\n    'opponent',\n    'oppose',\n    'opposing',\n    'opposite',\n    'oppressed',\n    'oppressor',\n    'opt',\n    'opulently',\n    'osmosis',\n    'other',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'outage',\n    'outback',\n    'outbid',\n    'outboard',\n    'outbound',\n    'outbreak',\n    'outburst',\n    'outcast',\n    'outclass',\n    'outcome',\n    'outdated',\n    'outdoors',\n    'outer',\n    'outfield',\n    'outfit',\n    'outflank',\n    'outgoing',\n    'outgrow',\n    'outhouse',\n    'outing',\n    'outlast',\n    'outlet',\n    'outline',\n    'outlook',\n    'outlying',\n    'outmatch',\n    'outmost',\n    'outnumber',\n    'outplayed',\n    'outpost',\n    'outpour',\n    'output',\n    'outrage',\n    'outrank',\n    'outreach',\n    'outright',\n    'outscore',\n    'outsell',\n    'outshine',\n    'outshoot',\n    'outsider',\n    'outskirts',\n    'outsmart',\n    'outsource',\n    'outspoken',\n    'outtakes',\n    'outthink',\n    'outward',\n    'outweigh',\n    'outwit',\n    'oval',\n    'ovary',\n    'oven',\n    'overact',\n    'overall',\n    'overarch',\n    'overbid',\n    'overbill',\n    'overbite',\n    'overblown',\n    'overboard',\n    'overbook',\n    'overbuilt',\n    'overcast',\n    'overcoat',\n    'overcome',\n    'overcook',\n    'overcrowd',\n    'overdraft',\n    'overdrawn',\n    'overdress',\n    'overdrive',\n    'overdue',\n    'overeager',\n    'overeater',\n    'overexert',\n    'overfed',\n    'overfeed',\n    'overfill',\n    'overflow',\n    'overfull',\n    'overgrown',\n    'overhand',\n    'overhang',\n    'overhaul',\n    'overhead',\n    'overhear',\n    'overheat',\n    'overhung',\n    'overjoyed',\n    'overkill',\n    'overlabor',\n    'overlaid',\n    'overlap',\n    'overlay',\n    'overload',\n    'overlook',\n    'overlord',\n    'overlying',\n    'overnight',\n    'overpass',\n    'overpay',\n    'overplant',\n    'overplay',\n    'overpower',\n    'overprice',\n    'overrate',\n    'overreach',\n    'overreact',\n    'override',\n    'overripe',\n    'overrule',\n    'overrun',\n    'overshoot',\n    'overshot',\n    'oversight',\n    'oversized',\n    'oversleep',\n    'oversold',\n    'overspend',\n    'overstate',\n    'overstay',\n    'overstep',\n    'overstock',\n    'overstuff',\n    'oversweet',\n    'overtake',\n    'overthrow',\n    'overtime',\n    'overtly',\n    'overtone',\n    'overture',\n    'overturn',\n    'overuse',\n    'overvalue',\n    'overview',\n    'overwrite',\n    'owl',\n    'oxford',\n    'oxidant',\n    'oxidation',\n    'oxidize',\n    'oxidizing',\n    'oxygen',\n    'oxymoron',\n    'oyster',\n    'ozone',\n    'paced',\n    'pacemaker',\n    'pacific',\n    'pacifier',\n    'pacifism',\n    'pacifist',\n    'pacify',\n    'padded',\n    'padding',\n    'paddle',\n    'paddling',\n    'padlock',\n    'pagan',\n    'pager',\n    'paging',\n    'pajamas',\n    'palace',\n    'palatable',\n    'palm',\n    'palpable',\n    'palpitate',\n    'paltry',\n    'pampered',\n    'pamperer',\n    'pampers',\n    'pamphlet',\n    'panama',\n    'pancake',\n    'pancreas',\n    'panda',\n    'pandemic',\n    'pang',\n    'panhandle',\n    'panic',\n    'panning',\n    'panorama',\n    'panoramic',\n    'panther',\n    'pantomime',\n    'pantry',\n    'pants',\n    'pantyhose',\n    'paparazzi',\n    'papaya',\n    'paper',\n    'paprika',\n    'papyrus',\n    'parabola',\n    'parachute',\n    'parade',\n    'paradox',\n    'paragraph',\n    'parakeet',\n    'paralegal',\n    'paralyses',\n    'paralysis',\n    'paralyze',\n    'paramedic',\n    'parameter',\n    'paramount',\n    'parasail',\n    'parasite',\n    'parasitic',\n    'parcel',\n    'parched',\n    'parchment',\n    'pardon',\n    'parish',\n    'parka',\n    'parking',\n    'parkway',\n    'parlor',\n    'parmesan',\n    'parole',\n    'parrot',\n    'parsley',\n    'parsnip',\n    'partake',\n    'parted',\n    'parting',\n    'partition',\n    'partly',\n    'partner',\n    'partridge',\n    'party',\n    'passable',\n    'passably',\n    'passage',\n    'passcode',\n    'passenger',\n    'passerby',\n    'passing',\n    'passion',\n    'passive',\n    'passivism',\n    'passover',\n    'passport',\n    'password',\n    'pasta',\n    'pasted',\n    'pastel',\n    'pastime',\n    'pastor',\n    'pastrami',\n    'pasture',\n    'pasty',\n    'patchwork',\n    'patchy',\n    'paternal',\n    'paternity',\n    'path',\n    'patience',\n    'patient',\n    'patio',\n    'patriarch',\n    'patriot',\n    'patrol',\n    'patronage',\n    'patronize',\n    'pauper',\n    'pavement',\n    'paver',\n    'pavestone',\n    'pavilion',\n    'paving',\n    'pawing',\n    'payable',\n    'payback',\n    'paycheck',\n    'payday',\n    'payee',\n    'payer',\n    'paying',\n    'payment',\n    'payphone',\n    'payroll',\n    'pebble',\n    'pebbly',\n    'pecan',\n    'pectin',\n    'peculiar',\n    'peddling',\n    'pediatric',\n    'pedicure',\n    'pedigree',\n    'pedometer',\n    'pegboard',\n    'pelican',\n    'pellet',\n    'pelt',\n    'pelvis',\n    'penalize',\n    'penalty',\n    'pencil',\n    'pendant',\n    'pending',\n    'penholder',\n    'penknife',\n    'pennant',\n    'penniless',\n    'penny',\n    'penpal',\n    'pension',\n    'pentagon',\n    'pentagram',\n    'pep',\n    'perceive',\n    'percent',\n    'perch',\n    'percolate',\n    'perennial',\n    'perfected',\n    'perfectly',\n    'perfume',\n    'periscope',\n    'perish',\n    'perjurer',\n    'perjury',\n    'perkiness',\n    'perky',\n    'perm',\n    'peroxide',\n    'perpetual',\n    'perplexed',\n    'persecute',\n    'persevere',\n    'persuaded',\n    'persuader',\n    'pesky',\n    'peso',\n    'pessimism',\n    'pessimist',\n    'pester',\n    'pesticide',\n    'petal',\n    'petite',\n    'petition',\n    'petri',\n    'petroleum',\n    'petted',\n    'petticoat',\n    'pettiness',\n    'petty',\n    'petunia',\n    'phantom',\n    'phobia',\n    'phoenix',\n    'phonebook',\n    'phoney',\n    'phonics',\n    'phoniness',\n    'phony',\n    'phosphate',\n    'photo',\n    'phrase',\n    'phrasing',\n    'placard',\n    'placate',\n    'placidly',\n    'plank',\n    'planner',\n    'plant',\n    'plasma',\n    'plaster',\n    'plastic',\n    'plated',\n    'platform',\n    'plating',\n    'platinum',\n    'platonic',\n    'platter',\n    'platypus',\n    'plausible',\n    'plausibly',\n    'playable',\n    'playback',\n    'player',\n    'playful',\n    'playgroup',\n    'playhouse',\n    'playing',\n    'playlist',\n    'playmaker',\n    'playmate',\n    'playoff',\n    'playpen',\n    'playroom',\n    'playset',\n    'plaything',\n    'playtime',\n    'plaza',\n    'pleading',\n    'pleat',\n    'pledge',\n    'plentiful',\n    'plenty',\n    'plethora',\n    'plexiglas',\n    'pliable',\n    'plod',\n    'plop',\n    'plot',\n    'plow',\n    'ploy',\n    'pluck',\n    'plug',\n    'plunder',\n    'plunging',\n    'plural',\n    'plus',\n    'plutonium',\n    'plywood',\n    'poach',\n    'pod',\n    'poem',\n    'poet',\n    'pogo',\n    'pointed',\n    'pointer',\n    'pointing',\n    'pointless',\n    'pointy',\n    'poise',\n    'poison',\n    'poker',\n    'poking',\n    'polar',\n    'police',\n    'policy',\n    'polio',\n    'polish',\n    'politely',\n    'polka',\n    'polo',\n    'polyester',\n    'polygon',\n    'polygraph',\n    'polymer',\n    'poncho',\n    'pond',\n    'pony',\n    'popcorn',\n    'pope',\n    'poplar',\n    'popper',\n    'poppy',\n    'popsicle',\n    'populace',\n    'popular',\n    'populate',\n    'porcupine',\n    'pork',\n    'porous',\n    'porridge',\n    'portable',\n    'portal',\n    'portfolio',\n    'porthole',\n    'portion',\n    'portly',\n    'portside',\n    'poser',\n    'posh',\n    'posing',\n    'possible',\n    'possibly',\n    'possum',\n    'postage',\n    'postal',\n    'postbox',\n    'postcard',\n    'posted',\n    'poster',\n    'posting',\n    'postnasal',\n    'posture',\n    'postwar',\n    'pouch',\n    'pounce',\n    'pouncing',\n    'pound',\n    'pouring',\n    'pout',\n    'powdered',\n    'powdering',\n    'powdery',\n    'power',\n    'powwow',\n    'pox',\n    'praising',\n    'prance',\n    'prancing',\n    'pranker',\n    'prankish',\n    'prankster',\n    'prayer',\n    'praying',\n    'preacher',\n    'preaching',\n    'preachy',\n    'preamble',\n    'precinct',\n    'precise',\n    'precision',\n    'precook',\n    'precut',\n    'predator',\n    'predefine',\n    'predict',\n    'preface',\n    'prefix',\n    'preflight',\n    'preformed',\n    'pregame',\n    'pregnancy',\n    'pregnant',\n    'preheated',\n    'prelaunch',\n    'prelaw',\n    'prelude',\n    'premiere',\n    'premises',\n    'premium',\n    'prenatal',\n    'preoccupy',\n    'preorder',\n    'prepaid',\n    'prepay',\n    'preplan',\n    'preppy',\n    'preschool',\n    'prescribe',\n    'preseason',\n    'preset',\n    'preshow',\n    'president',\n    'presoak',\n    'press',\n    'presume',\n    'presuming',\n    'preteen',\n    'pretended',\n    'pretender',\n    'pretense',\n    'pretext',\n    'pretty',\n    'pretzel',\n    'prevail',\n    'prevalent',\n    'prevent',\n    'preview',\n    'previous',\n    'prewar',\n    'prewashed',\n    'prideful',\n    'pried',\n    'primal',\n    'primarily',\n    'primary',\n    'primate',\n    'primer',\n    'primp',\n    'princess',\n    'print',\n    'prior',\n    'prism',\n    'prison',\n    'prissy',\n    'pristine',\n    'privacy',\n    'private',\n    'privatize',\n    'prize',\n    'proactive',\n    'probable',\n    'probably',\n    'probation',\n    'probe',\n    'probing',\n    'probiotic',\n    'problem',\n    'procedure',\n    'process',\n    'proclaim',\n    'procreate',\n    'procurer',\n    'prodigal',\n    'prodigy',\n    'produce',\n    'product',\n    'profane',\n    'profanity',\n    'professed',\n    'professor',\n    'profile',\n    'profound',\n    'profusely',\n    'progeny',\n    'prognosis',\n    'program',\n    'progress',\n    'projector',\n    'prologue',\n    'prolonged',\n    'promenade',\n    'prominent',\n    'promoter',\n    'promotion',\n    'prompter',\n    'promptly',\n    'prone',\n    'prong',\n    'pronounce',\n    'pronto',\n    'proofing',\n    'proofread',\n    'proofs',\n    'propeller',\n    'properly',\n    'property',\n    'proponent',\n    'proposal',\n    'propose',\n    'props',\n    'prorate',\n    'protector',\n    'protegee',\n    'proton',\n    'prototype',\n    'protozoan',\n    'protract',\n    'protrude',\n    'proud',\n    'provable',\n    'proved',\n    'proven',\n    'provided',\n    'provider',\n    'providing',\n    'province',\n    'proving',\n    'provoke',\n    'provoking',\n    'provolone',\n    'prowess',\n    'prowler',\n    'prowling',\n    'proximity',\n    'proxy',\n    'prozac',\n    'prude',\n    'prudishly',\n    'prune',\n    'pruning',\n    'pry',\n    'psychic',\n    'public',\n    'publisher',\n    'pucker',\n    'pueblo',\n    'pug',\n    'pull',\n    'pulmonary',\n    'pulp',\n    'pulsate',\n    'pulse',\n    'pulverize',\n    'puma',\n    'pumice',\n    'pummel',\n    'punch',\n    'punctual',\n    'punctuate',\n    'punctured',\n    'pungent',\n    'punisher',\n    'punk',\n    'pupil',\n    'puppet',\n    'puppy',\n    'purchase',\n    'pureblood',\n    'purebred',\n    'purely',\n    'pureness',\n    'purgatory',\n    'purge',\n    'purging',\n    'purifier',\n    'purify',\n    'purist',\n    'puritan',\n    'purity',\n    'purple',\n    'purplish',\n    'purposely',\n    'purr',\n    'purse',\n    'pursuable',\n    'pursuant',\n    'pursuit',\n    'purveyor',\n    'pushcart',\n    'pushchair',\n    'pusher',\n    'pushiness',\n    'pushing',\n    'pushover',\n    'pushpin',\n    'pushup',\n    'pushy',\n    'putdown',\n    'putt',\n    'puzzle',\n    'puzzling',\n    'pyramid',\n    'pyromania',\n    'python',\n    'quack',\n    'quadrant',\n    'quail',\n    'quaintly',\n    'quake',\n    'quaking',\n    'qualified',\n    'qualifier',\n    'qualify',\n    'quality',\n    'qualm',\n    'quantum',\n    'quarrel',\n    'quarry',\n    'quartered',\n    'quarterly',\n    'quarters',\n    'quartet',\n    'quench',\n    'query',\n    'quicken',\n    'quickly',\n    'quickness',\n    'quicksand',\n    'quickstep',\n    'quiet',\n    'quill',\n    'quilt',\n    'quintet',\n    'quintuple',\n    'quirk',\n    'quit',\n    'quiver',\n    'quizzical',\n    'quotable',\n    'quotation',\n    'quote',\n    'rabid',\n    'race',\n    'racing',\n    'racism',\n    'rack',\n    'racoon',\n    'radar',\n    'radial',\n    'radiance',\n    'radiantly',\n    'radiated',\n    'radiation',\n    'radiator',\n    'radio',\n    'radish',\n    'raffle',\n    'raft',\n    'rage',\n    'ragged',\n    'raging',\n    'ragweed',\n    'raider',\n    'railcar',\n    'railing',\n    'railroad',\n    'railway',\n    'raisin',\n    'rake',\n    'raking',\n    'rally',\n    'ramble',\n    'rambling',\n    'ramp',\n    'ramrod',\n    'ranch',\n    'rancidity',\n    'random',\n    'ranged',\n    'ranger',\n    'ranging',\n    'ranked',\n    'ranking',\n    'ransack',\n    'ranting',\n    'rants',\n    'rare',\n    'rarity',\n    'rascal',\n    'rash',\n    'rasping',\n    'ravage',\n    'raven',\n    'ravine',\n    'raving',\n    'ravioli',\n    'ravishing',\n    'reabsorb',\n    'reach',\n    'reacquire',\n    'reaction',\n    'reactive',\n    'reactor',\n    'reaffirm',\n    'ream',\n    'reanalyze',\n    'reappear',\n    'reapply',\n    'reappoint',\n    'reapprove',\n    'rearrange',\n    'rearview',\n    'reason',\n    'reassign',\n    'reassure',\n    'reattach',\n    'reawake',\n    'rebalance',\n    'rebate',\n    'rebel',\n    'rebirth',\n    'reboot',\n    'reborn',\n    'rebound',\n    'rebuff',\n    'rebuild',\n    'rebuilt',\n    'reburial',\n    'rebuttal',\n    'recall',\n    'recant',\n    'recapture',\n    'recast',\n    'recede',\n    'recent',\n    'recess',\n    'recharger',\n    'recipient',\n    'recital',\n    'recite',\n    'reckless',\n    'reclaim',\n    'recliner',\n    'reclining',\n    'recluse',\n    'reclusive',\n    'recognize',\n    'recoil',\n    'recollect',\n    'recolor',\n    'reconcile',\n    'reconfirm',\n    'reconvene',\n    'recopy',\n    'record',\n    'recount',\n    'recoup',\n    'recovery',\n    'recreate',\n    'rectal',\n    'rectangle',\n    'rectified',\n    'rectify',\n    'recycled',\n    'recycler',\n    'recycling',\n    'reemerge',\n    'reenact',\n    'reenter',\n    'reentry',\n    'reexamine',\n    'referable',\n    'referee',\n    'reference',\n    'refill',\n    'refinance',\n    'refined',\n    'refinery',\n    'refining',\n    'refinish',\n    'reflected',\n    'reflector',\n    'reflex',\n    'reflux',\n    'refocus',\n    'refold',\n    'reforest',\n    'reformat',\n    'reformed',\n    'reformer',\n    'reformist',\n    'refract',\n    'refrain',\n    'refreeze',\n    'refresh',\n    'refried',\n    'refueling',\n    'refund',\n    'refurbish',\n    'refurnish',\n    'refusal',\n    'refuse',\n    'refusing',\n    'refutable',\n    'refute',\n    'regain',\n    'regalia',\n    'regally',\n    'reggae',\n    'regime',\n    'region',\n    'register',\n    'registrar',\n    'registry',\n    'regress',\n    'regretful',\n    'regroup',\n    'regular',\n    'regulate',\n    'regulator',\n    'rehab',\n    'reheat',\n    'rehire',\n    'rehydrate',\n    'reimburse',\n    'reissue',\n    'reiterate',\n    'rejoice',\n    'rejoicing',\n    'rejoin',\n    'rekindle',\n    'relapse',\n    'relapsing',\n    'relatable',\n    'related',\n    'relation',\n    'relative',\n    'relax',\n    'relay',\n    'relearn',\n    'release',\n    'relenting',\n    'reliable',\n    'reliably',\n    'reliance',\n    'reliant',\n    'relic',\n    'relieve',\n    'relieving',\n    'relight',\n    'relish',\n    'relive',\n    'reload',\n    'relocate',\n    'relock',\n    'reluctant',\n    'rely',\n    'remake',\n    'remark',\n    'remarry',\n    'rematch',\n    'remedial',\n    'remedy',\n    'remember',\n    'reminder',\n    'remindful',\n    'remission',\n    'remix',\n    'remnant',\n    'remodeler',\n    'remold',\n    'remorse',\n    'remote',\n    'removable',\n    'removal',\n    'removed',\n    'remover',\n    'removing',\n    'rename',\n    'renderer',\n    'rendering',\n    'rendition',\n    'renegade',\n    'renewable',\n    'renewably',\n    'renewal',\n    'renewed',\n    'renounce',\n    'renovate',\n    'renovator',\n    'rentable',\n    'rental',\n    'rented',\n    'renter',\n    'reoccupy',\n    'reoccur',\n    'reopen',\n    'reorder',\n    'repackage',\n    'repacking',\n    'repaint',\n    'repair',\n    'repave',\n    'repaying',\n    'repayment',\n    'repeal',\n    'repeated',\n    'repeater',\n    'repent',\n    'rephrase',\n    'replace',\n    'replay',\n    'replica',\n    'reply',\n    'reporter',\n    'repose',\n    'repossess',\n    'repost',\n    'repressed',\n    'reprimand',\n    'reprint',\n    'reprise',\n    'reproach',\n    'reprocess',\n    'reproduce',\n    'reprogram',\n    'reps',\n    'reptile',\n    'reptilian',\n    'repugnant',\n    'repulsion',\n    'repulsive',\n    'repurpose',\n    'reputable',\n    'reputably',\n    'request',\n    'require',\n    'requisite',\n    'reroute',\n    'rerun',\n    'resale',\n    'resample',\n    'rescuer',\n    'reseal',\n    'research',\n    'reselect',\n    'reseller',\n    'resemble',\n    'resend',\n    'resent',\n    'reset',\n    'reshape',\n    'reshoot',\n    'reshuffle',\n    'residence',\n    'residency',\n    'resident',\n    'residual',\n    'residue',\n    'resigned',\n    'resilient',\n    'resistant',\n    'resisting',\n    'resize',\n    'resolute',\n    'resolved',\n    'resonant',\n    'resonate',\n    'resort',\n    'resource',\n    'respect',\n    'resubmit',\n    'result',\n    'resume',\n    'resupply',\n    'resurface',\n    'resurrect',\n    'retail',\n    'retainer',\n    'retaining',\n    'retake',\n    'retaliate',\n    'retention',\n    'rethink',\n    'retinal',\n    'retired',\n    'retiree',\n    'retiring',\n    'retold',\n    'retool',\n    'retorted',\n    'retouch',\n    'retrace',\n    'retract',\n    'retrain',\n    'retread',\n    'retreat',\n    'retrial',\n    'retrieval',\n    'retriever',\n    'retry',\n    'return',\n    'retying',\n    'retype',\n    'reunion',\n    'reunite',\n    'reusable',\n    'reuse',\n    'reveal',\n    'reveler',\n    'revenge',\n    'revenue',\n    'reverb',\n    'revered',\n    'reverence',\n    'reverend',\n    'reversal',\n    'reverse',\n    'reversing',\n    'reversion',\n    'revert',\n    'revisable',\n    'revise',\n    'revision',\n    'revisit',\n    'revivable',\n    'revival',\n    'reviver',\n    'reviving',\n    'revocable',\n    'revoke',\n    'revolt',\n    'revolver',\n    'revolving',\n    'reward',\n    'rewash',\n    'rewind',\n    'rewire',\n    'reword',\n    'rework',\n    'rewrap',\n    'rewrite',\n    'rhyme',\n    'ribbon',\n    'ribcage',\n    'rice',\n    'riches',\n    'richly',\n    'richness',\n    'rickety',\n    'ricotta',\n    'riddance',\n    'ridden',\n    'ride',\n    'riding',\n    'rifling',\n    'rift',\n    'rigging',\n    'rigid',\n    'rigor',\n    'rimless',\n    'rimmed',\n    'rind',\n    'rink',\n    'rinse',\n    'rinsing',\n    'riot',\n    'ripcord',\n    'ripeness',\n    'ripening',\n    'ripping',\n    'ripple',\n    'rippling',\n    'riptide',\n    'rise',\n    'rising',\n    'risk',\n    'risotto',\n    'ritalin',\n    'ritzy',\n    'rival',\n    'riverbank',\n    'riverbed',\n    'riverboat',\n    'riverside',\n    'riveter',\n    'riveting',\n    'roamer',\n    'roaming',\n    'roast',\n    'robbing',\n    'robe',\n    'robin',\n    'robotics',\n    'robust',\n    'rockband',\n    'rocker',\n    'rocket',\n    'rockfish',\n    'rockiness',\n    'rocking',\n    'rocklike',\n    'rockslide',\n    'rockstar',\n    'rocky',\n    'rogue',\n    'roman',\n    'romp',\n    'rope',\n    'roping',\n    'roster',\n    'rosy',\n    'rotten',\n    'rotting',\n    'rotunda',\n    'roulette',\n    'rounding',\n    'roundish',\n    'roundness',\n    'roundup',\n    'roundworm',\n    'routine',\n    'routing',\n    'rover',\n    'roving',\n    'royal',\n    'rubbed',\n    'rubber',\n    'rubbing',\n    'rubble',\n    'rubdown',\n    'ruby',\n    'ruckus',\n    'rudder',\n    'rug',\n    'ruined',\n    'rule',\n    'rumble',\n    'rumbling',\n    'rummage',\n    'rumor',\n    'runaround',\n    'rundown',\n    'runner',\n    'running',\n    'runny',\n    'runt',\n    'runway',\n    'rupture',\n    'rural',\n    'ruse',\n    'rush',\n    'rust',\n    'rut',\n    'sabbath',\n    'sabotage',\n    'sacrament',\n    'sacred',\n    'sacrifice',\n    'sadden',\n    'saddlebag',\n    'saddled',\n    'saddling',\n    'sadly',\n    'sadness',\n    'safari',\n    'safeguard',\n    'safehouse',\n    'safely',\n    'safeness',\n    'saffron',\n    'saga',\n    'sage',\n    'sagging',\n    'saggy',\n    'said',\n    'saint',\n    'sake',\n    'salad',\n    'salami',\n    'salaried',\n    'salary',\n    'saline',\n    'salon',\n    'saloon',\n    'salsa',\n    'salt',\n    'salutary',\n    'salute',\n    'salvage',\n    'salvaging',\n    'salvation',\n    'same',\n    'sample',\n    'sampling',\n    'sanction',\n    'sanctity',\n    'sanctuary',\n    'sandal',\n    'sandbag',\n    'sandbank',\n    'sandbar',\n    'sandblast',\n    'sandbox',\n    'sanded',\n    'sandfish',\n    'sanding',\n    'sandlot',\n    'sandpaper',\n    'sandpit',\n    'sandstone',\n    'sandstorm',\n    'sandworm',\n    'sandy',\n    'sanitary',\n    'sanitizer',\n    'sank',\n    'santa',\n    'sapling',\n    'sappiness',\n    'sappy',\n    'sarcasm',\n    'sarcastic',\n    'sardine',\n    'sash',\n    'sasquatch',\n    'sassy',\n    'satchel',\n    'satiable',\n    'satin',\n    'satirical',\n    'satisfied',\n    'satisfy',\n    'saturate',\n    'saturday',\n    'sauciness',\n    'saucy',\n    'sauna',\n    'savage',\n    'savanna',\n    'saved',\n    'savings',\n    'savior',\n    'savor',\n    'saxophone',\n    'say',\n    'scabbed',\n    'scabby',\n    'scalded',\n    'scalding',\n    'scale',\n    'scaling',\n    'scallion',\n    'scallop',\n    'scalping',\n    'scam',\n    'scandal',\n    'scanner',\n    'scanning',\n    'scant',\n    'scapegoat',\n    'scarce',\n    'scarcity',\n    'scarecrow',\n    'scared',\n    'scarf',\n    'scarily',\n    'scariness',\n    'scarring',\n    'scary',\n    'scavenger',\n    'scenic',\n    'schedule',\n    'schematic',\n    'scheme',\n    'scheming',\n    'schilling',\n    'schnapps',\n    'scholar',\n    'science',\n    'scientist',\n    'scion',\n    'scoff',\n    'scolding',\n    'scone',\n    'scoop',\n    'scooter',\n    'scope',\n    'scorch',\n    'scorebook',\n    'scorecard',\n    'scored',\n    'scoreless',\n    'scorer',\n    'scoring',\n    'scorn',\n    'scorpion',\n    'scotch',\n    'scoundrel',\n    'scoured',\n    'scouring',\n    'scouting',\n    'scouts',\n    'scowling',\n    'scrabble',\n    'scraggly',\n    'scrambled',\n    'scrambler',\n    'scrap',\n    'scratch',\n    'scrawny',\n    'screen',\n    'scribble',\n    'scribe',\n    'scribing',\n    'scrimmage',\n    'script',\n    'scroll',\n    'scrooge',\n    'scrounger',\n    'scrubbed',\n    'scrubber',\n    'scruffy',\n    'scrunch',\n    'scrutiny',\n    'scuba',\n    'scuff',\n    'sculptor',\n    'sculpture',\n    'scurvy',\n    'scuttle',\n    'secluded',\n    'secluding',\n    'seclusion',\n    'second',\n    'secrecy',\n    'secret',\n    'sectional',\n    'sector',\n    'secular',\n    'securely',\n    'security',\n    'sedan',\n    'sedate',\n    'sedation',\n    'sedative',\n    'sediment',\n    'seduce',\n    'seducing',\n    'segment',\n    'seismic',\n    'seizing',\n    'seldom',\n    'selected',\n    'selection',\n    'selective',\n    'selector',\n    'self',\n    'seltzer',\n    'semantic',\n    'semester',\n    'semicolon',\n    'semifinal',\n    'seminar',\n    'semisoft',\n    'semisweet',\n    'senate',\n    'senator',\n    'send',\n    'senior',\n    'senorita',\n    'sensation',\n    'sensitive',\n    'sensitize',\n    'sensually',\n    'sensuous',\n    'sepia',\n    'september',\n    'septic',\n    'septum',\n    'sequel',\n    'sequence',\n    'sequester',\n    'series',\n    'sermon',\n    'serotonin',\n    'serpent',\n    'serrated',\n    'serve',\n    'service',\n    'serving',\n    'sesame',\n    'sessions',\n    'setback',\n    'setting',\n    'settle',\n    'settling',\n    'setup',\n    'sevenfold',\n    'seventeen',\n    'seventh',\n    'seventy',\n    'severity',\n    'shabby',\n    'shack',\n    'shaded',\n    'shadily',\n    'shadiness',\n    'shading',\n    'shadow',\n    'shady',\n    'shaft',\n    'shakable',\n    'shakily',\n    'shakiness',\n    'shaking',\n    'shaky',\n    'shale',\n    'shallot',\n    'shallow',\n    'shame',\n    'shampoo',\n    'shamrock',\n    'shank',\n    'shanty',\n    'shape',\n    'shaping',\n    'share',\n    'sharpener',\n    'sharper',\n    'sharpie',\n    'sharply',\n    'sharpness',\n    'shawl',\n    'sheath',\n    'shed',\n    'sheep',\n    'sheet',\n    'shelf',\n    'shell',\n    'shelter',\n    'shelve',\n    'shelving',\n    'sherry',\n    'shield',\n    'shifter',\n    'shifting',\n    'shiftless',\n    'shifty',\n    'shimmer',\n    'shimmy',\n    'shindig',\n    'shine',\n    'shingle',\n    'shininess',\n    'shining',\n    'shiny',\n    'ship',\n    'shirt',\n    'shivering',\n    'shock',\n    'shone',\n    'shoplift',\n    'shopper',\n    'shopping',\n    'shoptalk',\n    'shore',\n    'shortage',\n    'shortcake',\n    'shortcut',\n    'shorten',\n    'shorter',\n    'shorthand',\n    'shortlist',\n    'shortly',\n    'shortness',\n    'shorts',\n    'shortwave',\n    'shorty',\n    'shout',\n    'shove',\n    'showbiz',\n    'showcase',\n    'showdown',\n    'shower',\n    'showgirl',\n    'showing',\n    'showman',\n    'shown',\n    'showoff',\n    'showpiece',\n    'showplace',\n    'showroom',\n    'showy',\n    'shrank',\n    'shrapnel',\n    'shredder',\n    'shredding',\n    'shrewdly',\n    'shriek',\n    'shrill',\n    'shrimp',\n    'shrine',\n    'shrink',\n    'shrivel',\n    'shrouded',\n    'shrubbery',\n    'shrubs',\n    'shrug',\n    'shrunk',\n    'shucking',\n    'shudder',\n    'shuffle',\n    'shuffling',\n    'shun',\n    'shush',\n    'shut',\n    'shy',\n    'siamese',\n    'siberian',\n    'sibling',\n    'siding',\n    'sierra',\n    'siesta',\n    'sift',\n    'sighing',\n    'silenced',\n    'silencer',\n    'silent',\n    'silica',\n    'silicon',\n    'silk',\n    'silliness',\n    'silly',\n    'silo',\n    'silt',\n    'silver',\n    'similarly',\n    'simile',\n    'simmering',\n    'simple',\n    'simplify',\n    'simply',\n    'sincere',\n    'sincerity',\n    'singer',\n    'singing',\n    'single',\n    'singular',\n    'sinister',\n    'sinless',\n    'sinner',\n    'sinuous',\n    'sip',\n    'siren',\n    'sister',\n    'sitcom',\n    'sitter',\n    'sitting',\n    'situated',\n    'situation',\n    'sixfold',\n    'sixteen',\n    'sixth',\n    'sixties',\n    'sixtieth',\n    'sixtyfold',\n    'sizable',\n    'sizably',\n    'size',\n    'sizing',\n    'sizzle',\n    'sizzling',\n    'skater',\n    'skating',\n    'skedaddle',\n    'skeletal',\n    'skeleton',\n    'skeptic',\n    'sketch',\n    'skewed',\n    'skewer',\n    'skid',\n    'skied',\n    'skier',\n    'skies',\n    'skiing',\n    'skilled',\n    'skillet',\n    'skillful',\n    'skimmed',\n    'skimmer',\n    'skimming',\n    'skimpily',\n    'skincare',\n    'skinhead',\n    'skinless',\n    'skinning',\n    'skinny',\n    'skintight',\n    'skipper',\n    'skipping',\n    'skirmish',\n    'skirt',\n    'skittle',\n    'skydiver',\n    'skylight',\n    'skyline',\n    'skype',\n    'skyrocket',\n    'skyward',\n    'slab',\n    'slacked',\n    'slacker',\n    'slacking',\n    'slackness',\n    'slacks',\n    'slain',\n    'slam',\n    'slander',\n    'slang',\n    'slapping',\n    'slapstick',\n    'slashed',\n    'slashing',\n    'slate',\n    'slather',\n    'slaw',\n    'sled',\n    'sleek',\n    'sleep',\n    'sleet',\n    'sleeve',\n    'slept',\n    'sliceable',\n    'sliced',\n    'slicer',\n    'slicing',\n    'slick',\n    'slider',\n    'slideshow',\n    'sliding',\n    'slighted',\n    'slighting',\n    'slightly',\n    'slimness',\n    'slimy',\n    'slinging',\n    'slingshot',\n    'slinky',\n    'slip',\n    'slit',\n    'sliver',\n    'slobbery',\n    'slogan',\n    'sloped',\n    'sloping',\n    'sloppily',\n    'sloppy',\n    'slot',\n    'slouching',\n    'slouchy',\n    'sludge',\n    'slug',\n    'slum',\n    'slurp',\n    'slush',\n    'sly',\n    'small',\n    'smartly',\n    'smartness',\n    'smasher',\n    'smashing',\n    'smashup',\n    'smell',\n    'smelting',\n    'smile',\n    'smilingly',\n    'smirk',\n    'smite',\n    'smith',\n    'smitten',\n    'smock',\n    'smog',\n    'smoked',\n    'smokeless',\n    'smokiness',\n    'smoking',\n    'smoky',\n    'smolder',\n    'smooth',\n    'smother',\n    'smudge',\n    'smudgy',\n    'smuggler',\n    'smuggling',\n    'smugly',\n    'smugness',\n    'snack',\n    'snagged',\n    'snaking',\n    'snap',\n    'snare',\n    'snarl',\n    'snazzy',\n    'sneak',\n    'sneer',\n    'sneeze',\n    'sneezing',\n    'snide',\n    'sniff',\n    'snippet',\n    'snipping',\n    'snitch',\n    'snooper',\n    'snooze',\n    'snore',\n    'snoring',\n    'snorkel',\n    'snort',\n    'snout',\n    'snowbird',\n    'snowboard',\n    'snowbound',\n    'snowcap',\n    'snowdrift',\n    'snowdrop',\n    'snowfall',\n    'snowfield',\n    'snowflake',\n    'snowiness',\n    'snowless',\n    'snowman',\n    'snowplow',\n    'snowshoe',\n    'snowstorm',\n    'snowsuit',\n    'snowy',\n    'snub',\n    'snuff',\n    'snuggle',\n    'snugly',\n    'snugness',\n    'speak',\n    'spearfish',\n    'spearhead',\n    'spearman',\n    'spearmint',\n    'species',\n    'specimen',\n    'specked',\n    'speckled',\n    'specks',\n    'spectacle',\n    'spectator',\n    'spectrum',\n    'speculate',\n    'speech',\n    'speed',\n    'spellbind',\n    'speller',\n    'spelling',\n    'spendable',\n    'spender',\n    'spending',\n    'spent',\n    'spew',\n    'sphere',\n    'spherical',\n    'sphinx',\n    'spider',\n    'spied',\n    'spiffy',\n    'spill',\n    'spilt',\n    'spinach',\n    'spinal',\n    'spindle',\n    'spinner',\n    'spinning',\n    'spinout',\n    'spinster',\n    'spiny',\n    'spiral',\n    'spirited',\n    'spiritism',\n    'spirits',\n    'spiritual',\n    'splashed',\n    'splashing',\n    'splashy',\n    'splatter',\n    'spleen',\n    'splendid',\n    'splendor',\n    'splice',\n    'splicing',\n    'splinter',\n    'splotchy',\n    'splurge',\n    'spoilage',\n    'spoiled',\n    'spoiler',\n    'spoiling',\n    'spoils',\n    'spoken',\n    'spokesman',\n    'sponge',\n    'spongy',\n    'sponsor',\n    'spoof',\n    'spookily',\n    'spooky',\n    'spool',\n    'spoon',\n    'spore',\n    'sporting',\n    'sports',\n    'sporty',\n    'spotless',\n    'spotlight',\n    'spotted',\n    'spotter',\n    'spotting',\n    'spotty',\n    'spousal',\n    'spouse',\n    'spout',\n    'sprain',\n    'sprang',\n    'sprawl',\n    'spray',\n    'spree',\n    'sprig',\n    'spring',\n    'sprinkled',\n    'sprinkler',\n    'sprint',\n    'sprite',\n    'sprout',\n    'spruce',\n    'sprung',\n    'spry',\n    'spud',\n    'spur',\n    'sputter',\n    'spyglass',\n    'squabble',\n    'squad',\n    'squall',\n    'squander',\n    'squash',\n    'squatted',\n    'squatter',\n    'squatting',\n    'squeak',\n    'squealer',\n    'squealing',\n    'squeamish',\n    'squeegee',\n    'squeeze',\n    'squeezing',\n    'squid',\n    'squiggle',\n    'squiggly',\n    'squint',\n    'squire',\n    'squirt',\n    'squishier',\n    'squishy',\n    'stability',\n    'stabilize',\n    'stable',\n    'stack',\n    'stadium',\n    'staff',\n    'stage',\n    'staging',\n    'stagnant',\n    'stagnate',\n    'stainable',\n    'stained',\n    'staining',\n    'stainless',\n    'stalemate',\n    'staleness',\n    'stalling',\n    'stallion',\n    'stamina',\n    'stammer',\n    'stamp',\n    'stand',\n    'stank',\n    'staple',\n    'stapling',\n    'starboard',\n    'starch',\n    'stardom',\n    'stardust',\n    'starfish',\n    'stargazer',\n    'staring',\n    'stark',\n    'starless',\n    'starlet',\n    'starlight',\n    'starlit',\n    'starring',\n    'starry',\n    'starship',\n    'starter',\n    'starting',\n    'startle',\n    'startling',\n    'startup',\n    'starved',\n    'starving',\n    'stash',\n    'state',\n    'static',\n    'statistic',\n    'statue',\n    'stature',\n    'status',\n    'statute',\n    'statutory',\n    'staunch',\n    'stays',\n    'steadfast',\n    'steadier',\n    'steadily',\n    'steadying',\n    'steam',\n    'steed',\n    'steep',\n    'steerable',\n    'steering',\n    'steersman',\n    'stegosaur',\n    'stellar',\n    'stem',\n    'stench',\n    'stencil',\n    'step',\n    'stereo',\n    'sterile',\n    'sterility',\n    'sterilize',\n    'sterling',\n    'sternness',\n    'sternum',\n    'stew',\n    'stick',\n    'stiffen',\n    'stiffly',\n    'stiffness',\n    'stifle',\n    'stifling',\n    'stillness',\n    'stilt',\n    'stimulant',\n    'stimulate',\n    'stimuli',\n    'stimulus',\n    'stinger',\n    'stingily',\n    'stinging',\n    'stingray',\n    'stingy',\n    'stinking',\n    'stinky',\n    'stipend',\n    'stipulate',\n    'stir',\n    'stitch',\n    'stock',\n    'stoic',\n    'stoke',\n    'stole',\n    'stomp',\n    'stonewall',\n    'stoneware',\n    'stonework',\n    'stoning',\n    'stony',\n    'stood',\n    'stooge',\n    'stool',\n    'stoop',\n    'stoplight',\n    'stoppable',\n    'stoppage',\n    'stopped',\n    'stopper',\n    'stopping',\n    'stopwatch',\n    'storable',\n    'storage',\n    'storeroom',\n    'storewide',\n    'storm',\n    'stout',\n    'stove',\n    'stowaway',\n    'stowing',\n    'straddle',\n    'straggler',\n    'strained',\n    'strainer',\n    'straining',\n    'strangely',\n    'stranger',\n    'strangle',\n    'strategic',\n    'strategy',\n    'stratus',\n    'straw',\n    'stray',\n    'streak',\n    'stream',\n    'street',\n    'strength',\n    'strenuous',\n    'strep',\n    'stress',\n    'stretch',\n    'strewn',\n    'stricken',\n    'strict',\n    'stride',\n    'strife',\n    'strike',\n    'striking',\n    'strive',\n    'striving',\n    'strobe',\n    'strode',\n    'stroller',\n    'strongbox',\n    'strongly',\n    'strongman',\n    'struck',\n    'structure',\n    'strudel',\n    'struggle',\n    'strum',\n    'strung',\n    'strut',\n    'stubbed',\n    'stubble',\n    'stubbly',\n    'stubborn',\n    'stucco',\n    'stuck',\n    'student',\n    'studied',\n    'studio',\n    'study',\n    'stuffed',\n    'stuffing',\n    'stuffy',\n    'stumble',\n    'stumbling',\n    'stump',\n    'stung',\n    'stunned',\n    'stunner',\n    'stunning',\n    'stunt',\n    'stupor',\n    'sturdily',\n    'sturdy',\n    'styling',\n    'stylishly',\n    'stylist',\n    'stylized',\n    'stylus',\n    'suave',\n    'subarctic',\n    'subatomic',\n    'subdivide',\n    'subdued',\n    'subduing',\n    'subfloor',\n    'subgroup',\n    'subheader',\n    'subject',\n    'sublease',\n    'sublet',\n    'sublevel',\n    'sublime',\n    'submarine',\n    'submerge',\n    'submersed',\n    'submitter',\n    'subpanel',\n    'subpar',\n    'subplot',\n    'subprime',\n    'subscribe',\n    'subscript',\n    'subsector',\n    'subside',\n    'subsiding',\n    'subsidize',\n    'subsidy',\n    'subsoil',\n    'subsonic',\n    'substance',\n    'subsystem',\n    'subtext',\n    'subtitle',\n    'subtly',\n    'subtotal',\n    'subtract',\n    'subtype',\n    'suburb',\n    'subway',\n    'subwoofer',\n    'subzero',\n    'succulent',\n    'such',\n    'suction',\n    'sudden',\n    'sudoku',\n    'suds',\n    'sufferer',\n    'suffering',\n    'suffice',\n    'suffix',\n    'suffocate',\n    'suffrage',\n    'sugar',\n    'suggest',\n    'suing',\n    'suitable',\n    'suitably',\n    'suitcase',\n    'suitor',\n    'sulfate',\n    'sulfide',\n    'sulfite',\n    'sulfur',\n    'sulk',\n    'sullen',\n    'sulphate',\n    'sulphuric',\n    'sultry',\n    'superbowl',\n    'superglue',\n    'superhero',\n    'superior',\n    'superjet',\n    'superman',\n    'supermom',\n    'supernova',\n    'supervise',\n    'supper',\n    'supplier',\n    'supply',\n    'support',\n    'supremacy',\n    'supreme',\n    'surcharge',\n    'surely',\n    'sureness',\n    'surface',\n    'surfacing',\n    'surfboard',\n    'surfer',\n    'surgery',\n    'surgical',\n    'surging',\n    'surname',\n    'surpass',\n    'surplus',\n    'surprise',\n    'surreal',\n    'surrender',\n    'surrogate',\n    'surround',\n    'survey',\n    'survival',\n    'survive',\n    'surviving',\n    'survivor',\n    'sushi',\n    'suspect',\n    'suspend',\n    'suspense',\n    'sustained',\n    'sustainer',\n    'swab',\n    'swaddling',\n    'swagger',\n    'swampland',\n    'swan',\n    'swapping',\n    'swarm',\n    'sway',\n    'swear',\n    'sweat',\n    'sweep',\n    'swell',\n    'swept',\n    'swerve',\n    'swifter',\n    'swiftly',\n    'swiftness',\n    'swimmable',\n    'swimmer',\n    'swimming',\n    'swimsuit',\n    'swimwear',\n    'swinger',\n    'swinging',\n    'swipe',\n    'swirl',\n    'switch',\n    'swivel',\n    'swizzle',\n    'swooned',\n    'swoop',\n    'swoosh',\n    'swore',\n    'sworn',\n    'swung',\n    'sycamore',\n    'sympathy',\n    'symphonic',\n    'symphony',\n    'symptom',\n    'synapse',\n    'syndrome',\n    'synergy',\n    'synopses',\n    'synopsis',\n    'synthesis',\n    'synthetic',\n    'syrup',\n    'system',\n    't-shirt',\n    'tabasco',\n    'tabby',\n    'tableful',\n    'tables',\n    'tablet',\n    'tableware',\n    'tabloid',\n    'tackiness',\n    'tacking',\n    'tackle',\n    'tackling',\n    'tacky',\n    'taco',\n    'tactful',\n    'tactical',\n    'tactics',\n    'tactile',\n    'tactless',\n    'tadpole',\n    'taekwondo',\n    'tag',\n    'tainted',\n    'take',\n    'taking',\n    'talcum',\n    'talisman',\n    'tall',\n    'talon',\n    'tamale',\n    'tameness',\n    'tamer',\n    'tamper',\n    'tank',\n    'tanned',\n    'tannery',\n    'tanning',\n    'tantrum',\n    'tapeless',\n    'tapered',\n    'tapering',\n    'tapestry',\n    'tapioca',\n    'tapping',\n    'taps',\n    'tarantula',\n    'target',\n    'tarmac',\n    'tarnish',\n    'tarot',\n    'tartar',\n    'tartly',\n    'tartness',\n    'task',\n    'tassel',\n    'taste',\n    'tastiness',\n    'tasting',\n    'tasty',\n    'tattered',\n    'tattle',\n    'tattling',\n    'tattoo',\n    'taunt',\n    'tavern',\n    'thank',\n    'that',\n    'thaw',\n    'theater',\n    'theatrics',\n    'thee',\n    'theft',\n    'theme',\n    'theology',\n    'theorize',\n    'thermal',\n    'thermos',\n    'thesaurus',\n    'these',\n    'thesis',\n    'thespian',\n    'thicken',\n    'thicket',\n    'thickness',\n    'thieving',\n    'thievish',\n    'thigh',\n    'thimble',\n    'thing',\n    'think',\n    'thinly',\n    'thinner',\n    'thinness',\n    'thinning',\n    'thirstily',\n    'thirsting',\n    'thirsty',\n    'thirteen',\n    'thirty',\n    'thong',\n    'thorn',\n    'those',\n    'thousand',\n    'thrash',\n    'thread',\n    'threaten',\n    'threefold',\n    'thrift',\n    'thrill',\n    'thrive',\n    'thriving',\n    'throat',\n    'throbbing',\n    'throng',\n    'throttle',\n    'throwaway',\n    'throwback',\n    'thrower',\n    'throwing',\n    'thud',\n    'thumb',\n    'thumping',\n    'thursday',\n    'thus',\n    'thwarting',\n    'thyself',\n    'tiara',\n    'tibia',\n    'tidal',\n    'tidbit',\n    'tidiness',\n    'tidings',\n    'tidy',\n    'tiger',\n    'tighten',\n    'tightly',\n    'tightness',\n    'tightrope',\n    'tightwad',\n    'tigress',\n    'tile',\n    'tiling',\n    'till',\n    'tilt',\n    'timid',\n    'timing',\n    'timothy',\n    'tinderbox',\n    'tinfoil',\n    'tingle',\n    'tingling',\n    'tingly',\n    'tinker',\n    'tinkling',\n    'tinsel',\n    'tinsmith',\n    'tint',\n    'tinwork',\n    'tiny',\n    'tipoff',\n    'tipped',\n    'tipper',\n    'tipping',\n    'tiptoeing',\n    'tiptop',\n    'tiring',\n    'tissue',\n    'trace',\n    'tracing',\n    'track',\n    'traction',\n    'tractor',\n    'trade',\n    'trading',\n    'tradition',\n    'traffic',\n    'tragedy',\n    'trailing',\n    'trailside',\n    'train',\n    'traitor',\n    'trance',\n    'tranquil',\n    'transfer',\n    'transform',\n    'translate',\n    'transpire',\n    'transport',\n    'transpose',\n    'trapdoor',\n    'trapeze',\n    'trapezoid',\n    'trapped',\n    'trapper',\n    'trapping',\n    'traps',\n    'trash',\n    'travel',\n    'traverse',\n    'travesty',\n    'tray',\n    'treachery',\n    'treading',\n    'treadmill',\n    'treason',\n    'treat',\n    'treble',\n    'tree',\n    'trekker',\n    'tremble',\n    'trembling',\n    'tremor',\n    'trench',\n    'trend',\n    'trespass',\n    'triage',\n    'trial',\n    'triangle',\n    'tribesman',\n    'tribunal',\n    'tribune',\n    'tributary',\n    'tribute',\n    'triceps',\n    'trickery',\n    'trickily',\n    'tricking',\n    'trickle',\n    'trickster',\n    'tricky',\n    'tricolor',\n    'tricycle',\n    'trident',\n    'tried',\n    'trifle',\n    'trifocals',\n    'trillion',\n    'trilogy',\n    'trimester',\n    'trimmer',\n    'trimming',\n    'trimness',\n    'trinity',\n    'trio',\n    'tripod',\n    'tripping',\n    'triumph',\n    'trivial',\n    'trodden',\n    'trolling',\n    'trombone',\n    'trophy',\n    'tropical',\n    'tropics',\n    'trouble',\n    'troubling',\n    'trough',\n    'trousers',\n    'trout',\n    'trowel',\n    'truce',\n    'truck',\n    'truffle',\n    'trump',\n    'trunks',\n    'trustable',\n    'trustee',\n    'trustful',\n    'trusting',\n    'trustless',\n    'truth',\n    'try',\n    'tubby',\n    'tubeless',\n    'tubular',\n    'tucking',\n    'tuesday',\n    'tug',\n    'tuition',\n    'tulip',\n    'tumble',\n    'tumbling',\n    'tummy',\n    'turban',\n    'turbine',\n    'turbofan',\n    'turbojet',\n    'turbulent',\n    'turf',\n    'turkey',\n    'turmoil',\n    'turret',\n    'turtle',\n    'tusk',\n    'tutor',\n    'tutu',\n    'tux',\n    'tweak',\n    'tweed',\n    'tweet',\n    'tweezers',\n    'twelve',\n    'twentieth',\n    'twenty',\n    'twerp',\n    'twice',\n    'twiddle',\n    'twiddling',\n    'twig',\n    'twilight',\n    'twine',\n    'twins',\n    'twirl',\n    'twistable',\n    'twisted',\n    'twister',\n    'twisting',\n    'twisty',\n    'twitch',\n    'twitter',\n    'tycoon',\n    'tying',\n    'tyke',\n    'udder',\n    'ultimate',\n    'ultimatum',\n    'ultra',\n    'umbilical',\n    'umbrella',\n    'umpire',\n    'unabashed',\n    'unable',\n    'unadorned',\n    'unadvised',\n    'unafraid',\n    'unaired',\n    'unaligned',\n    'unaltered',\n    'unarmored',\n    'unashamed',\n    'unaudited',\n    'unawake',\n    'unaware',\n    'unbaked',\n    'unbalance',\n    'unbeaten',\n    'unbend',\n    'unbent',\n    'unbiased',\n    'unbitten',\n    'unblended',\n    'unblessed',\n    'unblock',\n    'unbolted',\n    'unbounded',\n    'unboxed',\n    'unbraided',\n    'unbridle',\n    'unbroken',\n    'unbuckled',\n    'unbundle',\n    'unburned',\n    'unbutton',\n    'uncanny',\n    'uncapped',\n    'uncaring',\n    'uncertain',\n    'unchain',\n    'unchanged',\n    'uncharted',\n    'uncheck',\n    'uncivil',\n    'unclad',\n    'unclaimed',\n    'unclamped',\n    'unclasp',\n    'uncle',\n    'unclip',\n    'uncloak',\n    'unclog',\n    'unclothed',\n    'uncoated',\n    'uncoiled',\n    'uncolored',\n    'uncombed',\n    'uncommon',\n    'uncooked',\n    'uncork',\n    'uncorrupt',\n    'uncounted',\n    'uncouple',\n    'uncouth',\n    'uncover',\n    'uncross',\n    'uncrown',\n    'uncrushed',\n    'uncured',\n    'uncurious',\n    'uncurled',\n    'uncut',\n    'undamaged',\n    'undated',\n    'undaunted',\n    'undead',\n    'undecided',\n    'undefined',\n    'underage',\n    'underarm',\n    'undercoat',\n    'undercook',\n    'undercut',\n    'underdog',\n    'underdone',\n    'underfed',\n    'underfeed',\n    'underfoot',\n    'undergo',\n    'undergrad',\n    'underhand',\n    'underline',\n    'underling',\n    'undermine',\n    'undermost',\n    'underpaid',\n    'underpass',\n    'underpay',\n    'underrate',\n    'undertake',\n    'undertone',\n    'undertook',\n    'undertow',\n    'underuse',\n    'underwear',\n    'underwent',\n    'underwire',\n    'undesired',\n    'undiluted',\n    'undivided',\n    'undocked',\n    'undoing',\n    'undone',\n    'undrafted',\n    'undress',\n    'undrilled',\n    'undusted',\n    'undying',\n    'unearned',\n    'unearth',\n    'unease',\n    'uneasily',\n    'uneasy',\n    'uneatable',\n    'uneaten',\n    'unedited',\n    'unelected',\n    'unending',\n    'unengaged',\n    'unenvied',\n    'unequal',\n    'unethical',\n    'uneven',\n    'unexpired',\n    'unexposed',\n    'unfailing',\n    'unfair',\n    'unfasten',\n    'unfazed',\n    'unfeeling',\n    'unfiled',\n    'unfilled',\n    'unfitted',\n    'unfitting',\n    'unfixable',\n    'unfixed',\n    'unflawed',\n    'unfocused',\n    'unfold',\n    'unfounded',\n    'unframed',\n    'unfreeze',\n    'unfrosted',\n    'unfrozen',\n    'unfunded',\n    'unglazed',\n    'ungloved',\n    'unglue',\n    'ungodly',\n    'ungraded',\n    'ungreased',\n    'unguarded',\n    'unguided',\n    'unhappily',\n    'unhappy',\n    'unharmed',\n    'unhealthy',\n    'unheard',\n    'unhearing',\n    'unheated',\n    'unhelpful',\n    'unhidden',\n    'unhinge',\n    'unhitched',\n    'unholy',\n    'unhook',\n    'unicorn',\n    'unicycle',\n    'unified',\n    'unifier',\n    'uniformed',\n    'uniformly',\n    'unify',\n    'unimpeded',\n    'uninjured',\n    'uninstall',\n    'uninsured',\n    'uninvited',\n    'union',\n    'uniquely',\n    'unisexual',\n    'unison',\n    'unissued',\n    'unit',\n    'universal',\n    'universe',\n    'unjustly',\n    'unkempt',\n    'unkind',\n    'unknotted',\n    'unknowing',\n    'unknown',\n    'unlaced',\n    'unlatch',\n    'unlawful',\n    'unleaded',\n    'unlearned',\n    'unleash',\n    'unless',\n    'unleveled',\n    'unlighted',\n    'unlikable',\n    'unlimited',\n    'unlined',\n    'unlinked',\n    'unlisted',\n    'unlit',\n    'unlivable',\n    'unloaded',\n    'unloader',\n    'unlocked',\n    'unlocking',\n    'unlovable',\n    'unloved',\n    'unlovely',\n    'unloving',\n    'unluckily',\n    'unlucky',\n    'unmade',\n    'unmanaged',\n    'unmanned',\n    'unmapped',\n    'unmarked',\n    'unmasked',\n    'unmasking',\n    'unmatched',\n    'unmindful',\n    'unmixable',\n    'unmixed',\n    'unmolded',\n    'unmoral',\n    'unmovable',\n    'unmoved',\n    'unmoving',\n    'unnamable',\n    'unnamed',\n    'unnatural',\n    'unneeded',\n    'unnerve',\n    'unnerving',\n    'unnoticed',\n    'unopened',\n    'unopposed',\n    'unpack',\n    'unpadded',\n    'unpaid',\n    'unpainted',\n    'unpaired',\n    'unpaved',\n    'unpeeled',\n    'unpicked',\n    'unpiloted',\n    'unpinned',\n    'unplanned',\n    'unplanted',\n    'unpleased',\n    'unpledged',\n    'unplowed',\n    'unplug',\n    'unpopular',\n    'unproven',\n    'unquote',\n    'unranked',\n    'unrated',\n    'unraveled',\n    'unreached',\n    'unread',\n    'unreal',\n    'unreeling',\n    'unrefined',\n    'unrelated',\n    'unrented',\n    'unrest',\n    'unretired',\n    'unrevised',\n    'unrigged',\n    'unripe',\n    'unrivaled',\n    'unroasted',\n    'unrobed',\n    'unroll',\n    'unruffled',\n    'unruly',\n    'unrushed',\n    'unsaddle',\n    'unsafe',\n    'unsaid',\n    'unsalted',\n    'unsaved',\n    'unsavory',\n    'unscathed',\n    'unscented',\n    'unscrew',\n    'unsealed',\n    'unseated',\n    'unsecured',\n    'unseeing',\n    'unseemly',\n    'unseen',\n    'unselect',\n    'unselfish',\n    'unsent',\n    'unsettled',\n    'unshackle',\n    'unshaken',\n    'unshaved',\n    'unshaven',\n    'unsheathe',\n    'unshipped',\n    'unsightly',\n    'unsigned',\n    'unskilled',\n    'unsliced',\n    'unsmooth',\n    'unsnap',\n    'unsocial',\n    'unsoiled',\n    'unsold',\n    'unsolved',\n    'unsorted',\n    'unspoiled',\n    'unspoken',\n    'unstable',\n    'unstaffed',\n    'unstamped',\n    'unsteady',\n    'unsterile',\n    'unstirred',\n    'unstitch',\n    'unstopped',\n    'unstuck',\n    'unstuffed',\n    'unstylish',\n    'unsubtle',\n    'unsubtly',\n    'unsuited',\n    'unsure',\n    'unsworn',\n    'untagged',\n    'untainted',\n    'untaken',\n    'untamed',\n    'untangled',\n    'untapped',\n    'untaxed',\n    'unthawed',\n    'unthread',\n    'untidy',\n    'untie',\n    'until',\n    'untimed',\n    'untimely',\n    'untitled',\n    'untoasted',\n    'untold',\n    'untouched',\n    'untracked',\n    'untrained',\n    'untreated',\n    'untried',\n    'untrimmed',\n    'untrue',\n    'untruth',\n    'unturned',\n    'untwist',\n    'untying',\n    'unusable',\n    'unused',\n    'unusual',\n    'unvalued',\n    'unvaried',\n    'unvarying',\n    'unveiled',\n    'unveiling',\n    'unvented',\n    'unviable',\n    'unvisited',\n    'unvocal',\n    'unwanted',\n    'unwarlike',\n    'unwary',\n    'unwashed',\n    'unwatched',\n    'unweave',\n    'unwed',\n    'unwelcome',\n    'unwell',\n    'unwieldy',\n    'unwilling',\n    'unwind',\n    'unwired',\n    'unwitting',\n    'unwomanly',\n    'unworldly',\n    'unworn',\n    'unworried',\n    'unworthy',\n    'unwound',\n    'unwoven',\n    'unwrapped',\n    'unwritten',\n    'unzip',\n    'upbeat',\n    'upchuck',\n    'upcoming',\n    'upcountry',\n    'update',\n    'upfront',\n    'upgrade',\n    'upheaval',\n    'upheld',\n    'uphill',\n    'uphold',\n    'uplifted',\n    'uplifting',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'uprising',\n    'upriver',\n    'uproar',\n    'uproot',\n    'upscale',\n    'upside',\n    'upstage',\n    'upstairs',\n    'upstart',\n    'upstate',\n    'upstream',\n    'upstroke',\n    'upswing',\n    'uptake',\n    'uptight',\n    'uptown',\n    'upturned',\n    'upward',\n    'upwind',\n    'uranium',\n    'urban',\n    'urchin',\n    'urethane',\n    'urgency',\n    'urgent',\n    'urging',\n    'urologist',\n    'urology',\n    'usable',\n    'usage',\n    'useable',\n    'used',\n    'uselessly',\n    'user',\n    'usher',\n    'usual',\n    'utensil',\n    'utility',\n    'utilize',\n    'utmost',\n    'utopia',\n    'utter',\n    'vacancy',\n    'vacant',\n    'vacate',\n    'vacation',\n    'vagabond',\n    'vagrancy',\n    'vagrantly',\n    'vaguely',\n    'vagueness',\n    'valiant',\n    'valid',\n    'valium',\n    'valley',\n    'valuables',\n    'value',\n    'vanilla',\n    'vanish',\n    'vanity',\n    'vanquish',\n    'vantage',\n    'vaporizer',\n    'variable',\n    'variably',\n    'varied',\n    'variety',\n    'various',\n    'varmint',\n    'varnish',\n    'varsity',\n    'varying',\n    'vascular',\n    'vaseline',\n    'vastly',\n    'vastness',\n    'veal',\n    'vegan',\n    'veggie',\n    'vehicular',\n    'velcro',\n    'velocity',\n    'velvet',\n    'vendetta',\n    'vending',\n    'vendor',\n    'veneering',\n    'vengeful',\n    'venomous',\n    'ventricle',\n    'venture',\n    'venue',\n    'venus',\n    'verbalize',\n    'verbally',\n    'verbose',\n    'verdict',\n    'verify',\n    'verse',\n    'version',\n    'versus',\n    'vertebrae',\n    'vertical',\n    'vertigo',\n    'very',\n    'vessel',\n    'vest',\n    'veteran',\n    'veto',\n    'vexingly',\n    'viability',\n    'viable',\n    'vibes',\n    'vice',\n    'vicinity',\n    'victory',\n    'video',\n    'viewable',\n    'viewer',\n    'viewing',\n    'viewless',\n    'viewpoint',\n    'vigorous',\n    'village',\n    'villain',\n    'vindicate',\n    'vineyard',\n    'vintage',\n    'violate',\n    'violation',\n    'violator',\n    'violet',\n    'violin',\n    'viper',\n    'viral',\n    'virtual',\n    'virtuous',\n    'virus',\n    'visa',\n    'viscosity',\n    'viscous',\n    'viselike',\n    'visible',\n    'visibly',\n    'vision',\n    'visiting',\n    'visitor',\n    'visor',\n    'vista',\n    'vitality',\n    'vitalize',\n    'vitally',\n    'vitamins',\n    'vivacious',\n    'vividly',\n    'vividness',\n    'vixen',\n    'vocalist',\n    'vocalize',\n    'vocally',\n    'vocation',\n    'voice',\n    'voicing',\n    'void',\n    'volatile',\n    'volley',\n    'voltage',\n    'volumes',\n    'voter',\n    'voting',\n    'voucher',\n    'vowed',\n    'vowel',\n    'voyage',\n    'wackiness',\n    'wad',\n    'wafer',\n    'waffle',\n    'waged',\n    'wager',\n    'wages',\n    'waggle',\n    'wagon',\n    'wake',\n    'waking',\n    'walk',\n    'walmart',\n    'walnut',\n    'walrus',\n    'waltz',\n    'wand',\n    'wannabe',\n    'wanted',\n    'wanting',\n    'wasabi',\n    'washable',\n    'washbasin',\n    'washboard',\n    'washbowl',\n    'washcloth',\n    'washday',\n    'washed',\n    'washer',\n    'washhouse',\n    'washing',\n    'washout',\n    'washroom',\n    'washstand',\n    'washtub',\n    'wasp',\n    'wasting',\n    'watch',\n    'water',\n    'waviness',\n    'waving',\n    'wavy',\n    'whacking',\n    'whacky',\n    'wham',\n    'wharf',\n    'wheat',\n    'whenever',\n    'whiff',\n    'whimsical',\n    'whinny',\n    'whiny',\n    'whisking',\n    'whoever',\n    'whole',\n    'whomever',\n    'whoopee',\n    'whooping',\n    'whoops',\n    'why',\n    'wick',\n    'widely',\n    'widen',\n    'widget',\n    'widow',\n    'width',\n    'wieldable',\n    'wielder',\n    'wife',\n    'wifi',\n    'wikipedia',\n    'wildcard',\n    'wildcat',\n    'wilder',\n    'wildfire',\n    'wildfowl',\n    'wildland',\n    'wildlife',\n    'wildly',\n    'wildness',\n    'willed',\n    'willfully',\n    'willing',\n    'willow',\n    'willpower',\n    'wilt',\n    'wimp',\n    'wince',\n    'wincing',\n    'wind',\n    'wing',\n    'winking',\n    'winner',\n    'winnings',\n    'winter',\n    'wipe',\n    'wired',\n    'wireless',\n    'wiring',\n    'wiry',\n    'wisdom',\n    'wise',\n    'wish',\n    'wisplike',\n    'wispy',\n    'wistful',\n    'wizard',\n    'wobble',\n    'wobbling',\n    'wobbly',\n    'wok',\n    'wolf',\n    'wolverine',\n    'womanhood',\n    'womankind',\n    'womanless',\n    'womanlike',\n    'womanly',\n    'womb',\n    'woof',\n    'wooing',\n    'wool',\n    'woozy',\n    'word',\n    'work',\n    'worried',\n    'worrier',\n    'worrisome',\n    'worry',\n    'worsening',\n    'worshiper',\n    'worst',\n    'wound',\n    'woven',\n    'wow',\n    'wrangle',\n    'wrath',\n    'wreath',\n    'wreckage',\n    'wrecker',\n    'wrecking',\n    'wrench',\n    'wriggle',\n    'wriggly',\n    'wrinkle',\n    'wrinkly',\n    'wrist',\n    'writing',\n    'written',\n    'wrongdoer',\n    'wronged',\n    'wrongful',\n    'wrongly',\n    'wrongness',\n    'wrought',\n    'xbox',\n    'xerox',\n    'yahoo',\n    'yam',\n    'yanking',\n    'yapping',\n    'yard',\n    'yarn',\n    'yeah',\n    'yearbook',\n    'yearling',\n    'yearly',\n    'yearning',\n    'yeast',\n    'yelling',\n    'yelp',\n    'yen',\n    'yesterday',\n    'yiddish',\n    'yield',\n    'yin',\n    'yippee',\n    'yo-yo',\n    'yodel',\n    'yoga',\n    'yogurt',\n    'yonder',\n    'yoyo',\n    'yummy',\n    'zap',\n    'zealous',\n    'zebra',\n    'zen',\n    'zeppelin',\n    'zero',\n    'zestfully',\n    'zesty',\n    'zigzagged',\n    'zipfile',\n    'zipping',\n    'zippy',\n    'zips',\n    'zit',\n    'zodiac',\n    'zombie',\n    'zone',\n    'zoning',\n    'zookeeper',\n    'zoologist',\n    'zoology',\n    'zoom',\n];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newSecureWords = void 0;\nconst getSecureRandom_1 = require(\"../primitives/getSecureRandom\");\nconst wordlist_1 = require(\"./wordlist\");\nasync function newSecureWords(size = 6) {\n    let words = [];\n    for (let i = 0; i < size; i++) {\n        words.push(wordlist_1.wordlist[await (0, getSecureRandom_1.getSecureRandomNumber)(0, wordlist_1.wordlist.length)]);\n    }\n    return words;\n}\nexports.newSecureWords = newSecureWords;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newSecurePassphrase = void 0;\nconst __1 = require(\"..\");\nasync function newSecurePassphrase(size = 6) {\n    return (await (0, __1.newSecureWords)(size)).join('-');\n}\nexports.newSecurePassphrase = newSecurePassphrase;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitsToBytes = exports.bytesToBits = exports.lpad = void 0;\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nexports.lpad = lpad;\nfunction bytesToBits(bytes) {\n    let res = '';\n    for (let i = 0; i < bytes.length; i++) {\n        let x = bytes.at(i);\n        res += lpad(x.toString(2), '0', 8);\n    }\n    return res;\n}\nexports.bytesToBits = bytesToBits;\nfunction bitsToBytes(src) {\n    if (src.length % 8 !== 0) {\n        throw Error('Uneven bits');\n    }\n    let res = [];\n    while (src.length > 0) {\n        res.push(parseInt(src.slice(0, 8), 2));\n        src = src.slice(8);\n    }\n    return Buffer.from(res);\n}\nexports.bitsToBytes = bitsToBytes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nconst EN = ['abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse', 'access', 'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act', 'action', 'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit', 'adult', 'advance', 'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'age', 'agent', 'agree', 'ahead', 'aim', 'air', 'airport', 'aisle', 'alarm', 'album', 'alcohol', 'alert', 'alien', 'all', 'alley', 'allow', 'almost', 'alone', 'alpha', 'already', 'also', 'alter', 'always', 'amateur', 'amazing', 'among', 'amount', 'amused', 'analyst', 'anchor', 'ancient', 'anger', 'angle', 'angry', 'animal', 'ankle', 'announce', 'annual', 'another', 'answer', 'antenna', 'antique', 'anxiety', 'any', 'apart', 'apology', 'appear', 'apple', 'approve', 'april', 'arch', 'arctic', 'area', 'arena', 'argue', 'arm', 'armed', 'armor', 'army', 'around', 'arrange', 'arrest', 'arrive', 'arrow', 'art', 'artefact', 'artist', 'artwork', 'ask', 'aspect', 'assault', 'asset', 'assist', 'assume', 'asthma', 'athlete', 'atom', 'attack', 'attend', 'attitude', 'attract', 'auction', 'audit', 'august', 'aunt', 'author', 'auto', 'autumn', 'average', 'avocado', 'avoid', 'awake', 'aware', 'away', 'awesome', 'awful', 'awkward', 'axis',\n    'baby', 'bachelor', 'bacon', 'badge', 'bag', 'balance', 'balcony', 'ball', 'bamboo', 'banana', 'banner', 'bar', 'barely', 'bargain', 'barrel', 'base', 'basic', 'basket', 'battle', 'beach', 'bean', 'beauty', 'because', 'become', 'beef', 'before', 'begin', 'behave', 'behind', 'believe', 'below', 'belt', 'bench', 'benefit', 'best', 'betray', 'better', 'between', 'beyond', 'bicycle', 'bid', 'bike', 'bind', 'biology', 'bird', 'birth', 'bitter', 'black', 'blade', 'blame', 'blanket', 'blast', 'bleak', 'bless', 'blind', 'blood', 'blossom', 'blouse', 'blue', 'blur', 'blush', 'board', 'boat', 'body', 'boil', 'bomb', 'bone', 'bonus', 'book', 'boost', 'border', 'boring', 'borrow', 'boss', 'bottom', 'bounce', 'box', 'boy', 'bracket', 'brain', 'brand', 'brass', 'brave', 'bread', 'breeze', 'brick', 'bridge', 'brief', 'bright', 'bring', 'brisk', 'broccoli', 'broken', 'bronze', 'broom', 'brother', 'brown', 'brush', 'bubble', 'buddy', 'budget', 'buffalo', 'build', 'bulb', 'bulk', 'bullet', 'bundle', 'bunker', 'burden', 'burger', 'burst', 'bus', 'business', 'busy', 'butter', 'buyer', 'buzz',\n    'cabbage', 'cabin', 'cable', 'cactus', 'cage', 'cake', 'call', 'calm', 'camera', 'camp', 'can', 'canal', 'cancel', 'candy', 'cannon', 'canoe', 'canvas', 'canyon', 'capable', 'capital', 'captain', 'car', 'carbon', 'card', 'cargo', 'carpet', 'carry', 'cart', 'case', 'cash', 'casino', 'castle', 'casual', 'cat', 'catalog', 'catch', 'category', 'cattle', 'caught', 'cause', 'caution', 'cave', 'ceiling', 'celery', 'cement', 'census', 'century', 'cereal', 'certain', 'chair', 'chalk', 'champion', 'change', 'chaos', 'chapter', 'charge', 'chase', 'chat', 'cheap', 'check', 'cheese', 'chef', 'cherry', 'chest', 'chicken', 'chief', 'child', 'chimney', 'choice', 'choose', 'chronic', 'chuckle', 'chunk', 'churn', 'cigar', 'cinnamon', 'circle', 'citizen', 'city', 'civil', 'claim', 'clap', 'clarify', 'claw', 'clay', 'clean', 'clerk', 'clever', 'click', 'client', 'cliff', 'climb', 'clinic', 'clip', 'clock', 'clog', 'close', 'cloth', 'cloud', 'clown', 'club', 'clump', 'cluster', 'clutch', 'coach', 'coast', 'coconut', 'code', 'coffee', 'coil', 'coin', 'collect', 'color', 'column', 'combine', 'come', 'comfort', 'comic', 'common', 'company', 'concert', 'conduct', 'confirm', 'congress', 'connect', 'consider', 'control', 'convince', 'cook', 'cool', 'copper', 'copy', 'coral', 'core', 'corn', 'correct', 'cost', 'cotton', 'couch', 'country', 'couple', 'course', 'cousin', 'cover', 'coyote', 'crack', 'cradle', 'craft', 'cram', 'crane', 'crash', 'crater', 'crawl', 'crazy', 'cream', 'credit', 'creek', 'crew', 'cricket', 'crime', 'crisp', 'critic', 'crop', 'cross', 'crouch', 'crowd', 'crucial', 'cruel', 'cruise', 'crumble', 'crunch', 'crush', 'cry', 'crystal', 'cube', 'culture', 'cup', 'cupboard', 'curious', 'current', 'curtain', 'curve', 'cushion', 'custom', 'cute', 'cycle',\n    'dad', 'damage', 'damp', 'dance', 'danger', 'daring', 'dash', 'daughter', 'dawn', 'day', 'deal', 'debate', 'debris', 'decade', 'december', 'decide', 'decline', 'decorate', 'decrease', 'deer', 'defense', 'define', 'defy', 'degree', 'delay', 'deliver', 'demand', 'demise', 'denial', 'dentist', 'deny', 'depart', 'depend', 'deposit', 'depth', 'deputy', 'derive', 'describe', 'desert', 'design', 'desk', 'despair', 'destroy', 'detail', 'detect', 'develop', 'device', 'devote', 'diagram', 'dial', 'diamond', 'diary', 'dice', 'diesel', 'diet', 'differ', 'digital', 'dignity', 'dilemma', 'dinner', 'dinosaur', 'direct', 'dirt', 'disagree', 'discover', 'disease', 'dish', 'dismiss', 'disorder', 'display', 'distance', 'divert', 'divide', 'divorce', 'dizzy', 'doctor', 'document', 'dog', 'doll', 'dolphin', 'domain', 'donate', 'donkey', 'donor', 'door', 'dose', 'double', 'dove', 'draft', 'dragon', 'drama', 'drastic', 'draw', 'dream', 'dress', 'drift', 'drill', 'drink', 'drip', 'drive', 'drop', 'drum', 'dry', 'duck', 'dumb', 'dune', 'during', 'dust', 'dutch', 'duty', 'dwarf', 'dynamic',\n    'eager', 'eagle', 'early', 'earn', 'earth', 'easily', 'east', 'easy', 'echo', 'ecology', 'economy', 'edge', 'edit', 'educate', 'effort', 'egg', 'eight', 'either', 'elbow', 'elder', 'electric', 'elegant', 'element', 'elephant', 'elevator', 'elite', 'else', 'embark', 'embody', 'embrace', 'emerge', 'emotion', 'employ', 'empower', 'empty', 'enable', 'enact', 'end', 'endless', 'endorse', 'enemy', 'energy', 'enforce', 'engage', 'engine', 'enhance', 'enjoy', 'enlist', 'enough', 'enrich', 'enroll', 'ensure', 'enter', 'entire', 'entry', 'envelope', 'episode', 'equal', 'equip', 'era', 'erase', 'erode', 'erosion', 'error', 'erupt', 'escape', 'essay', 'essence', 'estate', 'eternal', 'ethics', 'evidence', 'evil', 'evoke', 'evolve', 'exact', 'example', 'excess', 'exchange', 'excite', 'exclude', 'excuse', 'execute', 'exercise', 'exhaust', 'exhibit', 'exile', 'exist', 'exit', 'exotic', 'expand', 'expect', 'expire', 'explain', 'expose', 'express', 'extend', 'extra', 'eye', 'eyebrow',\n    'fabric', 'face', 'faculty', 'fade', 'faint', 'faith', 'fall', 'false', 'fame', 'family', 'famous', 'fan', 'fancy', 'fantasy', 'farm', 'fashion', 'fat', 'fatal', 'father', 'fatigue', 'fault', 'favorite', 'feature', 'february', 'federal', 'fee', 'feed', 'feel', 'female', 'fence', 'festival', 'fetch', 'fever', 'few', 'fiber', 'fiction', 'field', 'figure', 'file', 'film', 'filter', 'final', 'find', 'fine', 'finger', 'finish', 'fire', 'firm', 'first', 'fiscal', 'fish', 'fit', 'fitness', 'fix', 'flag', 'flame', 'flash', 'flat', 'flavor', 'flee', 'flight', 'flip', 'float', 'flock', 'floor', 'flower', 'fluid', 'flush', 'fly', 'foam', 'focus', 'fog', 'foil', 'fold', 'follow', 'food', 'foot', 'force', 'forest', 'forget', 'fork', 'fortune', 'forum', 'forward', 'fossil', 'foster', 'found', 'fox', 'fragile', 'frame', 'frequent', 'fresh', 'friend', 'fringe', 'frog', 'front', 'frost', 'frown', 'frozen', 'fruit', 'fuel', 'fun', 'funny', 'furnace', 'fury', 'future',\n    'gadget', 'gain', 'galaxy', 'gallery', 'game', 'gap', 'garage', 'garbage', 'garden', 'garlic', 'garment', 'gas', 'gasp', 'gate', 'gather', 'gauge', 'gaze', 'general', 'genius', 'genre', 'gentle', 'genuine', 'gesture', 'ghost', 'giant', 'gift', 'giggle', 'ginger', 'giraffe', 'girl', 'give', 'glad', 'glance', 'glare', 'glass', 'glide', 'glimpse', 'globe', 'gloom', 'glory', 'glove', 'glow', 'glue', 'goat', 'goddess', 'gold', 'good', 'goose', 'gorilla', 'gospel', 'gossip', 'govern', 'gown', 'grab', 'grace', 'grain', 'grant', 'grape', 'grass', 'gravity', 'great', 'green', 'grid', 'grief', 'grit', 'grocery', 'group', 'grow', 'grunt', 'guard', 'guess', 'guide', 'guilt', 'guitar', 'gun', 'gym',\n    'habit', 'hair', 'half', 'hammer', 'hamster', 'hand', 'happy', 'harbor', 'hard', 'harsh', 'harvest', 'hat', 'have', 'hawk', 'hazard', 'head', 'health', 'heart', 'heavy', 'hedgehog', 'height', 'hello', 'helmet', 'help', 'hen', 'hero', 'hidden', 'high', 'hill', 'hint', 'hip', 'hire', 'history', 'hobby', 'hockey', 'hold', 'hole', 'holiday', 'hollow', 'home', 'honey', 'hood', 'hope', 'horn', 'horror', 'horse', 'hospital', 'host', 'hotel', 'hour', 'hover', 'hub', 'huge', 'human', 'humble', 'humor', 'hundred', 'hungry', 'hunt', 'hurdle', 'hurry', 'hurt', 'husband', 'hybrid',\n    'ice', 'icon', 'idea', 'identify', 'idle', 'ignore', 'ill', 'illegal', 'illness', 'image', 'imitate', 'immense', 'immune', 'impact', 'impose', 'improve', 'impulse', 'inch', 'include', 'income', 'increase', 'index', 'indicate', 'indoor', 'industry', 'infant', 'inflict', 'inform', 'inhale', 'inherit', 'initial', 'inject', 'injury', 'inmate', 'inner', 'innocent', 'input', 'inquiry', 'insane', 'insect', 'inside', 'inspire', 'install', 'intact', 'interest', 'into', 'invest', 'invite', 'involve', 'iron', 'island', 'isolate', 'issue', 'item', 'ivory',\n    'jacket', 'jaguar', 'jar', 'jazz', 'jealous', 'jeans', 'jelly', 'jewel', 'job', 'join', 'joke', 'journey', 'joy', 'judge', 'juice', 'jump', 'jungle', 'junior', 'junk', 'just',\n    'kangaroo', 'keen', 'keep', 'ketchup', 'key', 'kick', 'kid', 'kidney', 'kind', 'kingdom', 'kiss', 'kit', 'kitchen', 'kite', 'kitten', 'kiwi', 'knee', 'knife', 'knock', 'know',\n    'lab', 'label', 'labor', 'ladder', 'lady', 'lake', 'lamp', 'language', 'laptop', 'large', 'later', 'latin', 'laugh', 'laundry', 'lava', 'law', 'lawn', 'lawsuit', 'layer', 'lazy', 'leader', 'leaf', 'learn', 'leave', 'lecture', 'left', 'leg', 'legal', 'legend', 'leisure', 'lemon', 'lend', 'length', 'lens', 'leopard', 'lesson', 'letter', 'level', 'liar', 'liberty', 'library', 'license', 'life', 'lift', 'light', 'like', 'limb', 'limit', 'link', 'lion', 'liquid', 'list', 'little', 'live', 'lizard', 'load', 'loan', 'lobster', 'local', 'lock', 'logic', 'lonely', 'long', 'loop', 'lottery', 'loud', 'lounge', 'love', 'loyal', 'lucky', 'luggage', 'lumber', 'lunar', 'lunch', 'luxury', 'lyrics',\n    'machine', 'mad', 'magic', 'magnet', 'maid', 'mail', 'main', 'major', 'make', 'mammal', 'man', 'manage', 'mandate', 'mango', 'mansion', 'manual', 'maple', 'marble', 'march', 'margin', 'marine', 'market', 'marriage', 'mask', 'mass', 'master', 'match', 'material', 'math', 'matrix', 'matter', 'maximum', 'maze', 'meadow', 'mean', 'measure', 'meat', 'mechanic', 'medal', 'media', 'melody', 'melt', 'member', 'memory', 'mention', 'menu', 'mercy', 'merge', 'merit', 'merry', 'mesh', 'message', 'metal', 'method', 'middle', 'midnight', 'milk', 'million', 'mimic', 'mind', 'minimum', 'minor', 'minute', 'miracle', 'mirror', 'misery', 'miss', 'mistake', 'mix', 'mixed', 'mixture', 'mobile', 'model', 'modify', 'mom', 'moment', 'monitor', 'monkey', 'monster', 'month', 'moon', 'moral', 'more', 'morning', 'mosquito', 'mother', 'motion', 'motor', 'mountain', 'mouse', 'move', 'movie', 'much', 'muffin', 'mule', 'multiply', 'muscle', 'museum', 'mushroom', 'music', 'must', 'mutual', 'myself', 'mystery', 'myth',\n    'naive', 'name', 'napkin', 'narrow', 'nasty', 'nation', 'nature', 'near', 'neck', 'need', 'negative', 'neglect', 'neither', 'nephew', 'nerve', 'nest', 'net', 'network', 'neutral', 'never', 'news', 'next', 'nice', 'night', 'noble', 'noise', 'nominee', 'noodle', 'normal', 'north', 'nose', 'notable', 'note', 'nothing', 'notice', 'novel', 'now', 'nuclear', 'number', 'nurse', 'nut',\n    'oak', 'obey', 'object', 'oblige', 'obscure', 'observe', 'obtain', 'obvious', 'occur', 'ocean', 'october', 'odor', 'off', 'offer', 'office', 'often', 'oil', 'okay', 'old', 'olive', 'olympic', 'omit', 'once', 'one', 'onion', 'online', 'only', 'open', 'opera', 'opinion', 'oppose', 'option', 'orange', 'orbit', 'orchard', 'order', 'ordinary', 'organ', 'orient', 'original', 'orphan', 'ostrich', 'other', 'outdoor', 'outer', 'output', 'outside', 'oval', 'oven', 'over', 'own', 'owner', 'oxygen', 'oyster', 'ozone',\n    'pact', 'paddle', 'page', 'pair', 'palace', 'palm', 'panda', 'panel', 'panic', 'panther', 'paper', 'parade', 'parent', 'park', 'parrot', 'party', 'pass', 'patch', 'path', 'patient', 'patrol', 'pattern', 'pause', 'pave', 'payment', 'peace', 'peanut', 'pear', 'peasant', 'pelican', 'pen', 'penalty', 'pencil', 'people', 'pepper', 'perfect', 'permit', 'person', 'pet', 'phone', 'photo', 'phrase', 'physical', 'piano', 'picnic', 'picture', 'piece', 'pig', 'pigeon', 'pill', 'pilot', 'pink', 'pioneer', 'pipe', 'pistol', 'pitch', 'pizza', 'place', 'planet', 'plastic', 'plate', 'play', 'please', 'pledge', 'pluck', 'plug', 'plunge', 'poem', 'poet', 'point', 'polar', 'pole', 'police', 'pond', 'pony', 'pool', 'popular', 'portion', 'position', 'possible', 'post', 'potato', 'pottery', 'poverty', 'powder', 'power', 'practice', 'praise', 'predict', 'prefer', 'prepare', 'present', 'pretty', 'prevent', 'price', 'pride', 'primary', 'print', 'priority', 'prison', 'private', 'prize', 'problem', 'process', 'produce', 'profit', 'program', 'project', 'promote', 'proof', 'property', 'prosper', 'protect', 'proud', 'provide', 'public', 'pudding', 'pull', 'pulp', 'pulse', 'pumpkin', 'punch', 'pupil', 'puppy', 'purchase', 'purity', 'purpose', 'purse', 'push', 'put', 'puzzle', 'pyramid',\n    'quality', 'quantum', 'quarter', 'question', 'quick', 'quit', 'quiz', 'quote',\n    'rabbit', 'raccoon', 'race', 'rack', 'radar', 'radio', 'rail', 'rain', 'raise', 'rally', 'ramp', 'ranch', 'random', 'range', 'rapid', 'rare', 'rate', 'rather', 'raven', 'raw', 'razor', 'ready', 'real', 'reason', 'rebel', 'rebuild', 'recall', 'receive', 'recipe', 'record', 'recycle', 'reduce', 'reflect', 'reform', 'refuse', 'region', 'regret', 'regular', 'reject', 'relax', 'release', 'relief', 'rely', 'remain', 'remember', 'remind', 'remove', 'render', 'renew', 'rent', 'reopen', 'repair', 'repeat', 'replace', 'report', 'require', 'rescue', 'resemble', 'resist', 'resource', 'response', 'result', 'retire', 'retreat', 'return', 'reunion', 'reveal', 'review', 'reward', 'rhythm', 'rib', 'ribbon', 'rice', 'rich', 'ride', 'ridge', 'rifle', 'right', 'rigid', 'ring', 'riot', 'ripple', 'risk', 'ritual', 'rival', 'river', 'road', 'roast', 'robot', 'robust', 'rocket', 'romance', 'roof', 'rookie', 'room', 'rose', 'rotate', 'rough', 'round', 'route', 'royal', 'rubber', 'rude', 'rug', 'rule', 'run', 'runway', 'rural',\n    'sad', 'saddle', 'sadness', 'safe', 'sail', 'salad', 'salmon', 'salon', 'salt', 'salute', 'same', 'sample', 'sand', 'satisfy', 'satoshi', 'sauce', 'sausage', 'save', 'say', 'scale', 'scan', 'scare', 'scatter', 'scene', 'scheme', 'school', 'science', 'scissors', 'scorpion', 'scout', 'scrap', 'screen', 'script', 'scrub', 'sea', 'search', 'season', 'seat', 'second', 'secret', 'section', 'security', 'seed', 'seek', 'segment', 'select', 'sell', 'seminar', 'senior', 'sense', 'sentence', 'series', 'service', 'session', 'settle', 'setup', 'seven', 'shadow', 'shaft', 'shallow', 'share', 'shed', 'shell', 'sheriff', 'shield', 'shift', 'shine', 'ship', 'shiver', 'shock', 'shoe', 'shoot', 'shop', 'short', 'shoulder', 'shove', 'shrimp', 'shrug', 'shuffle', 'shy', 'sibling', 'sick', 'side', 'siege', 'sight', 'sign', 'silent', 'silk', 'silly', 'silver', 'similar', 'simple', 'since', 'sing', 'siren', 'sister', 'situate', 'six', 'size', 'skate', 'sketch', 'ski', 'skill', 'skin', 'skirt', 'skull', 'slab', 'slam', 'sleep', 'slender', 'slice', 'slide', 'slight', 'slim', 'slogan', 'slot', 'slow', 'slush', 'small', 'smart', 'smile', 'smoke', 'smooth', 'snack', 'snake', 'snap', 'sniff', 'snow', 'soap', 'soccer', 'social', 'sock', 'soda', 'soft', 'solar', 'soldier', 'solid', 'solution', 'solve', 'someone', 'song', 'soon', 'sorry', 'sort', 'soul', 'sound', 'soup', 'source', 'south', 'space', 'spare', 'spatial', 'spawn', 'speak', 'special', 'speed', 'spell', 'spend', 'sphere', 'spice', 'spider', 'spike', 'spin', 'spirit', 'split', 'spoil', 'sponsor', 'spoon', 'sport', 'spot', 'spray', 'spread', 'spring', 'spy', 'square', 'squeeze', 'squirrel', 'stable', 'stadium', 'staff', 'stage', 'stairs', 'stamp', 'stand', 'start', 'state', 'stay', 'steak', 'steel', 'stem', 'step', 'stereo', 'stick', 'still', 'sting', 'stock', 'stomach', 'stone', 'stool', 'story', 'stove', 'strategy', 'street', 'strike', 'strong', 'struggle', 'student', 'stuff', 'stumble', 'style', 'subject', 'submit', 'subway', 'success', 'such', 'sudden', 'suffer', 'sugar', 'suggest', 'suit', 'summer', 'sun', 'sunny', 'sunset', 'super', 'supply', 'supreme', 'sure', 'surface', 'surge', 'surprise', 'surround', 'survey', 'suspect', 'sustain', 'swallow', 'swamp', 'swap', 'swarm', 'swear', 'sweet', 'swift', 'swim', 'swing', 'switch', 'sword', 'symbol', 'symptom', 'syrup', 'system',\n    'table', 'tackle', 'tag', 'tail', 'talent', 'talk', 'tank', 'tape', 'target', 'task', 'taste', 'tattoo', 'taxi', 'teach', 'team', 'tell', 'ten', 'tenant', 'tennis', 'tent', 'term', 'test', 'text', 'thank', 'that', 'theme', 'then', 'theory', 'there', 'they', 'thing', 'this', 'thought', 'three', 'thrive', 'throw', 'thumb', 'thunder', 'ticket', 'tide', 'tiger', 'tilt', 'timber', 'time', 'tiny', 'tip', 'tired', 'tissue', 'title', 'toast', 'tobacco', 'today', 'toddler', 'toe', 'together', 'toilet', 'token', 'tomato', 'tomorrow', 'tone', 'tongue', 'tonight', 'tool', 'tooth', 'top', 'topic', 'topple', 'torch', 'tornado', 'tortoise', 'toss', 'total', 'tourist', 'toward', 'tower', 'town', 'toy', 'track', 'trade', 'traffic', 'tragic', 'train', 'transfer', 'trap', 'trash', 'travel', 'tray', 'treat', 'tree', 'trend', 'trial', 'tribe', 'trick', 'trigger', 'trim', 'trip', 'trophy', 'trouble', 'truck', 'true', 'truly', 'trumpet', 'trust', 'truth', 'try', 'tube', 'tuition', 'tumble', 'tuna', 'tunnel', 'turkey', 'turn', 'turtle', 'twelve', 'twenty', 'twice', 'twin', 'twist', 'two', 'type', 'typical',\n    'ugly', 'umbrella', 'unable', 'unaware', 'uncle', 'uncover', 'under', 'undo', 'unfair', 'unfold', 'unhappy', 'uniform', 'unique', 'unit', 'universe', 'unknown', 'unlock', 'until', 'unusual', 'unveil', 'update', 'upgrade', 'uphold', 'upon', 'upper', 'upset', 'urban', 'urge', 'usage', 'use', 'used', 'useful', 'useless', 'usual', 'utility',\n    'vacant', 'vacuum', 'vague', 'valid', 'valley', 'valve', 'van', 'vanish', 'vapor', 'various', 'vast', 'vault', 'vehicle', 'velvet', 'vendor', 'venture', 'venue', 'verb', 'verify', 'version', 'very', 'vessel', 'veteran', 'viable', 'vibrant', 'vicious', 'victory', 'video', 'view', 'village', 'vintage', 'violin', 'virtual', 'virus', 'visa', 'visit', 'visual', 'vital', 'vivid', 'vocal', 'voice', 'void', 'volcano', 'volume', 'vote', 'voyage',\n    'wage', 'wagon', 'wait', 'walk', 'wall', 'walnut', 'want', 'warfare', 'warm', 'warrior', 'wash', 'wasp', 'waste', 'water', 'wave', 'way', 'wealth', 'weapon', 'wear', 'weasel', 'weather', 'web', 'wedding', 'weekend', 'weird', 'welcome', 'west', 'wet', 'whale', 'what', 'wheat', 'wheel', 'when', 'where', 'whip', 'whisper', 'wide', 'width', 'wife', 'wild', 'will', 'win', 'window', 'wine', 'wing', 'wink', 'winner', 'winter', 'wire', 'wisdom', 'wise', 'wish', 'witness', 'wolf', 'woman', 'wonder', 'wood', 'wool', 'word', 'work', 'world', 'worry', 'worth', 'wrap', 'wreck', 'wrestle', 'wrist', 'write', 'wrong',\n    'yard', 'year', 'yellow', 'you', 'young', 'youth',\n    'zebra', 'zero', 'zone', 'zoo'];\nexports.wordlist = EN;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicFromRandomSeed = exports.mnemonicIndexesToBytes = exports.bytesToMnemonics = exports.bytesToMnemonicIndexes = exports.mnemonicNew = exports.mnemonicValidate = exports.mnemonicToHDSeed = exports.mnemonicToWalletKey = exports.mnemonicToPrivateKey = exports.mnemonicToSeed = exports.mnemonicToEntropy = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst getSecureRandom_1 = require(\"../primitives/getSecureRandom\");\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst pbkdf2_sha512_1 = require(\"../primitives/pbkdf2_sha512\");\nconst binary_1 = require(\"../utils/binary\");\nconst wordlist_1 = require(\"./wordlist\");\nconst PBKDF_ITERATIONS = 100000;\nasync function isPasswordNeeded(mnemonicArray) {\n    const passlessEntropy = await mnemonicToEntropy(mnemonicArray);\n    return (await isPasswordSeed(passlessEntropy)) && !(await isBasicSeed(passlessEntropy));\n}\nfunction normalizeMnemonic(src) {\n    return src.map((v) => v.toLowerCase().trim());\n}\nasync function isBasicSeed(entropy) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L68\n    // bool Mnemonic::is_basic_seed() {\n    //   td::SecureString hash(64);\n    //   td::pbkdf2_sha512(as_slice(to_entropy()), \"TON seed version\", td::max(1, PBKDF_ITERATIONS / 256),\n    //                     hash.as_mutable_slice());\n    //   return hash.as_slice()[0] == 0;\n    // }\n    const seed = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, 'TON seed version', Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), 64);\n    return seed[0] == 0;\n}\nasync function isPasswordSeed(entropy) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L75\n    // bool Mnemonic::is_password_seed() {\n    //   td::SecureString hash(64);\n    //   td::pbkdf2_sha512(as_slice(to_entropy()), \"TON fast seed version\", 1, hash.as_mutable_slice());\n    //   return hash.as_slice()[0] == 1;\n    // }\n    const seed = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, 'TON fast seed version', 1, 64);\n    return seed[0] == 1;\n}\nasync function mnemonicToEntropy(mnemonicArray, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L52\n    // td::SecureString Mnemonic::to_entropy() const {\n    //   td::SecureString res(64);\n    //   td::hmac_sha512(join(words_), password_, res.as_mutable_slice());\n    //   return res;\n    // }\n    return await (0, hmac_sha512_1.hmac_sha512)(mnemonicArray.join(' '), password && password.length > 0 ? password : '');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nasync function mnemonicToSeed(mnemonicArray, seed, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L58\n    // td::SecureString Mnemonic::to_seed() const {\n    //   td::SecureString hash(64);\n    //   td::pbkdf2_sha512(as_slice(to_entropy()), \"TON default seed\", PBKDF_ITERATIONS, hash.as_mutable_slice());\n    //   return hash;\n    // }\n    const entropy = await mnemonicToEntropy(mnemonicArray, password);\n    return await (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, seed, PBKDF_ITERATIONS, 64);\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Extract private key from mnemonic\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns Key Pair\n */\nasync function mnemonicToPrivateKey(mnemonicArray, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L64\n    // td::Ed25519::PrivateKey Mnemonic::to_private_key() const {\n    //   return td::Ed25519::PrivateKey(td::SecureString(as_slice(to_seed()).substr(0, td::Ed25519::PrivateKey::LENGTH)));\n    // }\n    mnemonicArray = normalizeMnemonic(mnemonicArray);\n    const seed = (await mnemonicToSeed(mnemonicArray, 'TON default seed', password));\n    let keyPair = tweetnacl_1.default.sign.keyPair.fromSeed(seed.slice(0, 32));\n    return {\n        publicKey: Buffer.from(keyPair.publicKey),\n        secretKey: Buffer.from(keyPair.secretKey)\n    };\n}\nexports.mnemonicToPrivateKey = mnemonicToPrivateKey;\n/**\n * Convert mnemonic to wallet key pair\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns Key Pair\n */\nasync function mnemonicToWalletKey(mnemonicArray, password) {\n    let seedPk = await mnemonicToPrivateKey(mnemonicArray, password);\n    let seedSecret = seedPk.secretKey.slice(0, 32);\n    const keyPair = tweetnacl_1.default.sign.keyPair.fromSeed(seedSecret);\n    return {\n        publicKey: Buffer.from(keyPair.publicKey),\n        secretKey: Buffer.from(keyPair.secretKey)\n    };\n}\nexports.mnemonicToWalletKey = mnemonicToWalletKey;\n/**\n * Convert mnemonics to HD seed\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns 64 byte seed\n */\nasync function mnemonicToHDSeed(mnemonicArray, password) {\n    mnemonicArray = normalizeMnemonic(mnemonicArray);\n    return (await mnemonicToSeed(mnemonicArray, 'TON HD Keys seed', password));\n}\nexports.mnemonicToHDSeed = mnemonicToHDSeed;\n/**\n * Validate Mnemonic\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns true for valid mnemonic\n */\nasync function mnemonicValidate(mnemonicArray, password) {\n    // Normalize\n    mnemonicArray = normalizeMnemonic(mnemonicArray);\n    // Validate mnemonic words\n    for (let word of mnemonicArray) {\n        if (wordlist_1.wordlist.indexOf(word) < 0) {\n            return false;\n        }\n    }\n    // Check password\n    if (password && password.length > 0) {\n        if (!await isPasswordNeeded(mnemonicArray)) {\n            return false;\n        }\n    }\n    // Validate seed\n    return await isBasicSeed(await mnemonicToEntropy(mnemonicArray, password));\n}\nexports.mnemonicValidate = mnemonicValidate;\n/**\n * Generate new Mnemonic\n * @param wordsCount number of words to generate\n * @param password mnemonic password\n * @returns\n */\nasync function mnemonicNew(wordsCount = 24, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L159\n    let mnemonicArray = [];\n    while (true) {\n        // Regenerate new mnemonics\n        mnemonicArray = [];\n        for (let i = 0; i < wordsCount; i++) {\n            let ind = await (0, getSecureRandom_1.getSecureRandomNumber)(0, wordlist_1.wordlist.length);\n            mnemonicArray.push(wordlist_1.wordlist[ind]);\n        }\n        // Chek password conformance\n        if (password && password.length > 0) {\n            if (!await isPasswordNeeded(mnemonicArray)) {\n                continue;\n            }\n        }\n        // Check if basic seed correct\n        if (!(await isBasicSeed(await mnemonicToEntropy(mnemonicArray, password)))) {\n            continue;\n        }\n        break;\n    }\n    return mnemonicArray;\n}\nexports.mnemonicNew = mnemonicNew;\n/**\n * Converts bytes to mnemonics array (could be invalid for TON)\n * @param src source buffer\n * @param wordsCount number of words\n */\nfunction bytesToMnemonicIndexes(src, wordsCount) {\n    let bits = (0, binary_1.bytesToBits)(src);\n    let indexes = [];\n    for (let i = 0; i < wordsCount; i++) {\n        let sl = bits.slice(i * 11, i * 11 + 11);\n        indexes.push(parseInt(sl, 2));\n    }\n    return indexes;\n}\nexports.bytesToMnemonicIndexes = bytesToMnemonicIndexes;\nfunction bytesToMnemonics(src, wordsCount) {\n    let mnemonics = bytesToMnemonicIndexes(src, wordsCount);\n    let res = [];\n    for (let m of mnemonics) {\n        res.push(wordlist_1.wordlist[m]);\n    }\n    return res;\n}\nexports.bytesToMnemonics = bytesToMnemonics;\n/**\n * Converts mnemonics indexes to buffer with zero padding in the end\n * @param src source indexes\n * @returns Buffer\n */\nfunction mnemonicIndexesToBytes(src) {\n    let res = '';\n    for (let s of src) {\n        if (!Number.isSafeInteger(s)) {\n            throw Error('Invalid input');\n        }\n        if (s < 0 || s >= 2028) {\n            throw Error('Invalid input');\n        }\n        res += (0, binary_1.lpad)(s.toString(2), '0', 11);\n    }\n    while (res.length % 8 !== 0) {\n        res = res + '0';\n    }\n    return (0, binary_1.bitsToBytes)(res);\n}\nexports.mnemonicIndexesToBytes = mnemonicIndexesToBytes;\n/**\n * Generates deterministically mnemonics\n * @param seed\n * @param wordsCount\n * @param password\n */\nasync function mnemonicFromRandomSeed(seed, wordsCount = 24, password) {\n    const bytesLength = Math.ceil(wordsCount * 11 / 8);\n    let currentSeed = seed;\n    while (true) {\n        // Create entropy\n        let entropy = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(currentSeed, 'TON mnemonic seed', Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), bytesLength);\n        // Create mnemonics\n        let mnemonics = bytesToMnemonics(entropy, wordsCount);\n        // Check if mnemonics are valid\n        if (await mnemonicValidate(mnemonics, password)) {\n            return mnemonics;\n        }\n        currentSeed = entropy;\n    }\n}\nexports.mnemonicFromRandomSeed = mnemonicFromRandomSeed;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openBox = exports.sealBox = exports.signVerify = exports.sign = exports.keyPairFromSeed = exports.keyPairFromSecretKey = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nfunction keyPairFromSecretKey(secretKey) {\n    let res = tweetnacl_1.default.sign.keyPair.fromSecretKey(new Uint8Array(secretKey));\n    return {\n        publicKey: Buffer.from(res.publicKey),\n        secretKey: Buffer.from(res.secretKey),\n    };\n}\nexports.keyPairFromSecretKey = keyPairFromSecretKey;\nfunction keyPairFromSeed(secretKey) {\n    let res = tweetnacl_1.default.sign.keyPair.fromSeed(new Uint8Array(secretKey));\n    return {\n        publicKey: Buffer.from(res.publicKey),\n        secretKey: Buffer.from(res.secretKey),\n    };\n}\nexports.keyPairFromSeed = keyPairFromSeed;\nfunction sign(data, secretKey) {\n    return Buffer.from(tweetnacl_1.default.sign.detached(new Uint8Array(data), new Uint8Array(secretKey)));\n}\nexports.sign = sign;\nfunction signVerify(data, signature, publicKey) {\n    return tweetnacl_1.default.sign.detached.verify(new Uint8Array(data), new Uint8Array(signature), new Uint8Array(publicKey));\n}\nexports.signVerify = signVerify;\nfunction sealBox(data, nonce, key) {\n    return Buffer.from(tweetnacl_1.default.secretbox(data, nonce, key));\n}\nexports.sealBox = sealBox;\nfunction openBox(data, nonce, key) {\n    let res = tweetnacl_1.default.secretbox.open(data, nonce, key);\n    if (!res) {\n        return null;\n    }\n    return Buffer.from(res);\n}\nexports.openBox = openBox;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveEd25519Path = exports.deriveED25519HardenedKey = exports.getED25519MasterKeyFromSeed = void 0;\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst ED25519_CURVE = 'ed25519 seed';\nconst HARDENED_OFFSET = 0x80000000;\nasync function getED25519MasterKeyFromSeed(seed) {\n    const I = await (0, hmac_sha512_1.hmac_sha512)(ED25519_CURVE, seed);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.getED25519MasterKeyFromSeed = getED25519MasterKeyFromSeed;\n;\nasync function deriveED25519HardenedKey(parent, index) {\n    if (index >= HARDENED_OFFSET) {\n        throw Error('Key index must be less than offset');\n    }\n    // Key Derive Path: 0x00 + parent.key + index;\n    const indexBuffer = Buffer.alloc(4);\n    indexBuffer.writeUInt32BE(index + HARDENED_OFFSET, 0);\n    const data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]);\n    // Derive key\n    const I = await (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.deriveED25519HardenedKey = deriveED25519HardenedKey;\n;\nasync function deriveEd25519Path(seed, path) {\n    let state = await getED25519MasterKeyFromSeed(seed);\n    let remaining = [...path];\n    while (remaining.length > 0) {\n        let index = remaining[0];\n        remaining = remaining.slice(1);\n        state = await deriveED25519HardenedKey(state, index);\n    }\n    return state.key;\n}\nexports.deriveEd25519Path = deriveEd25519Path;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveSymmetricPath = exports.deriveSymmetricHardenedKey = exports.getSymmetricMasterKeyFromSeed = void 0;\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst SYMMETRIC_SEED = 'Symmetric key seed';\nasync function getSymmetricMasterKeyFromSeed(seed) {\n    const I = await (0, hmac_sha512_1.hmac_sha512)(SYMMETRIC_SEED, seed);\n    const IL = I.slice(32);\n    const IR = I.slice(0, 32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.getSymmetricMasterKeyFromSeed = getSymmetricMasterKeyFromSeed;\n;\nasync function deriveSymmetricHardenedKey(parent, offset) {\n    // Prepare data\n    const data = Buffer.concat([Buffer.alloc(1, 0), Buffer.from(offset)]);\n    // Derive key\n    const I = await (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);\n    const IL = I.slice(32);\n    const IR = I.slice(0, 32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.deriveSymmetricHardenedKey = deriveSymmetricHardenedKey;\nasync function deriveSymmetricPath(seed, path) {\n    let state = await getSymmetricMasterKeyFromSeed(seed);\n    let remaining = [...path];\n    while (remaining.length > 0) {\n        let index = remaining[0];\n        remaining = remaining.slice(1);\n        state = await deriveSymmetricHardenedKey(state, index);\n    }\n    return state.key;\n}\nexports.deriveSymmetricPath = deriveSymmetricPath;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveMnemonicsPath = exports.deriveMnemonicHardenedKey = exports.getMnemonicsMasterKeyFromSeed = void 0;\nconst mnemonic_1 = require(\"../mnemonic/mnemonic\");\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst HARDENED_OFFSET = 0x80000000;\nconst MNEMONICS_SEED = 'TON Mnemonics HD seed';\nasync function getMnemonicsMasterKeyFromSeed(seed) {\n    const I = await (0, hmac_sha512_1.hmac_sha512)(MNEMONICS_SEED, seed);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.getMnemonicsMasterKeyFromSeed = getMnemonicsMasterKeyFromSeed;\n;\nasync function deriveMnemonicHardenedKey(parent, index) {\n    if (index >= HARDENED_OFFSET) {\n        throw Error('Key index must be less than offset');\n    }\n    // Key Derive Path: 0x00 + parent.key + index;\n    const indexBuffer = Buffer.alloc(4);\n    indexBuffer.writeUInt32BE(index + HARDENED_OFFSET, 0);\n    const data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]);\n    // Derive key\n    const I = await (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.deriveMnemonicHardenedKey = deriveMnemonicHardenedKey;\nasync function deriveMnemonicsPath(seed, path, wordsCount = 24, password) {\n    let state = await getMnemonicsMasterKeyFromSeed(seed);\n    let remaining = [...path];\n    while (remaining.length > 0) {\n        let index = remaining[0];\n        remaining = remaining.slice(1);\n        state = await deriveMnemonicHardenedKey(state, index);\n    }\n    return await (0, mnemonic_1.mnemonicFromRandomSeed)(state.key, wordsCount, password);\n}\nexports.deriveMnemonicsPath = deriveMnemonicsPath;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMnemonicsMasterKeyFromSeed = exports.deriveMnemonicHardenedKey = exports.deriveMnemonicsPath = exports.deriveSymmetricPath = exports.deriveSymmetricHardenedKey = exports.getSymmetricMasterKeyFromSeed = exports.deriveEd25519Path = exports.deriveED25519HardenedKey = exports.getED25519MasterKeyFromSeed = exports.signVerify = exports.sign = exports.keyPairFromSecretKey = exports.keyPairFromSeed = exports.openBox = exports.sealBox = exports.mnemonicWordList = exports.mnemonicToHDSeed = exports.mnemonicToSeed = exports.mnemonicToWalletKey = exports.mnemonicToPrivateKey = exports.mnemonicValidate = exports.mnemonicNew = exports.newSecurePassphrase = exports.newSecureWords = exports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = exports.hmac_sha512 = exports.pbkdf2_sha512 = exports.sha512_sync = exports.sha512 = exports.sha256_sync = exports.sha256 = void 0;\nvar sha256_1 = require(\"./primitives/sha256\");\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha256_1.sha256; } });\nObject.defineProperty(exports, \"sha256_sync\", { enumerable: true, get: function () { return sha256_1.sha256_sync; } });\nvar sha512_1 = require(\"./primitives/sha512\");\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha512_1.sha512; } });\nObject.defineProperty(exports, \"sha512_sync\", { enumerable: true, get: function () { return sha512_1.sha512_sync; } });\nvar pbkdf2_sha512_1 = require(\"./primitives/pbkdf2_sha512\");\nObject.defineProperty(exports, \"pbkdf2_sha512\", { enumerable: true, get: function () { return pbkdf2_sha512_1.pbkdf2_sha512; } });\nvar hmac_sha512_1 = require(\"./primitives/hmac_sha512\");\nObject.defineProperty(exports, \"hmac_sha512\", { enumerable: true, get: function () { return hmac_sha512_1.hmac_sha512; } });\nvar getSecureRandom_1 = require(\"./primitives/getSecureRandom\");\nObject.defineProperty(exports, \"getSecureRandomBytes\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomBytes; } });\nObject.defineProperty(exports, \"getSecureRandomWords\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomWords; } });\nObject.defineProperty(exports, \"getSecureRandomNumber\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomNumber; } });\nvar newSecureWords_1 = require(\"./passwords/newSecureWords\");\nObject.defineProperty(exports, \"newSecureWords\", { enumerable: true, get: function () { return newSecureWords_1.newSecureWords; } });\nvar newSecurePassphrase_1 = require(\"./passwords/newSecurePassphrase\");\nObject.defineProperty(exports, \"newSecurePassphrase\", { enumerable: true, get: function () { return newSecurePassphrase_1.newSecurePassphrase; } });\nvar mnemonic_1 = require(\"./mnemonic/mnemonic\");\nObject.defineProperty(exports, \"mnemonicNew\", { enumerable: true, get: function () { return mnemonic_1.mnemonicNew; } });\nObject.defineProperty(exports, \"mnemonicValidate\", { enumerable: true, get: function () { return mnemonic_1.mnemonicValidate; } });\nObject.defineProperty(exports, \"mnemonicToPrivateKey\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToPrivateKey; } });\nObject.defineProperty(exports, \"mnemonicToWalletKey\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToWalletKey; } });\nObject.defineProperty(exports, \"mnemonicToSeed\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToSeed; } });\nObject.defineProperty(exports, \"mnemonicToHDSeed\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToHDSeed; } });\nvar wordlist_1 = require(\"./mnemonic/wordlist\");\nObject.defineProperty(exports, \"mnemonicWordList\", { enumerable: true, get: function () { return wordlist_1.wordlist; } });\nvar nacl_1 = require(\"./primitives/nacl\");\nObject.defineProperty(exports, \"sealBox\", { enumerable: true, get: function () { return nacl_1.sealBox; } });\nObject.defineProperty(exports, \"openBox\", { enumerable: true, get: function () { return nacl_1.openBox; } });\nvar nacl_2 = require(\"./primitives/nacl\");\nObject.defineProperty(exports, \"keyPairFromSeed\", { enumerable: true, get: function () { return nacl_2.keyPairFromSeed; } });\nObject.defineProperty(exports, \"keyPairFromSecretKey\", { enumerable: true, get: function () { return nacl_2.keyPairFromSecretKey; } });\nObject.defineProperty(exports, \"sign\", { enumerable: true, get: function () { return nacl_2.sign; } });\nObject.defineProperty(exports, \"signVerify\", { enumerable: true, get: function () { return nacl_2.signVerify; } });\nvar ed25519_1 = require(\"./hd/ed25519\");\nObject.defineProperty(exports, \"getED25519MasterKeyFromSeed\", { enumerable: true, get: function () { return ed25519_1.getED25519MasterKeyFromSeed; } });\nObject.defineProperty(exports, \"deriveED25519HardenedKey\", { enumerable: true, get: function () { return ed25519_1.deriveED25519HardenedKey; } });\nObject.defineProperty(exports, \"deriveEd25519Path\", { enumerable: true, get: function () { return ed25519_1.deriveEd25519Path; } });\nvar symmetric_1 = require(\"./hd/symmetric\");\nObject.defineProperty(exports, \"getSymmetricMasterKeyFromSeed\", { enumerable: true, get: function () { return symmetric_1.getSymmetricMasterKeyFromSeed; } });\nObject.defineProperty(exports, \"deriveSymmetricHardenedKey\", { enumerable: true, get: function () { return symmetric_1.deriveSymmetricHardenedKey; } });\nObject.defineProperty(exports, \"deriveSymmetricPath\", { enumerable: true, get: function () { return symmetric_1.deriveSymmetricPath; } });\nvar mnemonics_1 = require(\"./hd/mnemonics\");\nObject.defineProperty(exports, \"deriveMnemonicsPath\", { enumerable: true, get: function () { return mnemonics_1.deriveMnemonicsPath; } });\nObject.defineProperty(exports, \"deriveMnemonicHardenedKey\", { enumerable: true, get: function () { return mnemonics_1.deriveMnemonicHardenedKey; } });\nObject.defineProperty(exports, \"getMnemonicsMasterKeyFromSeed\", { enumerable: true, get: function () { return mnemonics_1.getMnemonicsMasterKeyFromSeed; } });\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wonderCalculator = void 0;\nconst BitString_1 = require(\"../BitString\");\nconst CellType_1 = require(\"../CellType\");\nconst LevelMask_1 = require(\"./LevelMask\");\nconst exoticPruned_1 = require(\"./exoticPruned\");\nconst exoticMerkleProof_1 = require(\"./exoticMerkleProof\");\nconst descriptor_1 = require(\"./descriptor\");\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst exoticMerkleUpdate_1 = require(\"./exoticMerkleUpdate\");\nconst exoticLibrary_1 = require(\"./exoticLibrary\");\n//\n// This function replicates unknown logic of resolving cell data\n// https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/crypto/vm/cells/DataCell.cpp#L214\n//\nfunction wonderCalculator(type, bits, refs) {\n    //\n    // Resolving level mask\n    //\n    let levelMask;\n    let pruned = null;\n    if (type === CellType_1.CellType.Ordinary) {\n        let mask = 0;\n        for (let r of refs) {\n            mask = mask | r.mask.value;\n        }\n        levelMask = new LevelMask_1.LevelMask(mask);\n    }\n    else if (type === CellType_1.CellType.PrunedBranch) {\n        // Parse pruned\n        pruned = (0, exoticPruned_1.exoticPruned)(bits, refs);\n        // Load level\n        levelMask = new LevelMask_1.LevelMask(pruned.mask);\n    }\n    else if (type === CellType_1.CellType.MerkleProof) {\n        // Parse proof\n        let loaded = (0, exoticMerkleProof_1.exoticMerkleProof)(bits, refs);\n        // Load level\n        levelMask = new LevelMask_1.LevelMask(refs[0].mask.value >> 1);\n    }\n    else if (type === CellType_1.CellType.MerkleUpdate) {\n        // Parse update\n        let loaded = (0, exoticMerkleUpdate_1.exoticMerkleUpdate)(bits, refs);\n        // Load level\n        levelMask = new LevelMask_1.LevelMask((refs[0].mask.value | refs[1].mask.value) >> 1);\n    }\n    else if (type === CellType_1.CellType.Library) {\n        // Parse library\n        let loaded = (0, exoticLibrary_1.exoticLibrary)(bits, refs);\n        // Load level\n        levelMask = new LevelMask_1.LevelMask();\n    }\n    else {\n        throw new Error(\"Unsupported exotic type\");\n    }\n    //\n    // Calculate hashes and depths\n    // NOTE: https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/crypto/vm/cells/DataCell.cpp#L214\n    //\n    let depths = [];\n    let hashes = [];\n    let hashCount = type === CellType_1.CellType.PrunedBranch ? 1 : levelMask.hashCount;\n    let totalHashCount = levelMask.hashCount;\n    let hashIOffset = totalHashCount - hashCount;\n    for (let levelI = 0, hashI = 0; levelI <= levelMask.level; levelI++) {\n        if (!levelMask.isSignificant(levelI)) {\n            continue;\n        }\n        if (hashI < hashIOffset) {\n            hashI++;\n            continue;\n        }\n        //\n        // Bits\n        //\n        let currentBits;\n        if (hashI === hashIOffset) {\n            if (!(levelI === 0 || type === CellType_1.CellType.PrunedBranch)) {\n                throw Error('Invalid');\n            }\n            currentBits = bits;\n        }\n        else {\n            if (!(levelI !== 0 && type !== CellType_1.CellType.PrunedBranch)) {\n                throw Error('Invalid: ' + levelI + ', ' + type);\n            }\n            currentBits = new BitString_1.BitString(hashes[hashI - hashIOffset - 1], 0, 256);\n        }\n        //\n        // Depth\n        //\n        let currentDepth = 0;\n        for (let c of refs) {\n            let childDepth;\n            if (type == CellType_1.CellType.MerkleProof || type == CellType_1.CellType.MerkleUpdate) {\n                childDepth = c.depth(levelI + 1);\n            }\n            else {\n                childDepth = c.depth(levelI);\n            }\n            currentDepth = Math.max(currentDepth, childDepth);\n        }\n        if (refs.length > 0) {\n            currentDepth++;\n        }\n        //\n        // Hash\n        //\n        let repr = (0, descriptor_1.getRepr)(currentBits, refs, levelI, type);\n        let hash = (0, ton_crypto_1.sha256_sync)(repr);\n        //\n        // Persist next\n        //\n        let destI = hashI - hashIOffset;\n        depths[destI] = currentDepth;\n        hashes[destI] = hash;\n        //\n        // Next\n        //\n        hashI++;\n    }\n    //\n    // Calculate hash and depth for all levels\n    //\n    let resolvedHashes = [];\n    let resolvedDepths = [];\n    if (pruned) {\n        for (let i = 0; i < 4; i++) {\n            const { hashIndex } = levelMask.apply(i);\n            const { hashIndex: thisHashIndex } = levelMask;\n            if (hashIndex !== thisHashIndex) {\n                resolvedHashes.push(pruned.pruned[hashIndex].hash);\n                resolvedDepths.push(pruned.pruned[hashIndex].depth);\n            }\n            else {\n                resolvedHashes.push(hashes[0]);\n                resolvedDepths.push(depths[0]);\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < 4; i++) {\n            resolvedHashes.push(hashes[levelMask.apply(i).hashIndex]);\n            resolvedDepths.push(depths[levelMask.apply(i).hashIndex]);\n        }\n    }\n    //\n    // Result\n    //\n    return {\n        mask: levelMask,\n        hashes: resolvedHashes,\n        depths: resolvedDepths\n    };\n}\nexports.wonderCalculator = wonderCalculator;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.topologicalSort = void 0;\nfunction topologicalSort(src) {\n    let pending = [src];\n    let allCells = new Map();\n    let notPermCells = new Set();\n    let sorted = [];\n    while (pending.length > 0) {\n        const cells = [...pending];\n        pending = [];\n        for (let cell of cells) {\n            const hash = cell.hash().toString('hex');\n            if (allCells.has(hash)) {\n                continue;\n            }\n            notPermCells.add(hash);\n            allCells.set(hash, { cell: cell, refs: cell.refs.map((v) => v.hash().toString('hex')) });\n            for (let r of cell.refs) {\n                pending.push(r);\n            }\n        }\n    }\n    let tempMark = new Set();\n    function visit(hash) {\n        if (!notPermCells.has(hash)) {\n            return;\n        }\n        if (tempMark.has(hash)) {\n            throw Error('Not a DAG');\n        }\n        tempMark.add(hash);\n        for (let c of allCells.get(hash).refs) {\n            visit(c);\n        }\n        sorted.unshift(hash);\n        tempMark.delete(hash);\n        notPermCells.delete(hash);\n    }\n    while (notPermCells.size > 0) {\n        const id = Array.from(notPermCells)[0];\n        visit(id);\n    }\n    let indexes = new Map();\n    for (let i = 0; i < sorted.length; i++) {\n        indexes.set(sorted[i], i);\n    }\n    let result = [];\n    for (let ent of sorted) {\n        const rrr = allCells.get(ent);\n        result.push({ cell: rrr.cell, refs: rrr.refs.map((v) => indexes.get(v)) });\n    }\n    return result;\n}\nexports.topologicalSort = topologicalSort;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitsForNumber = void 0;\nfunction bitsForNumber(src, mode) {\n    let v = BigInt(src);\n    // Handle negative values\n    if (mode === 'int') {\n        // Corner case for zero or -1 value\n        if (v === 0n || v === -1n) {\n            return 1;\n        }\n        let v2 = v > 0 ? v : -v;\n        return (v2.toString(2).length + 1 /* Sign bit */);\n    }\n    else if (mode === 'uint') {\n        if (v < 0) {\n            throw Error(`value is negative. Got ${src}`);\n        }\n        return (v.toString(2).length);\n    }\n    else {\n        throw Error(`invalid mode. Got ${mode}`);\n    }\n}\nexports.bitsForNumber = bitsForNumber;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crc32c = void 0;\nconst POLY = 0x82f63b78;\nfunction crc32c(source) {\n    let crc = 0 ^ 0xffffffff;\n    for (let n = 0; n < source.length; n++) {\n        crc ^= source[n];\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n    }\n    crc = crc ^ 0xffffffff;\n    // Convert endianness\n    let res = Buffer.alloc(4);\n    res.writeInt32LE(crc);\n    return res;\n}\nexports.crc32c = crc32c;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeBoc = exports.deserializeBoc = exports.parseBoc = void 0;\nconst BitReader_1 = require(\"../BitReader\");\nconst BitString_1 = require(\"../BitString\");\nconst Cell_1 = require(\"../Cell\");\nconst topologicalSort_1 = require(\"./utils/topologicalSort\");\nconst bitsForNumber_1 = require(\"../../utils/bitsForNumber\");\nconst BitBuilder_1 = require(\"../BitBuilder\");\nconst descriptor_1 = require(\"./descriptor\");\nconst paddedBits_1 = require(\"../utils/paddedBits\");\nconst crc32c_1 = require(\"../../utils/crc32c\");\nfunction readCell(reader, sizeBytes) {\n    // D1\n    const d1 = reader.loadUint(8);\n    const refsCount = d1 % 8;\n    const exotic = !!(d1 & 8);\n    // D2\n    const d2 = reader.loadUint(8);\n    const dataBytesize = Math.ceil(d2 / 2);\n    const paddingAdded = !!(d2 % 2);\n    // Bits\n    let bits = BitString_1.BitString.EMPTY;\n    if (dataBytesize > 0) {\n        if (paddingAdded) {\n            bits = reader.loadPaddedBits(dataBytesize * 8);\n        }\n        else {\n            bits = reader.loadBits(dataBytesize * 8);\n        }\n    }\n    // Refs\n    let refs = [];\n    for (let i = 0; i < refsCount; i++) {\n        refs.push(reader.loadUint(sizeBytes * 8));\n    }\n    // Result\n    return {\n        bits,\n        refs,\n        exotic\n    };\n}\nfunction calcCellSize(cell, sizeBytes) {\n    return 2 /* D1+D2 */ + Math.ceil(cell.bits.length / 8) + cell.refs.length * sizeBytes;\n}\nfunction parseBoc(src) {\n    let reader = new BitReader_1.BitReader(new BitString_1.BitString(src, 0, src.length * 8));\n    let magic = reader.loadUint(32);\n    if (magic === 0x68ff65f3) {\n        let size = reader.loadUint(8);\n        let offBytes = reader.loadUint(8);\n        let cells = reader.loadUint(size * 8);\n        let roots = reader.loadUint(size * 8); // Must be 1\n        let absent = reader.loadUint(size * 8);\n        let totalCellSize = reader.loadUint(offBytes * 8);\n        let index = reader.loadBuffer(cells * offBytes);\n        let cellData = reader.loadBuffer(totalCellSize);\n        return {\n            size,\n            offBytes,\n            cells,\n            roots,\n            absent,\n            totalCellSize,\n            index,\n            cellData,\n            root: [0]\n        };\n    }\n    else if (magic === 0xacc3a728) {\n        let size = reader.loadUint(8);\n        let offBytes = reader.loadUint(8);\n        let cells = reader.loadUint(size * 8);\n        let roots = reader.loadUint(size * 8); // Must be 1\n        let absent = reader.loadUint(size * 8);\n        let totalCellSize = reader.loadUint(offBytes * 8);\n        let index = reader.loadBuffer(cells * offBytes);\n        let cellData = reader.loadBuffer(totalCellSize);\n        let crc32 = reader.loadBuffer(4);\n        if (!(0, crc32c_1.crc32c)(src.subarray(0, src.length - 4)).equals(crc32)) {\n            throw Error('Invalid CRC32C');\n        }\n        return {\n            size,\n            offBytes,\n            cells,\n            roots,\n            absent,\n            totalCellSize,\n            index,\n            cellData,\n            root: [0]\n        };\n    }\n    else if (magic === 0xb5ee9c72) {\n        let hasIdx = reader.loadUint(1);\n        let hasCrc32c = reader.loadUint(1);\n        let hasCacheBits = reader.loadUint(1);\n        let flags = reader.loadUint(2); // Must be 0\n        let size = reader.loadUint(3);\n        let offBytes = reader.loadUint(8);\n        let cells = reader.loadUint(size * 8);\n        let roots = reader.loadUint(size * 8);\n        let absent = reader.loadUint(size * 8);\n        let totalCellSize = reader.loadUint(offBytes * 8);\n        let root = [];\n        for (let i = 0; i < roots; i++) {\n            root.push(reader.loadUint(size * 8));\n        }\n        let index = null;\n        if (hasIdx) {\n            index = reader.loadBuffer(cells * offBytes);\n        }\n        let cellData = reader.loadBuffer(totalCellSize);\n        if (hasCrc32c) {\n            let crc32 = reader.loadBuffer(4);\n            if (!(0, crc32c_1.crc32c)(src.subarray(0, src.length - 4)).equals(crc32)) {\n                throw Error('Invalid CRC32C');\n            }\n        }\n        return {\n            size,\n            offBytes,\n            cells,\n            roots,\n            absent,\n            totalCellSize,\n            index,\n            cellData,\n            root\n        };\n    }\n    else {\n        throw Error('Invalid magic');\n    }\n}\nexports.parseBoc = parseBoc;\nfunction deserializeBoc(src) {\n    //\n    // Parse BOC\n    //\n    let boc = parseBoc(src);\n    let reader = new BitReader_1.BitReader(new BitString_1.BitString(boc.cellData, 0, boc.cellData.length * 8));\n    //\n    // Load cells\n    //\n    let cells = [];\n    for (let i = 0; i < boc.cells; i++) {\n        let cll = readCell(reader, boc.size);\n        cells.push({ ...cll, result: null });\n    }\n    //\n    // Build cells\n    //\n    for (let i = cells.length - 1; i >= 0; i--) {\n        if (cells[i].result) {\n            throw Error('Impossible');\n        }\n        let refs = [];\n        for (let r of cells[i].refs) {\n            if (!cells[r].result) {\n                throw Error('Invalid BOC file');\n            }\n            refs.push(cells[r].result);\n        }\n        cells[i].result = new Cell_1.Cell({ bits: cells[i].bits, refs, exotic: cells[i].exotic });\n    }\n    //\n    // Load roots\n    //\n    let roots = [];\n    for (let i = 0; i < boc.root.length; i++) {\n        roots.push(cells[boc.root[i]].result);\n    }\n    //\n    // Return\n    //\n    return roots;\n}\nexports.deserializeBoc = deserializeBoc;\nfunction writeCellToBuilder(cell, refs, sizeBytes, to) {\n    let d1 = (0, descriptor_1.getRefsDescriptor)(cell.refs, cell.level(), cell.type);\n    let d2 = (0, descriptor_1.getBitsDescriptor)(cell.bits);\n    to.writeUint(d1, 8);\n    to.writeUint(d2, 8);\n    to.writeBuffer((0, paddedBits_1.bitsToPaddedBuffer)(cell.bits));\n    for (let r of refs) {\n        to.writeUint(r, sizeBytes * 8);\n    }\n}\nfunction serializeBoc(root, opts) {\n    // Sort cells\n    let allCells = (0, topologicalSort_1.topologicalSort)(root);\n    // Calculcate parameters\n    let cellsNum = allCells.length;\n    let has_idx = opts.idx;\n    let has_crc32c = opts.crc32;\n    let has_cache_bits = false;\n    let flags = 0;\n    let sizeBytes = Math.max(Math.ceil((0, bitsForNumber_1.bitsForNumber)(cellsNum, 'uint') / 8), 1);\n    let totalCellSize = 0;\n    let index = [];\n    for (let c of allCells) {\n        let sz = calcCellSize(c.cell, sizeBytes);\n        index.push(totalCellSize);\n        totalCellSize += sz;\n    }\n    let offsetBytes = Math.max(Math.ceil((0, bitsForNumber_1.bitsForNumber)(totalCellSize, 'uint') / 8), 1);\n    let totalSize = (4 + // magic\n        1 + // flags and s_bytes\n        1 + // offset_bytes\n        3 * sizeBytes + // cells_num, roots, complete\n        offsetBytes + // full_size\n        1 * sizeBytes + // root_idx\n        (has_idx ? cellsNum * offsetBytes : 0) +\n        totalCellSize +\n        (has_crc32c ? 4 : 0)) * 8;\n    // Serialize\n    let builder = new BitBuilder_1.BitBuilder(totalSize);\n    builder.writeUint(0xb5ee9c72, 32); // Magic\n    builder.writeBit(has_idx); // Has index\n    builder.writeBit(has_crc32c); // Has crc32c\n    builder.writeBit(has_cache_bits); // Has cache bits\n    builder.writeUint(flags, 2); // Flags\n    builder.writeUint(sizeBytes, 3); // Size bytes\n    builder.writeUint(offsetBytes, 8); // Offset bytes\n    builder.writeUint(cellsNum, sizeBytes * 8); // Cells num\n    builder.writeUint(1, sizeBytes * 8); // Roots num\n    builder.writeUint(0, sizeBytes * 8); // Absent num\n    builder.writeUint(totalCellSize, offsetBytes * 8); // Total cell size\n    builder.writeUint(0, sizeBytes * 8); // Root id == 0\n    if (has_idx) { // Index\n        for (let i = 0; i < cellsNum; i++) {\n            builder.writeUint(index[i], offsetBytes * 8);\n        }\n    }\n    for (let i = 0; i < cellsNum; i++) { // Cells\n        writeCellToBuilder(allCells[i].cell, allCells[i].refs, sizeBytes, builder);\n    }\n    if (has_crc32c) {\n        let crc32 = (0, crc32c_1.crc32c)(builder.buffer()); // builder.buffer() is fast since it doesn't allocate new memory\n        builder.writeBuffer(crc32);\n    }\n    // Sanity Check\n    let res = builder.buffer();\n    if (res.length !== totalSize / 8) {\n        throw Error('Internal error');\n    }\n    return res;\n}\nexports.serializeBoc = serializeBoc;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cell = void 0;\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nconst BitString_1 = require(\"./BitString\");\nconst CellType_1 = require(\"./CellType\");\nconst Slice_1 = require(\"./Slice\");\nconst resolveExotic_1 = require(\"./cell/resolveExotic\");\nconst wonderCalculator_1 = require(\"./cell/wonderCalculator\");\nconst serialization_1 = require(\"./cell/serialization\");\nconst BitReader_1 = require(\"./BitReader\");\nconst Builder_1 = require(\"./Builder\");\n/**\n * Cell as described in TVM spec\n */\nclass Cell {\n    /**\n     * Deserialize cells from BOC\n     * @param src source buffer\n     * @returns array of cells\n     */\n    static fromBoc(src) {\n        return (0, serialization_1.deserializeBoc)(src);\n    }\n    /**\n     * Helper class that deserializes a single cell from BOC in base64\n     * @param src source string\n     */\n    static fromBase64(src) {\n        let parsed = Cell.fromBoc(Buffer.from(src, 'base64'));\n        if (parsed.length !== 1) {\n            throw new Error(\"Deserialized more than one cell\");\n        }\n        return parsed[0];\n    }\n    constructor(opts) {\n        // Level and depth information\n        this._hashes = [];\n        this._depths = [];\n        /**\n         * Beging cell parsing\n         * @returns a new slice\n         */\n        this.beginParse = (allowExotic = false) => {\n            if (this.isExotic && !allowExotic) {\n                throw new Error(\"Exotic cells cannot be parsed\");\n            }\n            return new Slice_1.Slice(new BitReader_1.BitReader(this.bits), this.refs);\n        };\n        /**\n         * Get cell hash\n         * @param level level\n         * @returns cell hash\n         */\n        this.hash = (level = 3) => {\n            return this._hashes[Math.min(this._hashes.length - 1, level)];\n        };\n        /**\n         * Get cell depth\n         * @param level level\n         * @returns cell depth\n         */\n        this.depth = (level = 3) => {\n            return this._depths[Math.min(this._depths.length - 1, level)];\n        };\n        /**\n         * Get cell level\n         * @returns cell level\n         */\n        this.level = () => {\n            return this.mask.level;\n        };\n        /**\n         * Checks cell to be euqal to another cell\n         * @param other other cell\n         * @returns true if cells are equal\n         */\n        this.equals = (other) => {\n            return this.hash().equals(other.hash());\n        };\n        this[_a] = () => this.toString();\n        // Resolve bits\n        let bits = BitString_1.BitString.EMPTY;\n        if (opts && opts.bits) {\n            bits = opts.bits;\n        }\n        // Resolve refs\n        let refs = [];\n        if (opts && opts.refs) {\n            refs = [...opts.refs];\n        }\n        // Resolve type\n        let hashes;\n        let depths;\n        let mask;\n        let type = CellType_1.CellType.Ordinary;\n        if (opts && opts.exotic) {\n            // Resolve exotic cell\n            let resolved = (0, resolveExotic_1.resolveExotic)(bits, refs);\n            // Perform wonders\n            let wonders = (0, wonderCalculator_1.wonderCalculator)(resolved.type, bits, refs);\n            // Copy results\n            mask = wonders.mask;\n            depths = wonders.depths;\n            hashes = wonders.hashes;\n            type = resolved.type;\n        }\n        else {\n            // Check correctness\n            if (refs.length > 4) {\n                throw new Error(\"Invalid number of references\");\n            }\n            if (bits.length > 1023) {\n                throw new Error(`Bits overflow: ${bits.length} > 1023`);\n            }\n            // Perform wonders\n            let wonders = (0, wonderCalculator_1.wonderCalculator)(CellType_1.CellType.Ordinary, bits, refs);\n            // Copy results\n            mask = wonders.mask;\n            depths = wonders.depths;\n            hashes = wonders.hashes;\n            type = CellType_1.CellType.Ordinary;\n        }\n        // Set fields\n        this.type = type;\n        this.bits = bits;\n        this.refs = refs;\n        this.mask = mask;\n        this._depths = depths;\n        this._hashes = hashes;\n        Object.freeze(this);\n        Object.freeze(this.refs);\n        Object.freeze(this.bits);\n        Object.freeze(this.mask);\n        Object.freeze(this._depths);\n        Object.freeze(this._hashes);\n    }\n    /**\n     * Check if cell is exotic\n     */\n    get isExotic() {\n        return this.type !== CellType_1.CellType.Ordinary;\n    }\n    /**\n     * Serializes cell to BOC\n     * @param opts options\n     */\n    toBoc(opts) {\n        let idx = (opts && opts.idx !== null && opts.idx !== undefined) ? opts.idx : false;\n        let crc32 = (opts && opts.crc32 !== null && opts.crc32 !== undefined) ? opts.crc32 : true;\n        return (0, serialization_1.serializeBoc)(this, { idx, crc32 });\n    }\n    /**\n     * Format cell to string\n     * @param indent indentation\n     * @returns string representation\n     */\n    toString(indent) {\n        let id = indent || '';\n        let t = 'x';\n        if (this.isExotic) {\n            if (this.type === CellType_1.CellType.MerkleProof) {\n                t = 'p';\n            }\n            else if (this.type === CellType_1.CellType.MerkleUpdate) {\n                t = 'u';\n            }\n            else if (this.type === CellType_1.CellType.PrunedBranch) {\n                t = 'p';\n            }\n        }\n        let s = id + (this.isExotic ? t : 'x') + '{' + this.bits.toString() + '}';\n        for (let k in this.refs) {\n            const i = this.refs[k];\n            s += '\\n' + i.toString(id + ' ');\n        }\n        return s;\n    }\n    /**\n     * Covnert cell to slice\n     * @returns slice\n     */\n    asSlice() {\n        return this.beginParse();\n    }\n    /**\n     * Convert cell to a builder that has this cell stored\n     * @returns builder\n     */\n    asBuilder() {\n        return (0, Builder_1.beginCell)().storeSlice(this.asSlice());\n    }\n}\nexports.Cell = Cell;\n_a = symbol_inspect_1.default;\nCell.EMPTY = new Cell();\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Builder = exports.beginCell = void 0;\nconst BitBuilder_1 = require(\"./BitBuilder\");\nconst Cell_1 = require(\"./Cell\");\nconst strings_1 = require(\"./utils/strings\");\n/**\n * Start building a cell\n * @returns a new builder\n */\nfunction beginCell() {\n    return new Builder();\n}\nexports.beginCell = beginCell;\n/**\n * Builder for Cells\n */\nclass Builder {\n    constructor() {\n        this._bits = new BitBuilder_1.BitBuilder();\n        this._refs = [];\n    }\n    /**\n     * Bits written so far\n     */\n    get bits() {\n        return this._bits.length;\n    }\n    /**\n     * References written so far\n     */\n    get refs() {\n        return this._refs.length;\n    }\n    /**\n     * Available bits\n     */\n    get availableBits() {\n        return 1023 - this.bits;\n    }\n    /**\n     * Available references\n     */\n    get availableRefs() {\n        return 4 - this.refs;\n    }\n    /**\n     * Write a single bit\n     * @param value bit to write, true or positive number for 1, false or zero or negative for 0\n     * @returns this builder\n     */\n    storeBit(value) {\n        this._bits.writeBit(value);\n        return this;\n    }\n    /**\n     * Write bits from BitString\n     * @param src source bits\n     * @returns this builder\n     */\n    storeBits(src) {\n        this._bits.writeBits(src);\n        return this;\n    }\n    /**\n     * Store Buffer\n     * @param src source buffer\n     * @param bytes optional number of bytes to write\n     * @returns this builder\n     */\n    storeBuffer(src, bytes) {\n        if (bytes !== undefined && bytes !== null) {\n            if (src.length !== bytes) {\n                throw Error(`Buffer length ${src.length} is not equal to ${bytes}`);\n            }\n        }\n        this._bits.writeBuffer(src);\n        return this;\n    }\n    /**\n     * Store Maybe Buffer\n     * @param src source buffer or null\n     * @param bytes optional number of bytes to write\n     * @returns this builder\n     */\n    storeMaybeBuffer(src, bytes) {\n        if (src !== null) {\n            this.storeBit(1);\n            this.storeBuffer(src, bytes);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store uint value\n     * @param value value as bigint or number\n     * @param bits number of bits to write\n     * @returns this builder\n     */\n    storeUint(value, bits) {\n        this._bits.writeUint(value, bits);\n        return this;\n    }\n    /**\n     * Store maybe uint value\n     * @param value value as bigint or number, null or undefined\n     * @param bits number of bits to write\n     * @returns this builder\n     */\n    storeMaybeUint(value, bits) {\n        if (value !== null && value !== undefined) {\n            this.storeBit(1);\n            this.storeUint(value, bits);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store int value\n     * @param value value as bigint or number\n     * @param bits number of bits to write\n     * @returns this builder\n     */\n    storeInt(value, bits) {\n        this._bits.writeInt(value, bits);\n        return this;\n    }\n    /**\n     * Store maybe int value\n     * @param value value as bigint or number, null or undefined\n     * @param bits number of bits to write\n     * @returns this builder\n     */\n    storeMaybeInt(value, bits) {\n        if (value !== null && value !== undefined) {\n            this.storeBit(1);\n            this.storeInt(value, bits);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store varuint value\n     * @param value value as bigint or number\n     * @param bits number of bits to write to header\n     * @returns this builder\n     */\n    storeVarUint(value, bits) {\n        this._bits.writeVarUint(value, bits);\n        return this;\n    }\n    /**\n     * Store maybe varuint value\n     * @param value value as bigint or number, null or undefined\n     * @param bits number of bits to write to header\n     * @returns this builder\n     */\n    storeMaybeVarUint(value, bits) {\n        if (value !== null && value !== undefined) {\n            this.storeBit(1);\n            this.storeVarUint(value, bits);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store varint value\n     * @param value value as bigint or number\n     * @param bits number of bits to write to header\n     * @returns this builder\n     */\n    storeVarInt(value, bits) {\n        this._bits.writeVarInt(value, bits);\n        return this;\n    }\n    /**\n     * Store maybe varint value\n     * @param value value as bigint or number, null or undefined\n     * @param bits number of bits to write to header\n     * @returns this builder\n     */\n    storeMaybeVarInt(value, bits) {\n        if (value !== null && value !== undefined) {\n            this.storeBit(1);\n            this.storeVarInt(value, bits);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store coins value\n     * @param amount amount of coins\n     * @returns this builder\n     */\n    storeCoins(amount) {\n        this._bits.writeCoins(amount);\n        return this;\n    }\n    /**\n     * Store maybe coins value\n     * @param amount amount of coins, null or undefined\n     * @returns this builder\n     */\n    storeMaybeCoins(amount) {\n        if (amount !== null && amount !== undefined) {\n            this.storeBit(1);\n            this.storeCoins(amount);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store address\n     * @param addres address to store\n     * @returns this builder\n     */\n    storeAddress(address) {\n        this._bits.writeAddress(address);\n        return this;\n    }\n    /**\n     * Store reference\n     * @param cell cell or builder to store\n     * @returns this builder\n     */\n    storeRef(cell) {\n        // Check refs\n        if (this._refs.length >= 4) {\n            throw new Error(\"Too many references\");\n        }\n        // Store reference\n        if (cell instanceof Cell_1.Cell) {\n            this._refs.push(cell);\n        }\n        else if (cell instanceof Builder) {\n            this._refs.push(cell.endCell());\n        }\n        else {\n            throw new Error(\"Invalid argument\");\n        }\n        return this;\n    }\n    /**\n     * Store reference if not null\n     * @param cell cell or builder to store\n     * @returns this builder\n     */\n    storeMaybeRef(cell) {\n        if (cell) {\n            this.storeBit(1);\n            this.storeRef(cell);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store slice it in this builder\n     * @param src source slice\n     */\n    storeSlice(src) {\n        let c = src.clone();\n        if (c.remainingBits > 0) {\n            this.storeBits(c.loadBits(c.remainingBits));\n        }\n        while (c.remainingRefs > 0) {\n            this.storeRef(c.loadRef());\n        }\n        return this;\n    }\n    /**\n     * Store slice in this builder if not null\n     * @param src source slice\n     */\n    storeMaybeSlice(src) {\n        if (src) {\n            this.storeBit(1);\n            this.storeSlice(src);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store builder\n     * @param src builder to store\n     * @returns this builder\n     */\n    storeBuilder(src) {\n        return this.storeSlice(src.endCell().beginParse());\n    }\n    /**\n     * Store builder if not null\n     * @param src builder to store\n     * @returns this builder\n     */\n    storeMaybeBuilder(src) {\n        if (src) {\n            this.storeBit(1);\n            this.storeBuilder(src);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store writer or builder\n     * @param writer writer or builder to store\n     * @returns this builder\n     */\n    storeWritable(writer) {\n        if (typeof writer === 'object') {\n            writer.writeTo(this);\n        }\n        else {\n            writer(this);\n        }\n        return this;\n    }\n    /**\n     * Store writer or builder if not null\n     * @param writer writer or builder to store\n     * @returns this builder\n     */\n    storeMaybeWritable(writer) {\n        if (writer) {\n            this.storeBit(1);\n            this.storeWritable(writer);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store object in this builder\n     * @param writer Writable or writer functuin\n     */\n    store(writer) {\n        this.storeWritable(writer);\n        return this;\n    }\n    /**\n     * Store string tail\n     * @param src source string\n     * @returns this builder\n     */\n    storeStringTail(src) {\n        (0, strings_1.writeString)(src, this);\n        return this;\n    }\n    /**\n     * Store string tail\n     * @param src source string\n     * @returns this builder\n     */\n    storeMaybeStringTail(src) {\n        if (src !== null && src !== undefined) {\n            this.storeBit(1);\n            (0, strings_1.writeString)(src, this);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store string tail in ref\n     * @param src source string\n     * @returns this builder\n     */\n    storeStringRefTail(src) {\n        this.storeRef(beginCell()\n            .storeStringTail(src));\n        return this;\n    }\n    /**\n     * Store maybe string tail in ref\n     * @param src source string\n     * @returns this builder\n     */\n    storeMaybeStringRefTail(src) {\n        if (src !== null && src !== undefined) {\n            this.storeBit(1);\n            this.storeStringRefTail(src);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store dictionary in this builder\n     * @param dict dictionary to store\n     * @returns this builder\n     */\n    storeDict(dict, key, value) {\n        if (dict) {\n            dict.store(this, key, value);\n        }\n        else {\n            this.storeBit(0);\n        }\n        return this;\n    }\n    /**\n     * Store dictionary in this builder directly\n     * @param dict dictionary to store\n     * @returns this builder\n     */\n    storeDictDirect(dict, key, value) {\n        dict.storeDirect(this, key, value);\n        return this;\n    }\n    /**\n     * Complete cell\n     * @returns cell\n     */\n    endCell() {\n        return new Cell_1.Cell({\n            bits: this._bits.build(),\n            refs: this._refs\n        });\n    }\n    /**\n     * Convert to cell\n     * @returns cell\n     */\n    asCell() {\n        return this.endCell();\n    }\n    /**\n     * Convert to slice\n     * @returns slice\n     */\n    asSlice() {\n        return this.endCell().beginParse();\n    }\n}\nexports.Builder = Builder;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleLibraryValue = exports.storeSimpleLibrary = exports.loadSimpleLibrary = void 0;\nfunction loadSimpleLibrary(slice) {\n    return {\n        public: slice.loadBit(),\n        root: slice.loadRef()\n    };\n}\nexports.loadSimpleLibrary = loadSimpleLibrary;\nfunction storeSimpleLibrary(src) {\n    return (builder) => {\n        builder.storeBit(src.public);\n        builder.storeRef(src.root);\n    };\n}\nexports.storeSimpleLibrary = storeSimpleLibrary;\nexports.SimpleLibraryValue = {\n    serialize(src, builder) {\n        storeSimpleLibrary(src)(builder);\n    },\n    parse(src) {\n        return loadSimpleLibrary(src);\n    },\n};\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTickTock = exports.loadTickTock = void 0;\nfunction loadTickTock(slice) {\n    return {\n        tick: slice.loadBit(),\n        tock: slice.loadBit()\n    };\n}\nexports.loadTickTock = loadTickTock;\nfunction storeTickTock(src) {\n    return (builder) => {\n        builder.storeBit(src.tick);\n        builder.storeBit(src.tock);\n    };\n}\nexports.storeTickTock = storeTickTock;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeStateInit = exports.loadStateInit = void 0;\nconst Dictionary_1 = require(\"../dict/Dictionary\");\nconst SimpleLibrary_1 = require(\"./SimpleLibrary\");\nconst TickTock_1 = require(\"./TickTock\");\n;\nfunction loadStateInit(slice) {\n    // Split Depth\n    let splitDepth;\n    if (slice.loadBit()) {\n        splitDepth = slice.loadUint(5);\n    }\n    // TickTock\n    let special;\n    if (slice.loadBit()) {\n        special = (0, TickTock_1.loadTickTock)(slice);\n    }\n    // Code and Data\n    let code = slice.loadMaybeRef();\n    let data = slice.loadMaybeRef();\n    // Libs\n    let libraries = slice.loadDict(Dictionary_1.Dictionary.Keys.BigUint(256), SimpleLibrary_1.SimpleLibraryValue);\n    if (libraries.size === 0) {\n        libraries = undefined;\n    }\n    return {\n        splitDepth,\n        special,\n        code,\n        data,\n        libraries\n    };\n}\nexports.loadStateInit = loadStateInit;\nfunction storeStateInit(src) {\n    return (builder) => {\n        if (src.splitDepth !== null && src.splitDepth !== undefined) {\n            builder.storeBit(true);\n            builder.storeUint(src.splitDepth, 5);\n        }\n        else {\n            builder.storeBit(false);\n        }\n        if (src.special !== null && src.special !== undefined) {\n            builder.storeBit(true);\n            builder.store((0, TickTock_1.storeTickTock)(src.special));\n        }\n        else {\n            builder.storeBit(false);\n        }\n        builder.storeMaybeRef(src.code);\n        builder.storeMaybeRef(src.data);\n        builder.storeDict(src.libraries);\n    };\n}\nexports.storeStateInit = storeStateInit;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contractAddress = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst StateInit_1 = require(\"../types/StateInit\");\nconst Address_1 = require(\"./Address\");\nfunction contractAddress(workchain, init) {\n    let hash = (0, Builder_1.beginCell)()\n        .store((0, StateInit_1.storeStateInit)(init))\n        .endCell()\n        .hash();\n    return new Address_1.Address(workchain, hash);\n}\nexports.contractAddress = contractAddress;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTuple = exports.serializeTuple = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst INT64_MIN = BigInt('-9223372036854775808');\nconst INT64_MAX = BigInt('9223372036854775807');\n// vm_stk_null#00 = VmStackValue;\n// vm_stk_tinyint#01 value:int64 = VmStackValue;\n// vm_stk_int#0201_ value:int257 = VmStackValue;\n// vm_stk_nan#02ff = VmStackValue;\n// vm_stk_cell#03 cell:^Cell = VmStackValue;\n//_ cell:^Cell st_bits:(## 10) end_bits:(## 10) { st_bits <= end_bits }\n//   st_ref:(#<= 4) end_ref:(#<= 4) { st_ref <= end_ref } = VmCellSlice;\n// vm_stk_slice#04 _:VmCellSlice = VmStackValue;\n// vm_stk_builder#05 cell:^Cell = VmStackValue;\n// vm_stk_cont#06 cont:VmCont = VmStackValue;\n// vm_tupref_nil$_ = VmTupleRef 0;\n// vm_tupref_single$_ entry:^VmStackValue = VmTupleRef 1;\n// vm_tupref_any$_ {n:#} ref:^(VmTuple (n + 2)) = VmTupleRef (n + 2);\n// vm_tuple_nil$_ = VmTuple 0;\n// vm_tuple_tcons$_ {n:#} head:(VmTupleRef n) tail:^VmStackValue = VmTuple (n + 1);\n// vm_stk_tuple#07 len:(## 16) data:(VmTuple len) = VmStackValue;\nfunction serializeTupleItem(src, builder) {\n    if (src.type === 'null') {\n        builder.storeUint(0x00, 8);\n    }\n    else if (src.type === 'int') {\n        if (src.value <= INT64_MAX && src.value >= INT64_MIN) {\n            builder.storeUint(0x01, 8);\n            builder.storeInt(src.value, 64);\n        }\n        else {\n            builder.storeUint(0x0100, 15);\n            builder.storeInt(src.value, 257);\n        }\n    }\n    else if (src.type === 'nan') {\n        builder.storeInt(0x02ff, 16);\n    }\n    else if (src.type === 'cell') {\n        builder.storeUint(0x03, 8);\n        builder.storeRef(src.cell);\n    }\n    else if (src.type === 'slice') {\n        builder.storeUint(0x04, 8);\n        builder.storeUint(0, 10);\n        builder.storeUint(src.cell.bits.length, 10);\n        builder.storeUint(0, 3);\n        builder.storeUint(src.cell.refs.length, 3);\n        builder.storeRef(src.cell);\n    }\n    else if (src.type === 'builder') {\n        builder.storeUint(0x05, 8);\n        builder.storeRef(src.cell);\n    }\n    else if (src.type === 'tuple') {\n        let head = null;\n        let tail = null;\n        for (let i = 0; i < src.items.length; i++) {\n            // Swap\n            let s = head;\n            head = tail;\n            tail = s;\n            if (i > 1) {\n                head = (0, Builder_1.beginCell)()\n                    .storeRef(tail)\n                    .storeRef(head)\n                    .endCell();\n            }\n            let bc = (0, Builder_1.beginCell)();\n            serializeTupleItem(src.items[i], bc);\n            tail = bc.endCell();\n        }\n        builder.storeUint(0x07, 8);\n        builder.storeUint(src.items.length, 16);\n        if (head) {\n            builder.storeRef(head);\n        }\n        if (tail) {\n            builder.storeRef(tail);\n        }\n    }\n    else {\n        throw Error('Invalid value');\n    }\n}\nfunction parseStackItem(cs) {\n    let kind = cs.loadUint(8);\n    if (kind === 0) {\n        return { type: 'null' };\n    }\n    else if (kind === 1) {\n        return { type: 'int', value: cs.loadIntBig(64) };\n    }\n    else if (kind === 2) {\n        if (cs.loadUint(7) === 0) {\n            return { type: 'int', value: cs.loadIntBig(257) };\n        }\n        else {\n            cs.loadBit(); // must eq 1\n            return { type: 'nan' };\n        }\n    }\n    else if (kind === 3) {\n        return { type: 'cell', cell: cs.loadRef() };\n    }\n    else if (kind === 4) {\n        let startBits = cs.loadUint(10);\n        let endBits = cs.loadUint(10);\n        let startRefs = cs.loadUint(3);\n        let endRefs = cs.loadUint(3);\n        // Copy to new cell\n        let rs = cs.loadRef().beginParse();\n        rs.skip(startBits);\n        let dt = rs.loadBits(endBits - startBits);\n        let builder = (0, Builder_1.beginCell)()\n            .storeBits(dt);\n        // Copy refs if exist\n        if (startRefs < endRefs) {\n            for (let i = 0; i < startRefs; i++) {\n                rs.loadRef();\n            }\n            for (let i = 0; i < endRefs - startRefs; i++) {\n                builder.storeRef(rs.loadRef());\n            }\n        }\n        return { type: 'slice', cell: builder.endCell() };\n    }\n    else if (kind === 5) {\n        return { type: 'builder', cell: cs.loadRef() };\n    }\n    else if (kind === 7) {\n        let length = cs.loadUint(16);\n        let items = [];\n        if (length > 1) {\n            let head = cs.loadRef().beginParse();\n            let tail = cs.loadRef().beginParse();\n            items.unshift(parseStackItem(tail));\n            for (let i = 0; i < length - 2; i++) {\n                let ohead = head;\n                head = ohead.loadRef().beginParse();\n                tail = ohead.loadRef().beginParse();\n                items.unshift(parseStackItem(tail));\n            }\n            items.unshift(parseStackItem(head));\n        }\n        else if (length === 1) {\n            items.push(parseStackItem(cs.loadRef().beginParse()));\n        }\n        return { type: 'tuple', items };\n    }\n    else {\n        throw Error('Unsupported stack item');\n    }\n}\n//\n// Stack parsing\n// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/block.tlb#L783\n//\n// vm_stack#_ depth:(## 24) stack:(VmStackList depth) = VmStack;\n// vm_stk_cons#_ {n:#} rest:^(VmStackList n) tos:VmStackValue = VmStackList (n + 1);\n// vm_stk_nil#_ = VmStackList 0;\n//\nfunction serializeTupleTail(src, builder) {\n    if (src.length > 0) {\n        // rest:^(VmStackList n)\n        let tail = (0, Builder_1.beginCell)();\n        serializeTupleTail(src.slice(0, src.length - 1), tail);\n        builder.storeRef(tail.endCell());\n        // tos\n        serializeTupleItem(src[src.length - 1], builder);\n    }\n}\nfunction serializeTuple(src) {\n    let builder = (0, Builder_1.beginCell)();\n    builder.storeUint(src.length, 24);\n    let r = [...src];\n    serializeTupleTail(r, builder);\n    return builder.endCell();\n}\nexports.serializeTuple = serializeTuple;\nfunction parseTuple(src) {\n    let res = [];\n    let cs = src.beginParse();\n    let size = cs.loadUint(24);\n    for (let i = 0; i < size; i++) {\n        let next = cs.loadRef();\n        res.unshift(parseStackItem(cs));\n        cs = next.beginParse();\n    }\n    return res;\n}\nexports.parseTuple = parseTuple;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TupleReader = void 0;\nclass TupleReader {\n    constructor(items) {\n        this.items = [...items];\n    }\n    get remaining() {\n        return this.items.length;\n    }\n    peek() {\n        if (this.items.length === 0) {\n            throw Error('EOF');\n        }\n        return this.items[0];\n    }\n    pop() {\n        if (this.items.length === 0) {\n            throw Error('EOF');\n        }\n        let res = this.items[0];\n        this.items.splice(0, 1);\n        return res;\n    }\n    skip(num = 1) {\n        for (let i = 0; i < num; i++) {\n            this.pop();\n        }\n        return this;\n    }\n    readBigNumber() {\n        let popped = this.pop();\n        if (popped.type !== 'int') {\n            throw Error('Not a number');\n        }\n        return popped.value;\n    }\n    readBigNumberOpt() {\n        let popped = this.pop();\n        if (popped.type === 'null') {\n            return null;\n        }\n        if (popped.type !== 'int') {\n            throw Error('Not a number');\n        }\n        return popped.value;\n    }\n    readNumber() {\n        return Number(this.readBigNumber());\n    }\n    readNumberOpt() {\n        let r = this.readBigNumberOpt();\n        if (r !== null) {\n            return Number(r);\n        }\n        else {\n            return null;\n        }\n    }\n    readBoolean() {\n        let res = this.readNumber();\n        return res === 0 ? false : true;\n    }\n    readBooleanOpt() {\n        let res = this.readNumberOpt();\n        if (res !== null) {\n            return res === 0 ? false : true;\n        }\n        else {\n            return null;\n        }\n    }\n    readAddress() {\n        let r = this.readCell().beginParse().loadAddress();\n        if (r !== null) {\n            return r;\n        }\n        else {\n            throw Error('Not an address');\n        }\n    }\n    readAddressOpt() {\n        let r = this.readCellOpt();\n        if (r !== null) {\n            return r.beginParse().loadMaybeAddress();\n        }\n        else {\n            return null;\n        }\n    }\n    readCell() {\n        let popped = this.pop();\n        if (popped.type !== 'cell' && popped.type !== 'slice' && popped.type !== 'builder') {\n            throw Error('Not a cell: ' + popped.type);\n        }\n        return popped.cell;\n    }\n    readCellOpt() {\n        let popped = this.pop();\n        if (popped.type === 'null') {\n            return null;\n        }\n        if (popped.type !== 'cell' && popped.type !== 'slice' && popped.type !== 'builder') {\n            throw Error('Not a cell');\n        }\n        return popped.cell;\n    }\n    readTuple() {\n        let popped = this.pop();\n        if (popped.type !== 'tuple') {\n            throw Error('Not a number');\n        }\n        return new TupleReader(popped.items);\n    }\n    readTupleOpt() {\n        let popped = this.pop();\n        if (popped.type === 'null') {\n            return null;\n        }\n        if (popped.type !== 'tuple') {\n            throw Error('Not a number');\n        }\n        return new TupleReader(popped.items);\n    }\n    readBuffer() {\n        let s = this.readCell().beginParse();\n        if (s.remainingRefs !== 0) {\n            throw Error('Not a buffer');\n        }\n        if (s.remainingBits % 8 !== 0) {\n            throw Error('Not a buffer');\n        }\n        return s.loadBuffer(s.remainingBits / 8);\n    }\n    readBufferOpt() {\n        let popped = this.peek();\n        if (popped.type === 'null') {\n            return null;\n        }\n        let s = this.readCell().beginParse();\n        if (s.remainingRefs !== 0) {\n            throw Error('Not a buffer');\n        }\n        if (s.remainingBits % 8 !== 0) {\n            throw Error('Not a buffer');\n        }\n        return s.loadBuffer(s.remainingBits / 8);\n    }\n    readString() {\n        let s = this.readCell().beginParse();\n        return s.loadStringTail();\n    }\n    readStringOpt() {\n        let popped = this.peek();\n        if (popped.type === 'null') {\n            return null;\n        }\n        let s = this.readCell().beginParse();\n        return s.loadStringTail();\n    }\n}\nexports.TupleReader = TupleReader;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TupleBuilder = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst Cell_1 = require(\"../boc/Cell\");\nconst Slice_1 = require(\"../boc/Slice\");\nclass TupleBuilder {\n    constructor() {\n        this._tuple = [];\n    }\n    writeNumber(v) {\n        if (v === null || v === undefined) {\n            this._tuple.push({ type: 'null' });\n        }\n        else {\n            this._tuple.push({ type: 'int', value: BigInt(v) });\n        }\n    }\n    writeBoolean(v) {\n        if (v === null || v === undefined) {\n            this._tuple.push({ type: 'null' });\n        }\n        else {\n            this._tuple.push({ type: 'int', value: v ? -1n : 0n });\n        }\n    }\n    writeBuffer(v) {\n        if (v === null || v === undefined) {\n            this._tuple.push({ type: 'null' });\n        }\n        else {\n            this._tuple.push({ type: 'slice', cell: (0, Builder_1.beginCell)().storeBuffer(v).endCell() });\n        }\n    }\n    writeString(v) {\n        if (v === null || v === undefined) {\n            this._tuple.push({ type: 'null' });\n        }\n        else {\n            this._tuple.push({ type: 'slice', cell: (0, Builder_1.beginCell)().storeStringTail(v).endCell() });\n        }\n    }\n    writeCell(v) {\n        if (v === null || v === undefined) {\n            this._tuple.push({ type: 'null' });\n        }\n        else {\n            if (v instanceof Cell_1.Cell) {\n                this._tuple.push({ type: 'cell', cell: v });\n            }\n            else if (v instanceof Slice_1.Slice) {\n                this._tuple.push({ type: 'cell', cell: v.asCell() });\n            }\n        }\n    }\n    writeSlice(v) {\n        if (v === null || v === undefined) {\n            this._tuple.push({ type: 'null' });\n        }\n        else {\n            if (v instanceof Cell_1.Cell) {\n                this._tuple.push({ type: 'slice', cell: v });\n            }\n            else if (v instanceof Slice_1.Slice) {\n                this._tuple.push({ type: 'slice', cell: v.asCell() });\n            }\n        }\n    }\n    writeBuilder(v) {\n        if (v === null || v === undefined) {\n            this._tuple.push({ type: 'null' });\n        }\n        else {\n            if (v instanceof Cell_1.Cell) {\n                this._tuple.push({ type: 'builder', cell: v });\n            }\n            else if (v instanceof Slice_1.Slice) {\n                this._tuple.push({ type: 'builder', cell: v.asCell() });\n            }\n        }\n    }\n    writeTuple(v) {\n        if (v === null || v === undefined) {\n            this._tuple.push({ type: 'null' });\n        }\n        else {\n            this._tuple.push({ type: 'tuple', items: v });\n        }\n    }\n    writeAddress(v) {\n        if (v === null || v === undefined) {\n            this._tuple.push({ type: 'null' });\n        }\n        else {\n            this._tuple.push({ type: 'slice', cell: (0, Builder_1.beginCell)().storeAddress(v).endCell() });\n        }\n    }\n    build() {\n        return [...this._tuple];\n    }\n}\nexports.TupleBuilder = TupleBuilder;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromNano = exports.toNano = void 0;\nfunction toNano(src) {\n    if (typeof src === 'bigint') {\n        return src * 1000000000n;\n    }\n    else if (typeof src === 'number') {\n        return BigInt(src) * 1000000000n;\n    }\n    else {\n        // Check sign\n        let neg = false;\n        while (src.startsWith('-')) {\n            neg = !neg;\n            src = src.slice(1);\n        }\n        // Split string\n        if (src === '.') {\n            throw Error('Invalid number');\n        }\n        let parts = src.split('.');\n        if (parts.length > 2) {\n            throw Error('Invalid number');\n        }\n        // Prepare parts\n        let whole = parts[0];\n        let frac = parts[1];\n        if (!whole) {\n            whole = '0';\n        }\n        if (!frac) {\n            frac = '0';\n        }\n        if (frac.length > 9) {\n            throw Error('Invalid number');\n        }\n        while (frac.length < 9) {\n            frac += '0';\n        }\n        // Convert\n        let r = BigInt(whole) * 1000000000n + BigInt(frac);\n        if (neg) {\n            r = -r;\n        }\n        return r;\n    }\n}\nexports.toNano = toNano;\nfunction fromNano(src) {\n    let v = BigInt(src);\n    let neg = false;\n    if (v < 0) {\n        neg = true;\n        v = -v;\n    }\n    // Convert fraction\n    let frac = v % 1000000000n;\n    let facStr = frac.toString();\n    while (facStr.length < 9) {\n        facStr = '0' + facStr;\n    }\n    facStr = facStr.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    // Convert whole\n    let whole = v / 1000000000n;\n    let wholeStr = whole.toString();\n    // Value\n    let value = `${wholeStr}${facStr === '0' ? '' : `.${facStr}`}`;\n    if (neg) {\n        value = '-' + value;\n    }\n    return value;\n}\nexports.fromNano = fromNano;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.comment = exports.external = exports.internal = void 0;\nconst Address_1 = require(\"../address/Address\");\nconst Cell_1 = require(\"../boc/Cell\");\nconst Builder_1 = require(\"../boc/Builder\");\nconst convert_1 = require(\"../utils/convert\");\nfunction internal(src) {\n    // Resolve bounce\n    let bounce = true;\n    if (src.bounce !== null && src.bounce !== undefined) {\n        bounce = src.bounce;\n    }\n    // Resolve address\n    let to;\n    if (typeof src.to === 'string') {\n        to = Address_1.Address.parse(src.to);\n    }\n    else if (Address_1.Address.isAddress(src.to)) {\n        to = src.to;\n    }\n    else {\n        throw new Error(`Invalid address ${src.to}`);\n    }\n    // Resolve value\n    let value;\n    if (typeof src.value === 'string') {\n        value = (0, convert_1.toNano)(src.value);\n    }\n    else {\n        value = src.value;\n    }\n    // Resolve body\n    let body = Cell_1.Cell.EMPTY;\n    if (typeof src.body === 'string') {\n        body = (0, Builder_1.beginCell)().storeUint(0, 32).storeStringTail(src.body).endCell();\n    }\n    else if (src.body) {\n        body = src.body;\n    }\n    // Create message\n    return {\n        info: {\n            type: 'internal',\n            dest: to,\n            value: { coins: value },\n            bounce,\n            ihrDisabled: true,\n            bounced: false,\n            ihrFee: 0n,\n            forwardFee: 0n,\n            createdAt: 0,\n            createdLt: 0n\n        },\n        init: src.init ? { code: src.init.code, data: src.init.data } : undefined,\n        body: body\n    };\n}\nexports.internal = internal;\nfunction external(src) {\n    // Resolve address\n    let to;\n    if (typeof src.to === 'string') {\n        to = Address_1.Address.parse(src.to);\n    }\n    else if (Address_1.Address.isAddress(src.to)) {\n        to = src.to;\n    }\n    else {\n        throw new Error(`Invalid address ${src.to}`);\n    }\n    return {\n        info: {\n            type: 'external-in',\n            dest: to,\n            importFee: 0n\n        },\n        init: src.init ? { code: src.init.code, data: src.init.data } : undefined,\n        body: src.body || Cell_1.Cell.EMPTY\n    };\n}\nexports.external = external;\nfunction comment(src) {\n    return (0, Builder_1.beginCell)()\n        .storeUint(0, 32)\n        .storeStringTail(src)\n        .endCell();\n}\nexports.comment = comment;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeAccountState = exports.loadAccountState = void 0;\nconst StateInit_1 = require(\"./StateInit\");\nfunction loadAccountState(cs) {\n    if (cs.loadBit()) {\n        return { type: 'active', state: (0, StateInit_1.loadStateInit)(cs) };\n    }\n    else if (cs.loadBit()) {\n        return { type: 'frozen', stateHash: cs.loadUintBig(256) };\n    }\n    else {\n        return { type: 'uninit' };\n    }\n}\nexports.loadAccountState = loadAccountState;\nfunction storeAccountState(src) {\n    return (builder) => {\n        if (src.type === 'active') {\n            builder.storeBit(true);\n            builder.store((0, StateInit_1.storeStateInit)(src.state));\n        }\n        else if (src.type === 'frozen') {\n            builder.storeBit(false);\n            builder.storeBit(true);\n            builder.storeUint(src.stateHash, 256);\n        }\n        else if (src.type === 'uninit') {\n            builder.storeBit(false);\n            builder.storeBit(false);\n        }\n    };\n}\nexports.storeAccountState = storeAccountState;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeCurrencyCollection = exports.loadCurrencyCollection = void 0;\nconst Dictionary_1 = require(\"../dict/Dictionary\");\n;\nfunction loadCurrencyCollection(slice) {\n    const coins = slice.loadCoins();\n    const other = slice.loadDict(Dictionary_1.Dictionary.Keys.Uint(32), Dictionary_1.Dictionary.Values.BigVarUint(5 /* log2(32) */));\n    if (other.size === 0) {\n        return { coins };\n    }\n    else {\n        return { other, coins };\n    }\n}\nexports.loadCurrencyCollection = loadCurrencyCollection;\nfunction storeCurrencyCollection(collection) {\n    return (builder) => {\n        builder.storeCoins(collection.coins);\n        if (collection.other) {\n            builder.storeDict(collection.other);\n        }\n        else {\n            builder.storeBit(0);\n        }\n    };\n}\nexports.storeCurrencyCollection = storeCurrencyCollection;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeAccountStorage = exports.loadAccountStorage = void 0;\nconst AccountState_1 = require(\"./AccountState\");\nconst CurrencyCollection_1 = require(\"./CurrencyCollection\");\nfunction loadAccountStorage(slice) {\n    return {\n        lastTransLt: slice.loadUintBig(64),\n        balance: (0, CurrencyCollection_1.loadCurrencyCollection)(slice),\n        state: (0, AccountState_1.loadAccountState)(slice)\n    };\n}\nexports.loadAccountStorage = loadAccountStorage;\nfunction storeAccountStorage(src) {\n    return (builder) => {\n        builder.storeUint(src.lastTransLt, 64);\n        builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.balance));\n        builder.store((0, AccountState_1.storeAccountState)(src.state));\n    };\n}\nexports.storeAccountStorage = storeAccountStorage;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeStorageUsed = exports.loadStorageUsed = void 0;\nfunction loadStorageUsed(cs) {\n    return {\n        cells: cs.loadVarUintBig(3),\n        bits: cs.loadVarUintBig(3),\n        publicCells: cs.loadVarUintBig(3),\n    };\n}\nexports.loadStorageUsed = loadStorageUsed;\nfunction storeStorageUsed(src) {\n    return (builder) => {\n        builder.storeVarUint(src.cells, 3);\n        builder.storeVarUint(src.bits, 3);\n        builder.storeVarUint(src.publicCells, 3);\n    };\n}\nexports.storeStorageUsed = storeStorageUsed;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeStorageInfo = exports.loadStorageInfo = void 0;\nconst StorageUsed_1 = require(\"./StorageUsed\");\nfunction loadStorageInfo(slice) {\n    return {\n        used: (0, StorageUsed_1.loadStorageUsed)(slice),\n        lastPaid: slice.loadUint(32),\n        duePayment: slice.loadMaybeCoins()\n    };\n}\nexports.loadStorageInfo = loadStorageInfo;\nfunction storeStorageInfo(src) {\n    return (builder) => {\n        builder.store((0, StorageUsed_1.storeStorageUsed)(src.used));\n        builder.storeUint(src.lastPaid, 32);\n        builder.storeMaybeCoins(src.duePayment);\n    };\n}\nexports.storeStorageInfo = storeStorageInfo;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeAccount = exports.loadAccount = void 0;\nconst AccountStorage_1 = require(\"./AccountStorage\");\nconst StorageInto_1 = require(\"./StorageInto\");\nfunction loadAccount(slice) {\n    return {\n        addr: slice.loadAddress(),\n        storageStats: (0, StorageInto_1.loadStorageInfo)(slice),\n        storage: (0, AccountStorage_1.loadAccountStorage)(slice)\n    };\n}\nexports.loadAccount = loadAccount;\nfunction storeAccount(src) {\n    return (builder) => {\n        builder.storeAddress(src.addr);\n        builder.store((0, StorageInto_1.storeStorageInfo)(src.storageStats));\n        builder.store((0, AccountStorage_1.storeAccountStorage)(src.storage));\n    };\n}\nexports.storeAccount = storeAccount;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeAccountStatus = exports.loadAccountStatus = void 0;\n/**\n * Load account state from slice\n * @param slice\n * @returns AccountState\n */\nfunction loadAccountStatus(slice) {\n    const status = slice.loadUint(2);\n    if (status === 0x00) {\n        return 'uninitialized';\n    }\n    if (status === 0x01) {\n        return 'frozen';\n    }\n    if (status === 0x02) {\n        return 'active';\n    }\n    if (status === 0x03) {\n        return 'non-existing';\n    }\n    throw Error('Invalid data');\n}\nexports.loadAccountStatus = loadAccountStatus;\n/**\n * Store account state to builder\n * @param src account state\n * @param builder buidler\n */\nfunction storeAccountStatus(src) {\n    return (builder) => {\n        if (src === 'uninitialized') {\n            builder.storeUint(0x00, 2);\n        }\n        else if (src === 'frozen') {\n            builder.storeUint(0x01, 2);\n        }\n        else if (src === 'active') {\n            builder.storeUint(0x02, 2);\n        }\n        else if (src === 'non-existing') {\n            builder.storeUint(0x03, 2);\n        }\n        else {\n            throw Error('Invalid data');\n        }\n        return builder;\n    };\n}\nexports.storeAccountStatus = storeAccountStatus;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeAccountStatusChange = exports.loadAccountStatusChange = void 0;\nfunction loadAccountStatusChange(slice) {\n    if (!slice.loadBit()) {\n        return 'unchanged';\n    }\n    if (slice.loadBit()) {\n        return 'frozen';\n    }\n    else {\n        return 'deleted';\n    }\n}\nexports.loadAccountStatusChange = loadAccountStatusChange;\nfunction storeAccountStatusChange(src) {\n    return (builder) => {\n        if (src == 'unchanged') {\n            builder.storeBit(0);\n        }\n        else if (src === 'frozen') {\n            builder.storeBit(1);\n            builder.storeBit(0);\n        }\n        else if (src === 'deleted') {\n            builder.storeBit(1);\n            builder.storeBit(1);\n        }\n        else {\n            throw Error('Invalid account status change');\n        }\n    };\n}\nexports.storeAccountStatusChange = storeAccountStatusChange;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeCommonMessageInfo = exports.loadCommonMessageInfo = void 0;\nconst CurrencyCollection_1 = require(\"./CurrencyCollection\");\nfunction loadCommonMessageInfo(slice) {\n    // Internal message\n    if (!slice.loadBit()) {\n        const ihrDisabled = slice.loadBit();\n        const bounce = slice.loadBit();\n        const bounced = slice.loadBit();\n        const src = slice.loadAddress();\n        const dest = slice.loadAddress();\n        const value = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);\n        const ihrFee = slice.loadCoins();\n        const forwardFee = slice.loadCoins();\n        const createdLt = slice.loadUintBig(64);\n        const createdAt = slice.loadUint(32);\n        return {\n            type: 'internal',\n            ihrDisabled,\n            bounce,\n            bounced,\n            src,\n            dest,\n            value,\n            ihrFee,\n            forwardFee,\n            createdLt,\n            createdAt,\n        };\n    }\n    // External In mesage\n    if (!slice.loadBit()) {\n        const src = slice.loadMaybeExternalAddress();\n        const dest = slice.loadAddress();\n        const importFee = slice.loadCoins();\n        return {\n            type: 'external-in',\n            src,\n            dest,\n            importFee,\n        };\n    }\n    // External Out message\n    const src = slice.loadAddress();\n    const dest = slice.loadMaybeExternalAddress();\n    const createdLt = slice.loadUintBig(64);\n    const createdAt = slice.loadUint(32);\n    return {\n        type: 'external-out',\n        src,\n        dest,\n        createdLt,\n        createdAt,\n    };\n}\nexports.loadCommonMessageInfo = loadCommonMessageInfo;\nfunction storeCommonMessageInfo(source) {\n    return (builder) => {\n        if (source.type === 'internal') {\n            builder.storeBit(0);\n            builder.storeBit(source.ihrDisabled);\n            builder.storeBit(source.bounce);\n            builder.storeBit(source.bounced);\n            builder.storeAddress(source.src);\n            builder.storeAddress(source.dest);\n            builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(source.value));\n            builder.storeCoins(source.ihrFee);\n            builder.storeCoins(source.forwardFee);\n            builder.storeUint(source.createdLt, 64);\n            builder.storeUint(source.createdAt, 32);\n        }\n        else if (source.type === 'external-in') {\n            builder.storeBit(1);\n            builder.storeBit(0);\n            builder.storeAddress(source.src);\n            builder.storeAddress(source.dest);\n            builder.storeCoins(source.importFee);\n        }\n        else if (source.type === 'external-out') {\n            builder.storeBit(1);\n            builder.storeBit(1);\n            builder.storeAddress(source.src);\n            builder.storeAddress(source.dest);\n            builder.storeUint(source.createdLt, 64);\n            builder.storeUint(source.createdAt, 32);\n        }\n        else {\n            throw new Error('Unknown CommonMessageInfo type');\n        }\n    };\n}\nexports.storeCommonMessageInfo = storeCommonMessageInfo;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeCommonMessageInfoRelaxed = exports.loadCommonMessageInfoRelaxed = void 0;\nconst CurrencyCollection_1 = require(\"./CurrencyCollection\");\nfunction loadCommonMessageInfoRelaxed(slice) {\n    // Internal message\n    if (!slice.loadBit()) {\n        const ihrDisabled = slice.loadBit();\n        const bounce = slice.loadBit();\n        const bounced = slice.loadBit();\n        const src = slice.loadMaybeAddress();\n        const dest = slice.loadAddress();\n        const value = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);\n        const ihrFee = slice.loadCoins();\n        const forwardFee = slice.loadCoins();\n        const createdLt = slice.loadUintBig(64);\n        const createdAt = slice.loadUint(32);\n        return {\n            type: 'internal',\n            ihrDisabled,\n            bounce,\n            bounced,\n            src,\n            dest,\n            value,\n            ihrFee,\n            forwardFee,\n            createdLt,\n            createdAt,\n        };\n    }\n    // External In mesage\n    if (!slice.loadBit()) {\n        throw Error('External In message is not possible for CommonMessageInfoRelaxed');\n    }\n    // External Out message\n    const src = slice.loadMaybeAddress();\n    const dest = slice.loadMaybeExternalAddress();\n    const createdLt = slice.loadUintBig(64);\n    const createdAt = slice.loadUint(32);\n    return {\n        type: 'external-out',\n        src,\n        dest,\n        createdLt,\n        createdAt,\n    };\n}\nexports.loadCommonMessageInfoRelaxed = loadCommonMessageInfoRelaxed;\nfunction storeCommonMessageInfoRelaxed(source) {\n    return (builder) => {\n        if (source.type === 'internal') {\n            builder.storeBit(0);\n            builder.storeBit(source.ihrDisabled);\n            builder.storeBit(source.bounce);\n            builder.storeBit(source.bounced);\n            builder.storeAddress(source.src);\n            builder.storeAddress(source.dest);\n            builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(source.value));\n            builder.storeCoins(source.ihrFee);\n            builder.storeCoins(source.forwardFee);\n            builder.storeUint(source.createdLt, 64);\n            builder.storeUint(source.createdAt, 32);\n        }\n        else if (source.type === 'external-out') {\n            builder.storeBit(1);\n            builder.storeBit(1);\n            builder.storeAddress(source.src);\n            builder.storeAddress(source.dest);\n            builder.storeUint(source.createdLt, 64);\n            builder.storeUint(source.createdAt, 32);\n        }\n        else {\n            throw new Error('Unknown CommonMessageInfo type');\n        }\n    };\n}\nexports.storeCommonMessageInfoRelaxed = storeCommonMessageInfoRelaxed;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeComputeSkipReason = exports.loadComputeSkipReason = void 0;\nfunction loadComputeSkipReason(slice) {\n    let reason = slice.loadUint(2);\n    if (reason === 0x00) {\n        return 'no-state';\n    }\n    else if (reason === 0x01) {\n        return 'bad-state';\n    }\n    else if (reason === 0x02) {\n        return 'no-gas';\n    }\n    throw new Error(`Unknown ComputeSkipReason: ${reason}`);\n}\nexports.loadComputeSkipReason = loadComputeSkipReason;\nfunction storeComputeSkipReason(src) {\n    return (builder) => {\n        if (src === 'no-state') {\n            builder.storeUint(0x00, 2);\n        }\n        else if (src === 'bad-state') {\n            builder.storeUint(0x01, 2);\n        }\n        else if (src === 'no-gas') {\n            builder.storeUint(0x02, 2);\n        }\n        else {\n            throw new Error(`Unknown ComputeSkipReason: ${src}`);\n        }\n    };\n}\nexports.storeComputeSkipReason = storeComputeSkipReason;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeDepthBalanceInfo = exports.loadDepthBalanceInfo = void 0;\nconst CurrencyCollection_1 = require(\"./CurrencyCollection\");\nfunction loadDepthBalanceInfo(slice) {\n    let splitDepth = slice.loadUint(5);\n    return {\n        splitDepth,\n        balance: (0, CurrencyCollection_1.loadCurrencyCollection)(slice)\n    };\n}\nexports.loadDepthBalanceInfo = loadDepthBalanceInfo;\nfunction storeDepthBalanceInfo(src) {\n    return (builder) => {\n        builder.storeUint(src.splitDepth, 5);\n        builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.balance));\n    };\n}\nexports.storeDepthBalanceInfo = storeDepthBalanceInfo;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeHashUpdate = exports.loadHashUpdate = void 0;\nfunction loadHashUpdate(slice) {\n    if (slice.loadUint(8) !== 0x72) {\n        throw Error('Invalid data');\n    }\n    const oldHash = slice.loadBuffer(32);\n    const newHash = slice.loadBuffer(32);\n    return { oldHash, newHash };\n}\nexports.loadHashUpdate = loadHashUpdate;\nfunction storeHashUpdate(src) {\n    return (builder) => {\n        builder.storeUint(0x72, 8);\n        builder.storeBuffer(src.oldHash);\n        builder.storeBuffer(src.newHash);\n    };\n}\nexports.storeHashUpdate = storeHashUpdate;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadMasterchainStateExtra = void 0;\nconst Dictionary_1 = require(\"../dict/Dictionary\");\nconst CurrencyCollection_1 = require(\"./CurrencyCollection\");\nfunction loadMasterchainStateExtra(cs) {\n    // Check magic\n    if (cs.loadUint(16) !== 0xcc26) {\n        throw Error('Invalid data');\n    }\n    // Skip shard_hashes\n    if (cs.loadBit()) {\n        cs.loadRef();\n    }\n    // Read config\n    let configAddress = cs.loadUintBig(256);\n    let config = Dictionary_1.Dictionary.load(Dictionary_1.Dictionary.Keys.Int(32), Dictionary_1.Dictionary.Values.Cell(), cs);\n    // Rad global balance\n    const globalBalance = (0, CurrencyCollection_1.loadCurrencyCollection)(cs);\n    return {\n        config,\n        configAddress,\n        globalBalance\n    };\n}\nexports.loadMasterchainStateExtra = loadMasterchainStateExtra;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageValue = exports.storeMessage = exports.loadMessage = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst CommonMessageInfo_1 = require(\"./CommonMessageInfo\");\nconst StateInit_1 = require(\"./StateInit\");\nfunction loadMessage(slice) {\n    const info = (0, CommonMessageInfo_1.loadCommonMessageInfo)(slice);\n    let init = null;\n    if (slice.loadBit()) {\n        if (!slice.loadBit()) {\n            init = (0, StateInit_1.loadStateInit)(slice);\n        }\n        else {\n            init = (0, StateInit_1.loadStateInit)(slice.loadRef().beginParse());\n        }\n    }\n    const body = slice.loadBit() ? slice.loadRef() : slice.asCell();\n    return {\n        info,\n        init,\n        body\n    };\n}\nexports.loadMessage = loadMessage;\nfunction storeMessage(message, opts) {\n    return (builder) => {\n        // Store CommonMsgInfo\n        builder.store((0, CommonMessageInfo_1.storeCommonMessageInfo)(message.info));\n        // Store init\n        if (message.init) {\n            builder.storeBit(true);\n            let initCell = (0, Builder_1.beginCell)().store((0, StateInit_1.storeStateInit)(message.init));\n            // Check if need to store it in ref\n            let needRef = false;\n            if (opts && opts.forceRef) {\n                needRef = true;\n            }\n            else if (builder.availableBits - 2 /* At least on byte for ref flag */ >= initCell.bits) {\n                needRef = false;\n            }\n            else {\n                needRef = true;\n            }\n            // Persist init\n            if (needRef) {\n                builder.storeBit(true);\n                builder.storeRef(initCell);\n            }\n            else {\n                builder.storeBit(false);\n                builder.storeBuilder(initCell);\n            }\n        }\n        else {\n            builder.storeBit(false);\n        }\n        // Store body\n        let needRef = false;\n        if (opts && opts.forceRef) {\n            needRef = true;\n        }\n        else {\n            if (builder.availableBits - 1 /* At least on byte for ref flag */ >= message.body.bits.length &&\n                builder.refs + message.body.refs.length <= 4) {\n                needRef = false;\n            }\n            else {\n                needRef = true;\n            }\n        }\n        if (needRef) {\n            builder.storeBit(true);\n            builder.storeRef(message.body);\n        }\n        else {\n            builder.storeBit(false);\n            builder.storeBuilder(message.body.asBuilder());\n        }\n    };\n}\nexports.storeMessage = storeMessage;\nexports.MessageValue = {\n    serialize(src, builder) {\n        builder.storeRef((0, Builder_1.beginCell)()\n            .store(storeMessage(src)));\n    },\n    parse(slice) {\n        return loadMessage(slice.loadRef().beginParse());\n    }\n};\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeMessageRelaxed = exports.loadMessageRelaxed = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst CommonMessageInfoRelaxed_1 = require(\"./CommonMessageInfoRelaxed\");\nconst StateInit_1 = require(\"./StateInit\");\nfunction loadMessageRelaxed(slice) {\n    const info = (0, CommonMessageInfoRelaxed_1.loadCommonMessageInfoRelaxed)(slice);\n    let init = null;\n    if (slice.loadBit()) {\n        if (!slice.loadBit()) {\n            init = (0, StateInit_1.loadStateInit)(slice);\n        }\n        else {\n            init = (0, StateInit_1.loadStateInit)(slice.loadRef().beginParse());\n        }\n    }\n    const body = slice.loadBit() ? slice.loadRef() : slice.asCell();\n    return {\n        info,\n        init,\n        body\n    };\n}\nexports.loadMessageRelaxed = loadMessageRelaxed;\nfunction storeMessageRelaxed(message, opts) {\n    return (builder) => {\n        // Store CommonMsgInfo\n        builder.store((0, CommonMessageInfoRelaxed_1.storeCommonMessageInfoRelaxed)(message.info));\n        // Store init\n        if (message.init) {\n            builder.storeBit(true);\n            let initCell = (0, Builder_1.beginCell)().store((0, StateInit_1.storeStateInit)(message.init));\n            // Check if ref is needed\n            let needRef = false;\n            if (opts && opts.forceRef) {\n                needRef = true;\n            }\n            else {\n                if (builder.availableBits - 2 /* At least on byte for ref flag */ >= initCell.bits) {\n                    needRef = false;\n                }\n                else {\n                    needRef = true;\n                }\n            }\n            // Store ref\n            if (needRef) {\n                builder.storeBit(true);\n                builder.storeRef(initCell);\n            }\n            else {\n                builder.storeBit(false);\n                builder.storeBuilder(initCell);\n            }\n        }\n        else {\n            builder.storeBit(false);\n        }\n        // Store body\n        let needRef = false;\n        if (opts && opts.forceRef) {\n            needRef = true;\n        }\n        else {\n            if (builder.availableBits - 1 /* At least on byte for ref flag */ >= message.body.bits.length &&\n                builder.refs + message.body.refs.length <= 4) {\n                needRef = false;\n            }\n            else {\n                needRef = true;\n            }\n        }\n        if (needRef) {\n            builder.storeBit(true);\n            builder.storeRef(message.body);\n        }\n        else {\n            builder.storeBit(false);\n            builder.storeBuilder(message.body.asBuilder());\n        }\n    };\n}\nexports.storeMessageRelaxed = storeMessageRelaxed;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendMode = void 0;\nvar SendMode;\n(function (SendMode) {\n    SendMode[SendMode[\"CARRY_ALL_REMAINING_BALANCE\"] = 128] = \"CARRY_ALL_REMAINING_BALANCE\";\n    SendMode[SendMode[\"CARRY_ALL_REMAINING_INCOMING_VALUE\"] = 64] = \"CARRY_ALL_REMAINING_INCOMING_VALUE\";\n    SendMode[SendMode[\"DESTROY_ACCOUNT_IF_ZERO\"] = 32] = \"DESTROY_ACCOUNT_IF_ZERO\";\n    SendMode[SendMode[\"PAY_GAS_SEPARATELY\"] = 1] = \"PAY_GAS_SEPARATELY\";\n    SendMode[SendMode[\"IGNORE_ERRORS\"] = 2] = \"IGNORE_ERRORS\";\n    SendMode[SendMode[\"NONE\"] = 0] = \"NONE\";\n})(SendMode = exports.SendMode || (exports.SendMode = {}));\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeShardAccount = exports.loadShardAccount = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst Account_1 = require(\"./Account\");\nfunction loadShardAccount(slice) {\n    let accountRef = slice.loadRef();\n    let account = undefined;\n    if (!accountRef.isExotic) {\n        let accountSlice = accountRef.beginParse();\n        if (accountSlice.loadBit()) {\n            account = (0, Account_1.loadAccount)(accountSlice);\n        }\n    }\n    return {\n        account,\n        lastTransactionHash: slice.loadUintBig(256),\n        lastTransactionLt: slice.loadUintBig(64)\n    };\n}\nexports.loadShardAccount = loadShardAccount;\nfunction storeShardAccount(src) {\n    return (builder) => {\n        if (src.account) {\n            builder.storeRef((0, Builder_1.beginCell)()\n                .storeBit(true)\n                .store((0, Account_1.storeAccount)(src.account)));\n        }\n        else {\n            builder.storeRef((0, Builder_1.beginCell)()\n                .storeBit(false));\n        }\n        builder.storeUint(src.lastTransactionHash, 256);\n        builder.storeUint(src.lastTransactionLt, 64);\n    };\n}\nexports.storeShardAccount = storeShardAccount;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeShardAccounts = exports.loadShardAccounts = exports.ShardAccountRefValue = void 0;\nconst Dictionary_1 = require(\"../dict/Dictionary\");\nconst DepthBalanceInfo_1 = require(\"./DepthBalanceInfo\");\nconst ShardAccount_1 = require(\"./ShardAccount\");\nexports.ShardAccountRefValue = {\n    parse: (cs) => {\n        let depthBalanceInfo = (0, DepthBalanceInfo_1.loadDepthBalanceInfo)(cs);\n        let shardAccount = (0, ShardAccount_1.loadShardAccount)(cs);\n        return {\n            depthBalanceInfo,\n            shardAccount\n        };\n    },\n    serialize(src, builder) {\n        builder.store((0, DepthBalanceInfo_1.storeDepthBalanceInfo)(src.depthBalanceInfo));\n        builder.store((0, ShardAccount_1.storeShardAccount)(src.shardAccount));\n    },\n};\nfunction loadShardAccounts(cs) {\n    return Dictionary_1.Dictionary.load(Dictionary_1.Dictionary.Keys.BigUint(256), exports.ShardAccountRefValue, cs);\n}\nexports.loadShardAccounts = loadShardAccounts;\nfunction storeShardAccounts(src) {\n    return (Builder) => {\n        Builder.storeDict(src);\n    };\n}\nexports.storeShardAccounts = storeShardAccounts;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeShardIdent = exports.loadShardIdent = void 0;\nfunction loadShardIdent(slice) {\n    if (slice.loadUint(2) !== 0) {\n        throw Error('Invalid data');\n    }\n    return {\n        shardPrefixBits: slice.loadUint(6),\n        workchainId: slice.loadInt(32),\n        shardPrefix: slice.loadUintBig(64)\n    };\n}\nexports.loadShardIdent = loadShardIdent;\nfunction storeShardIdent(src) {\n    return (builder) => {\n        builder.storeUint(0, 2);\n        builder.storeUint(src.shardPrefixBits, 6);\n        builder.storeInt(src.workchainId, 32);\n        builder.storeUint(src.shardPrefix, 64);\n    };\n}\nexports.storeShardIdent = storeShardIdent;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadShardStateUnsplit = void 0;\nconst MasterchainStateExtra_1 = require(\"./MasterchainStateExtra\");\nconst ShardAccounts_1 = require(\"./ShardAccounts\");\nconst ShardIdent_1 = require(\"./ShardIdent\");\nfunction loadShardStateUnsplit(cs) {\n    if (cs.loadUint(32) !== 0x9023afe2) {\n        throw Error('Invalid data');\n    }\n    let globalId = cs.loadInt(32);\n    let shardId = (0, ShardIdent_1.loadShardIdent)(cs);\n    let seqno = cs.loadUint(32);\n    let vertSeqNo = cs.loadUint(32);\n    let genUtime = cs.loadUint(32);\n    let genLt = cs.loadUintBig(64);\n    let minRefMcSeqno = cs.loadUint(32);\n    // Skip OutMsgQueueInfo: usually exotic\n    cs.loadRef();\n    let beforeSplit = cs.loadBit();\n    // Parse accounts\n    let shardAccountsRef = cs.loadRef();\n    let accounts = undefined;\n    if (!shardAccountsRef.isExotic) {\n        accounts = (0, ShardAccounts_1.loadShardAccounts)(shardAccountsRef.beginParse());\n    }\n    // Skip (not used by apps)\n    cs.loadRef();\n    // Parse extras\n    let mcStateExtra = cs.loadBit();\n    let extras = null;\n    if (mcStateExtra) {\n        let cell = cs.loadRef();\n        if (!cell.isExotic) {\n            extras = (0, MasterchainStateExtra_1.loadMasterchainStateExtra)(cell.beginParse());\n        }\n    }\n    ;\n    return {\n        globalId,\n        shardId,\n        seqno,\n        vertSeqNo,\n        genUtime,\n        genLt,\n        minRefMcSeqno,\n        beforeSplit,\n        accounts,\n        extras\n    };\n}\nexports.loadShardStateUnsplit = loadShardStateUnsplit;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeSplitMergeInfo = exports.loadSplitMergeInfo = void 0;\nfunction loadSplitMergeInfo(slice) {\n    let currentShardPrefixLength = slice.loadUint(6);\n    let accountSplitDepth = slice.loadUint(6);\n    let thisAddress = slice.loadUintBig(256);\n    let siblingAddress = slice.loadUintBig(256);\n    return {\n        currentShardPrefixLength,\n        accountSplitDepth,\n        thisAddress,\n        siblingAddress\n    };\n}\nexports.loadSplitMergeInfo = loadSplitMergeInfo;\nfunction storeSplitMergeInfo(src) {\n    return (builder) => {\n        builder.storeUint(src.currentShardPrefixLength, 6);\n        builder.storeUint(src.accountSplitDepth, 6);\n        builder.storeUint(src.thisAddress, 256);\n        builder.storeUint(src.siblingAddress, 256);\n    };\n}\nexports.storeSplitMergeInfo = storeSplitMergeInfo;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeStorageUsedShort = exports.loadStorageUsedShort = void 0;\nfunction loadStorageUsedShort(slice) {\n    let cells = slice.loadVarUintBig(3);\n    let bits = slice.loadVarUintBig(3);\n    return {\n        cells,\n        bits\n    };\n}\nexports.loadStorageUsedShort = loadStorageUsedShort;\nfunction storeStorageUsedShort(src) {\n    return (builder) => {\n        builder.storeVarUint(src.cells, 3);\n        builder.storeVarUint(src.bits, 3);\n    };\n}\nexports.storeStorageUsedShort = storeStorageUsedShort;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTransactionActionPhase = exports.loadTransactionActionPhase = void 0;\nconst AccountStatusChange_1 = require(\"./AccountStatusChange\");\nconst StorageUsedShort_1 = require(\"./StorageUsedShort\");\nfunction loadTransactionActionPhase(slice) {\n    let success = slice.loadBit();\n    let valid = slice.loadBit();\n    let noFunds = slice.loadBit();\n    let statusChange = (0, AccountStatusChange_1.loadAccountStatusChange)(slice);\n    let totalFwdFees = slice.loadBit() ? slice.loadCoins() : undefined;\n    let totalActionFees = slice.loadBit() ? slice.loadCoins() : undefined;\n    let resultCode = slice.loadInt(32);\n    let resultArg = slice.loadBit() ? slice.loadInt(32) : undefined;\n    let totalActions = slice.loadUint(16);\n    let specActions = slice.loadUint(16);\n    let skippedActions = slice.loadUint(16);\n    let messagesCreated = slice.loadUint(16);\n    let actionListHash = slice.loadUintBig(256);\n    let totalMessageSize = (0, StorageUsedShort_1.loadStorageUsedShort)(slice);\n    return {\n        success,\n        valid,\n        noFunds,\n        statusChange,\n        totalFwdFees,\n        totalActionFees,\n        resultCode,\n        resultArg,\n        totalActions,\n        specActions,\n        skippedActions,\n        messagesCreated,\n        actionListHash,\n        totalMessageSize\n    };\n}\nexports.loadTransactionActionPhase = loadTransactionActionPhase;\nfunction storeTransactionActionPhase(src) {\n    return (builder) => {\n        builder.storeBit(src.success);\n        builder.storeBit(src.valid);\n        builder.storeBit(src.noFunds);\n        builder.store((0, AccountStatusChange_1.storeAccountStatusChange)(src.statusChange));\n        builder.storeMaybeCoins(src.totalFwdFees);\n        builder.storeMaybeCoins(src.totalActionFees);\n        builder.storeInt(src.resultCode, 32);\n        builder.storeMaybeInt(src.resultArg, 32);\n        builder.storeUint(src.totalActions, 16);\n        builder.storeUint(src.specActions, 16);\n        builder.storeUint(src.skippedActions, 16);\n        builder.storeUint(src.messagesCreated, 16);\n        builder.storeUint(src.actionListHash, 256);\n        builder.store((0, StorageUsedShort_1.storeStorageUsedShort)(src.totalMessageSize));\n    };\n}\nexports.storeTransactionActionPhase = storeTransactionActionPhase;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTransactionBouncePhase = exports.loadTransactionBouncePhase = void 0;\nconst StorageUsedShort_1 = require(\"./StorageUsedShort\");\nfunction loadTransactionBouncePhase(slice) {\n    // Ok\n    if (slice.loadBit()) {\n        let messageSize = (0, StorageUsedShort_1.loadStorageUsedShort)(slice);\n        let messageFees = slice.loadCoins();\n        let forwardFees = slice.loadCoins();\n        return {\n            type: \"ok\",\n            messageSize,\n            messageFees,\n            forwardFees,\n        };\n    }\n    // No funds\n    if (slice.loadBit()) {\n        let messageSize = (0, StorageUsedShort_1.loadStorageUsedShort)(slice);\n        let requiredForwardFees = slice.loadCoins();\n        return {\n            type: \"no-funds\",\n            messageSize,\n            requiredForwardFees,\n        };\n    }\n    // Negative funds\n    return {\n        type: \"negative-funds\",\n    };\n}\nexports.loadTransactionBouncePhase = loadTransactionBouncePhase;\nfunction storeTransactionBouncePhase(src) {\n    return (builder) => {\n        if (src.type === 'ok') {\n            builder.storeBit(true);\n            builder.store((0, StorageUsedShort_1.storeStorageUsedShort)(src.messageSize));\n            builder.storeCoins(src.messageFees);\n            builder.storeCoins(src.forwardFees);\n        }\n        else if (src.type === 'negative-funds') {\n            builder.storeBit(false);\n            builder.storeBit(false);\n        }\n        else if (src.type === 'no-funds') {\n            builder.storeBit(false);\n            builder.storeBit(true);\n            builder.store((0, StorageUsedShort_1.storeStorageUsedShort)(src.messageSize));\n            builder.storeCoins(src.requiredForwardFees);\n        }\n        else {\n            throw new Error(\"Invalid TransactionBouncePhase type\");\n        }\n    };\n}\nexports.storeTransactionBouncePhase = storeTransactionBouncePhase;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTransactionComputePhase = exports.loadTransactionComputePhase = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst ComputeSkipReason_1 = require(\"./ComputeSkipReason\");\nfunction loadTransactionComputePhase(slice) {\n    // Skipped\n    if (!slice.loadBit()) {\n        let reason = (0, ComputeSkipReason_1.loadComputeSkipReason)(slice);\n        return {\n            type: 'skipped',\n            reason\n        };\n    }\n    let success = slice.loadBit();\n    let messageStateUsed = slice.loadBit();\n    let accountActivated = slice.loadBit();\n    let gasFees = slice.loadCoins();\n    const vmState = slice.loadRef().beginParse();\n    let gasUsed = vmState.loadVarUintBig(3);\n    let gasLimit = vmState.loadVarUintBig(3);\n    let gasCredit = vmState.loadBit() ? vmState.loadVarUintBig(2) : undefined;\n    let mode = vmState.loadUint(8);\n    let exitCode = vmState.loadUint(32);\n    let exitArg = vmState.loadBit() ? vmState.loadInt(32) : undefined;\n    let vmSteps = vmState.loadUint(32);\n    let vmInitStateHash = vmState.loadUintBig(256);\n    let vmFinalStateHash = vmState.loadUintBig(256);\n    return {\n        type: 'vm',\n        success,\n        messageStateUsed,\n        accountActivated,\n        gasFees,\n        gasUsed,\n        gasLimit,\n        gasCredit,\n        mode,\n        exitCode,\n        exitArg,\n        vmSteps,\n        vmInitStateHash,\n        vmFinalStateHash\n    };\n}\nexports.loadTransactionComputePhase = loadTransactionComputePhase;\nfunction storeTransactionComputePhase(src) {\n    return (builder) => {\n        if (src.type === 'skipped') {\n            builder.storeBit(0);\n            builder.store((0, ComputeSkipReason_1.storeComputeSkipReason)(src.reason));\n            return;\n        }\n        builder.storeBit(1);\n        builder.storeBit(src.success);\n        builder.storeBit(src.messageStateUsed);\n        builder.storeBit(src.accountActivated);\n        builder.storeCoins(src.gasFees);\n        builder.storeRef((0, Builder_1.beginCell)()\n            .storeVarUint(src.gasUsed, 3)\n            .storeVarUint(src.gasLimit, 3)\n            .store((b) => (src.gasCredit !== undefined && src.gasCredit !== null) ? b.storeBit(1).storeVarUint(src.gasCredit, 2) : b.storeBit(0))\n            .storeUint(src.mode, 8)\n            .storeUint(src.exitCode, 32)\n            .store((b) => (src.exitArg !== undefined && src.exitArg !== null) ? b.storeBit(1).storeInt(src.exitArg, 32) : b.storeBit(0))\n            .storeUint(src.vmSteps, 32)\n            .storeUint(src.vmInitStateHash, 256)\n            .storeUint(src.vmFinalStateHash, 256)\n            .endCell());\n    };\n}\nexports.storeTransactionComputePhase = storeTransactionComputePhase;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTransactionCreditPhase = exports.loadTransactionCreditPhase = void 0;\nconst CurrencyCollection_1 = require(\"./CurrencyCollection\");\nfunction loadTransactionCreditPhase(slice) {\n    const dueFeesColelcted = slice.loadBit() ? slice.loadCoins() : undefined;\n    const credit = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);\n    return {\n        dueFeesColelcted,\n        credit\n    };\n}\nexports.loadTransactionCreditPhase = loadTransactionCreditPhase;\nfunction storeTransactionCreditPhase(src) {\n    return (builder) => {\n        if (src.dueFeesColelcted === null || src.dueFeesColelcted === undefined) {\n            builder.storeBit(false);\n        }\n        else {\n            builder.storeBit(true);\n            builder.storeCoins(src.dueFeesColelcted);\n        }\n        builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.credit));\n    };\n}\nexports.storeTransactionCreditPhase = storeTransactionCreditPhase;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTransactionsStoragePhase = exports.loadTransactionStoragePhase = void 0;\nconst AccountStatusChange_1 = require(\"./AccountStatusChange\");\nfunction loadTransactionStoragePhase(slice) {\n    const storageFeesCollected = slice.loadCoins();\n    let storageFeesDue = undefined;\n    if (slice.loadBit()) {\n        storageFeesDue = slice.loadCoins();\n    }\n    const statusChange = (0, AccountStatusChange_1.loadAccountStatusChange)(slice);\n    return {\n        storageFeesCollected,\n        storageFeesDue,\n        statusChange\n    };\n}\nexports.loadTransactionStoragePhase = loadTransactionStoragePhase;\nfunction storeTransactionsStoragePhase(src) {\n    return (builder) => {\n        builder.storeCoins(src.storageFeesCollected);\n        if (src.storageFeesDue === null || src.storageFeesDue === undefined) {\n            builder.storeBit(false);\n        }\n        else {\n            builder.storeBit(true);\n            builder.storeCoins(src.storageFeesDue);\n        }\n        builder.store((0, AccountStatusChange_1.storeAccountStatusChange)(src.statusChange));\n    };\n}\nexports.storeTransactionsStoragePhase = storeTransactionsStoragePhase;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTransactionDescription = exports.loadTransactionDescription = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst SplitMergeInfo_1 = require(\"./SplitMergeInfo\");\nconst Transaction_1 = require(\"./Transaction\");\nconst TransactionActionPhase_1 = require(\"./TransactionActionPhase\");\nconst TransactionBouncePhase_1 = require(\"./TransactionBouncePhase\");\nconst TransactionComputePhase_1 = require(\"./TransactionComputePhase\");\nconst TransactionCreditPhase_1 = require(\"./TransactionCreditPhase\");\nconst TransactionStoragePhase_1 = require(\"./TransactionStoragePhase\");\nfunction loadTransactionDescription(slice) {\n    let type = slice.loadUint(4);\n    if (type === 0x00) {\n        const creditFirst = slice.loadBit();\n        let storagePhase = undefined;\n        if (slice.loadBit()) {\n            storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);\n        }\n        let creditPhase = undefined;\n        if (slice.loadBit()) {\n            creditPhase = (0, TransactionCreditPhase_1.loadTransactionCreditPhase)(slice);\n        }\n        let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);\n        let actionPhase = undefined;\n        if (slice.loadBit()) {\n            actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());\n        }\n        let aborted = slice.loadBit();\n        let bouncePhase = undefined;\n        if (slice.loadBit()) {\n            bouncePhase = (0, TransactionBouncePhase_1.loadTransactionBouncePhase)(slice);\n        }\n        const destroyed = slice.loadBit();\n        return {\n            type: 'generic',\n            creditFirst,\n            storagePhase,\n            creditPhase,\n            computePhase,\n            actionPhase,\n            bouncePhase,\n            aborted,\n            destroyed\n        };\n    }\n    if (type === 0x01) {\n        return {\n            type: 'storage',\n            storagePhase: (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice)\n        };\n    }\n    if (type === 0x2 || type === 0x03) {\n        const isTock = type === 0x03;\n        let storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);\n        let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);\n        let actionPhase = undefined;\n        if (slice.loadBit()) {\n            actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());\n        }\n        const aborted = slice.loadBit();\n        const destroyed = slice.loadBit();\n        return {\n            type: 'tick-tock',\n            isTock,\n            storagePhase,\n            computePhase,\n            actionPhase,\n            aborted,\n            destroyed\n        };\n    }\n    if (type === 0x04) {\n        let splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);\n        let storagePhase = undefined;\n        if (slice.loadBit()) {\n            storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);\n        }\n        let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);\n        let actionPhase = undefined;\n        if (slice.loadBit()) {\n            actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());\n        }\n        const aborted = slice.loadBit();\n        const destroyed = slice.loadBit();\n        return {\n            type: 'split-prepare',\n            splitInfo,\n            storagePhase,\n            computePhase,\n            actionPhase,\n            aborted,\n            destroyed\n        };\n    }\n    if (type === 0x05) {\n        let splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);\n        let prepareTransaction = (0, Transaction_1.loadTransaction)(slice.loadRef().beginParse());\n        const installed = slice.loadBit();\n        return {\n            type: 'split-install',\n            splitInfo,\n            prepareTransaction,\n            installed\n        };\n    }\n    throw Error(`Unsupported transaction description type ${type}`);\n}\nexports.loadTransactionDescription = loadTransactionDescription;\nfunction storeTransactionDescription(src) {\n    return (builder) => {\n        if (src.type === 'generic') {\n            builder.storeUint(0x00, 4);\n            builder.storeBit(src.creditFirst);\n            if (src.storagePhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            if (src.creditPhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionCreditPhase_1.storeTransactionCreditPhase)(src.creditPhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));\n            if (src.actionPhase) {\n                builder.storeBit(true);\n                builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.storeBit(src.aborted);\n            if (src.bouncePhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionBouncePhase_1.storeTransactionBouncePhase)(src.bouncePhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.storeBit(src.destroyed);\n        }\n        else if (src.type === 'storage') {\n            builder.storeUint(0x01, 4);\n            builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n        }\n        else if (src.type === 'tick-tock') {\n            builder.storeUint(src.isTock ? 0x03 : 0x02, 4);\n            builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n            builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));\n            if (src.actionPhase) {\n                builder.storeBit(true);\n                builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.storeBit(src.aborted);\n            builder.storeBit(src.destroyed);\n        }\n        else if (src.type === 'split-prepare') {\n            builder.storeUint(0x04, 4);\n            builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));\n            if (src.storagePhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));\n            if (src.actionPhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.storeBit(src.aborted);\n            builder.storeBit(src.destroyed);\n        }\n        else if (src.type === 'split-install') {\n            builder.storeUint(0x05, 4);\n            builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));\n            builder.storeRef((0, Builder_1.beginCell)().store((0, Transaction_1.storeTransaction)(src.prepareTransaction)));\n            builder.storeBit(src.installed);\n        }\n        else {\n            throw Error(`Unsupported transaction description type ${src.type}`);\n        }\n    };\n}\nexports.storeTransactionDescription = storeTransactionDescription;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTransaction = exports.loadTransaction = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst Dictionary_1 = require(\"../dict/Dictionary\");\nconst AccountStatus_1 = require(\"./AccountStatus\");\nconst CurrencyCollection_1 = require(\"./CurrencyCollection\");\nconst HashUpdate_1 = require(\"./HashUpdate\");\nconst Message_1 = require(\"./Message\");\nconst TransactionDescription_1 = require(\"./TransactionDescription\");\nfunction loadTransaction(slice) {\n    if (slice.loadUint(4) !== 0x07) {\n        throw Error('Invalid data');\n    }\n    let address = slice.loadUintBig(256);\n    let lt = slice.loadUintBig(64);\n    let prevTransactionHash = slice.loadUintBig(256);\n    let prevTransactionLt = slice.loadUintBig(64);\n    let now = slice.loadUint(32);\n    let outMessagesCount = slice.loadUint(15);\n    let oldStatus = (0, AccountStatus_1.loadAccountStatus)(slice);\n    let endStatus = (0, AccountStatus_1.loadAccountStatus)(slice);\n    let msgRef = slice.loadRef();\n    let msgSlice = msgRef.beginParse();\n    let inMessage = msgSlice.loadBit() ? (0, Message_1.loadMessage)(msgSlice.loadRef().beginParse()) : undefined;\n    let outMessages = msgSlice.loadDict(Dictionary_1.Dictionary.Keys.Uint(15), Message_1.MessageValue);\n    msgSlice.endParse();\n    let totalFees = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);\n    let stateUpdate = (0, HashUpdate_1.loadHashUpdate)(slice.loadRef().beginParse());\n    let description = (0, TransactionDescription_1.loadTransactionDescription)(slice.loadRef().beginParse());\n    return {\n        address,\n        lt,\n        prevTransactionHash,\n        prevTransactionLt,\n        now,\n        outMessagesCount,\n        oldStatus,\n        endStatus,\n        inMessage,\n        outMessages,\n        totalFees,\n        stateUpdate,\n        description,\n    };\n}\nexports.loadTransaction = loadTransaction;\nfunction storeTransaction(src) {\n    return (builder) => {\n        builder.storeUint(0x07, 4);\n        builder.storeUint(src.address, 256);\n        builder.storeUint(src.lt, 64);\n        builder.storeUint(src.prevTransactionHash, 256);\n        builder.storeUint(src.prevTransactionLt, 64);\n        builder.storeUint(src.now, 32);\n        builder.storeUint(src.outMessagesCount, 15);\n        builder.store((0, AccountStatus_1.storeAccountStatus)(src.oldStatus));\n        builder.store((0, AccountStatus_1.storeAccountStatus)(src.endStatus));\n        let msgBuilder = (0, Builder_1.beginCell)();\n        if (src.inMessage) {\n            msgBuilder.storeBit(true);\n            msgBuilder.storeRef((0, Builder_1.beginCell)().store((0, Message_1.storeMessage)(src.inMessage)));\n        }\n        else {\n            msgBuilder.storeBit(false);\n        }\n        msgBuilder.storeDict(src.outMessages);\n        builder.storeRef(msgBuilder);\n        builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.totalFees));\n        builder.storeRef((0, Builder_1.beginCell)().store((0, HashUpdate_1.storeHashUpdate)(src.stateUpdate)));\n        builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionDescription_1.storeTransactionDescription)(src.description)));\n    };\n}\nexports.storeTransaction = storeTransaction;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadStorageUsedShort = exports.storeStorageUsed = exports.loadStorageUsed = exports.storeStorageInfo = exports.loadStorageInfo = exports.storeStateInit = exports.loadStateInit = exports.storeSplitMergeInfo = exports.loadSplitMergeInfo = exports.storeSimpleLibrary = exports.loadSimpleLibrary = exports.loadShardStateUnsplit = exports.storeShardIdent = exports.loadShardIdent = exports.storeShardAccounts = exports.loadShardAccounts = exports.ShardAccountRefValue = exports.storeShardAccount = exports.loadShardAccount = exports.SendMode = exports.storeMessageRelaxed = exports.loadMessageRelaxed = exports.storeMessage = exports.loadMessage = exports.loadMasterchainStateExtra = exports.storeHashUpdate = exports.loadHashUpdate = exports.storeDepthBalanceInfo = exports.loadDepthBalanceInfo = exports.storeCurrencyCollection = exports.loadCurrencyCollection = exports.storeComputeSkipReason = exports.loadComputeSkipReason = exports.storeCommonMessageInfoRelaxed = exports.loadCommonMessageInfoRelaxed = exports.storeCommonMessageInfo = exports.loadCommonMessageInfo = exports.storeAccountStorage = exports.loadAccountStorage = exports.storeAccountStatusChange = exports.loadAccountStatusChange = exports.storeAccountStatus = exports.loadAccountStatus = exports.storeAccountState = exports.loadAccountState = exports.storeAccount = exports.loadAccount = exports.comment = exports.external = exports.internal = void 0;\nexports.storeTransactionsStoragePhase = exports.loadTransactionStoragePhase = exports.storeTransactionDescription = exports.loadTransactionDescription = exports.storeTransactionCreditPhase = exports.loadTransactionCreditPhase = exports.storeTransactionComputePhase = exports.loadTransactionComputePhase = exports.storeTransactionBouncePhase = exports.loadTransactionBouncePhase = exports.storeTransactionActionPhase = exports.loadTransactionActionPhase = exports.storeTransaction = exports.loadTransaction = exports.storeTickTock = exports.loadTickTock = exports.storeStorageUsedShort = void 0;\nvar _helpers_1 = require(\"./_helpers\");\nObject.defineProperty(exports, \"internal\", { enumerable: true, get: function () { return _helpers_1.internal; } });\nObject.defineProperty(exports, \"external\", { enumerable: true, get: function () { return _helpers_1.external; } });\nObject.defineProperty(exports, \"comment\", { enumerable: true, get: function () { return _helpers_1.comment; } });\nvar Account_1 = require(\"./Account\");\nObject.defineProperty(exports, \"loadAccount\", { enumerable: true, get: function () { return Account_1.loadAccount; } });\nObject.defineProperty(exports, \"storeAccount\", { enumerable: true, get: function () { return Account_1.storeAccount; } });\nvar AccountState_1 = require(\"./AccountState\");\nObject.defineProperty(exports, \"loadAccountState\", { enumerable: true, get: function () { return AccountState_1.loadAccountState; } });\nObject.defineProperty(exports, \"storeAccountState\", { enumerable: true, get: function () { return AccountState_1.storeAccountState; } });\nvar AccountStatus_1 = require(\"./AccountStatus\");\nObject.defineProperty(exports, \"loadAccountStatus\", { enumerable: true, get: function () { return AccountStatus_1.loadAccountStatus; } });\nObject.defineProperty(exports, \"storeAccountStatus\", { enumerable: true, get: function () { return AccountStatus_1.storeAccountStatus; } });\nvar AccountStatusChange_1 = require(\"./AccountStatusChange\");\nObject.defineProperty(exports, \"loadAccountStatusChange\", { enumerable: true, get: function () { return AccountStatusChange_1.loadAccountStatusChange; } });\nObject.defineProperty(exports, \"storeAccountStatusChange\", { enumerable: true, get: function () { return AccountStatusChange_1.storeAccountStatusChange; } });\nvar AccountStorage_1 = require(\"./AccountStorage\");\nObject.defineProperty(exports, \"loadAccountStorage\", { enumerable: true, get: function () { return AccountStorage_1.loadAccountStorage; } });\nObject.defineProperty(exports, \"storeAccountStorage\", { enumerable: true, get: function () { return AccountStorage_1.storeAccountStorage; } });\nvar CommonMessageInfo_1 = require(\"./CommonMessageInfo\");\nObject.defineProperty(exports, \"loadCommonMessageInfo\", { enumerable: true, get: function () { return CommonMessageInfo_1.loadCommonMessageInfo; } });\nObject.defineProperty(exports, \"storeCommonMessageInfo\", { enumerable: true, get: function () { return CommonMessageInfo_1.storeCommonMessageInfo; } });\nvar CommonMessageInfoRelaxed_1 = require(\"./CommonMessageInfoRelaxed\");\nObject.defineProperty(exports, \"loadCommonMessageInfoRelaxed\", { enumerable: true, get: function () { return CommonMessageInfoRelaxed_1.loadCommonMessageInfoRelaxed; } });\nObject.defineProperty(exports, \"storeCommonMessageInfoRelaxed\", { enumerable: true, get: function () { return CommonMessageInfoRelaxed_1.storeCommonMessageInfoRelaxed; } });\nvar ComputeSkipReason_1 = require(\"./ComputeSkipReason\");\nObject.defineProperty(exports, \"loadComputeSkipReason\", { enumerable: true, get: function () { return ComputeSkipReason_1.loadComputeSkipReason; } });\nObject.defineProperty(exports, \"storeComputeSkipReason\", { enumerable: true, get: function () { return ComputeSkipReason_1.storeComputeSkipReason; } });\nvar CurrencyCollection_1 = require(\"./CurrencyCollection\");\nObject.defineProperty(exports, \"loadCurrencyCollection\", { enumerable: true, get: function () { return CurrencyCollection_1.loadCurrencyCollection; } });\nObject.defineProperty(exports, \"storeCurrencyCollection\", { enumerable: true, get: function () { return CurrencyCollection_1.storeCurrencyCollection; } });\nvar DepthBalanceInfo_1 = require(\"./DepthBalanceInfo\");\nObject.defineProperty(exports, \"loadDepthBalanceInfo\", { enumerable: true, get: function () { return DepthBalanceInfo_1.loadDepthBalanceInfo; } });\nObject.defineProperty(exports, \"storeDepthBalanceInfo\", { enumerable: true, get: function () { return DepthBalanceInfo_1.storeDepthBalanceInfo; } });\nvar HashUpdate_1 = require(\"./HashUpdate\");\nObject.defineProperty(exports, \"loadHashUpdate\", { enumerable: true, get: function () { return HashUpdate_1.loadHashUpdate; } });\nObject.defineProperty(exports, \"storeHashUpdate\", { enumerable: true, get: function () { return HashUpdate_1.storeHashUpdate; } });\nvar MasterchainStateExtra_1 = require(\"./MasterchainStateExtra\");\nObject.defineProperty(exports, \"loadMasterchainStateExtra\", { enumerable: true, get: function () { return MasterchainStateExtra_1.loadMasterchainStateExtra; } });\nvar Message_1 = require(\"./Message\");\nObject.defineProperty(exports, \"loadMessage\", { enumerable: true, get: function () { return Message_1.loadMessage; } });\nObject.defineProperty(exports, \"storeMessage\", { enumerable: true, get: function () { return Message_1.storeMessage; } });\nvar MessageRelaxed_1 = require(\"./MessageRelaxed\");\nObject.defineProperty(exports, \"loadMessageRelaxed\", { enumerable: true, get: function () { return MessageRelaxed_1.loadMessageRelaxed; } });\nObject.defineProperty(exports, \"storeMessageRelaxed\", { enumerable: true, get: function () { return MessageRelaxed_1.storeMessageRelaxed; } });\nvar SendMode_1 = require(\"./SendMode\");\nObject.defineProperty(exports, \"SendMode\", { enumerable: true, get: function () { return SendMode_1.SendMode; } });\nvar ShardAccount_1 = require(\"./ShardAccount\");\nObject.defineProperty(exports, \"loadShardAccount\", { enumerable: true, get: function () { return ShardAccount_1.loadShardAccount; } });\nObject.defineProperty(exports, \"storeShardAccount\", { enumerable: true, get: function () { return ShardAccount_1.storeShardAccount; } });\nvar ShardAccounts_1 = require(\"./ShardAccounts\");\nObject.defineProperty(exports, \"ShardAccountRefValue\", { enumerable: true, get: function () { return ShardAccounts_1.ShardAccountRefValue; } });\nObject.defineProperty(exports, \"loadShardAccounts\", { enumerable: true, get: function () { return ShardAccounts_1.loadShardAccounts; } });\nObject.defineProperty(exports, \"storeShardAccounts\", { enumerable: true, get: function () { return ShardAccounts_1.storeShardAccounts; } });\nvar ShardIdent_1 = require(\"./ShardIdent\");\nObject.defineProperty(exports, \"loadShardIdent\", { enumerable: true, get: function () { return ShardIdent_1.loadShardIdent; } });\nObject.defineProperty(exports, \"storeShardIdent\", { enumerable: true, get: function () { return ShardIdent_1.storeShardIdent; } });\nvar ShardStateUnsplit_1 = require(\"./ShardStateUnsplit\");\nObject.defineProperty(exports, \"loadShardStateUnsplit\", { enumerable: true, get: function () { return ShardStateUnsplit_1.loadShardStateUnsplit; } });\nvar SimpleLibrary_1 = require(\"./SimpleLibrary\");\nObject.defineProperty(exports, \"loadSimpleLibrary\", { enumerable: true, get: function () { return SimpleLibrary_1.loadSimpleLibrary; } });\nObject.defineProperty(exports, \"storeSimpleLibrary\", { enumerable: true, get: function () { return SimpleLibrary_1.storeSimpleLibrary; } });\nvar SplitMergeInfo_1 = require(\"./SplitMergeInfo\");\nObject.defineProperty(exports, \"loadSplitMergeInfo\", { enumerable: true, get: function () { return SplitMergeInfo_1.loadSplitMergeInfo; } });\nObject.defineProperty(exports, \"storeSplitMergeInfo\", { enumerable: true, get: function () { return SplitMergeInfo_1.storeSplitMergeInfo; } });\nvar StateInit_1 = require(\"./StateInit\");\nObject.defineProperty(exports, \"loadStateInit\", { enumerable: true, get: function () { return StateInit_1.loadStateInit; } });\nObject.defineProperty(exports, \"storeStateInit\", { enumerable: true, get: function () { return StateInit_1.storeStateInit; } });\nvar StorageInto_1 = require(\"./StorageInto\");\nObject.defineProperty(exports, \"loadStorageInfo\", { enumerable: true, get: function () { return StorageInto_1.loadStorageInfo; } });\nObject.defineProperty(exports, \"storeStorageInfo\", { enumerable: true, get: function () { return StorageInto_1.storeStorageInfo; } });\nvar StorageUsed_1 = require(\"./StorageUsed\");\nObject.defineProperty(exports, \"loadStorageUsed\", { enumerable: true, get: function () { return StorageUsed_1.loadStorageUsed; } });\nObject.defineProperty(exports, \"storeStorageUsed\", { enumerable: true, get: function () { return StorageUsed_1.storeStorageUsed; } });\nvar StorageUsedShort_1 = require(\"./StorageUsedShort\");\nObject.defineProperty(exports, \"loadStorageUsedShort\", { enumerable: true, get: function () { return StorageUsedShort_1.loadStorageUsedShort; } });\nObject.defineProperty(exports, \"storeStorageUsedShort\", { enumerable: true, get: function () { return StorageUsedShort_1.storeStorageUsedShort; } });\nvar TickTock_1 = require(\"./TickTock\");\nObject.defineProperty(exports, \"loadTickTock\", { enumerable: true, get: function () { return TickTock_1.loadTickTock; } });\nObject.defineProperty(exports, \"storeTickTock\", { enumerable: true, get: function () { return TickTock_1.storeTickTock; } });\nvar Transaction_1 = require(\"./Transaction\");\nObject.defineProperty(exports, \"loadTransaction\", { enumerable: true, get: function () { return Transaction_1.loadTransaction; } });\nObject.defineProperty(exports, \"storeTransaction\", { enumerable: true, get: function () { return Transaction_1.storeTransaction; } });\nvar TransactionActionPhase_1 = require(\"./TransactionActionPhase\");\nObject.defineProperty(exports, \"loadTransactionActionPhase\", { enumerable: true, get: function () { return TransactionActionPhase_1.loadTransactionActionPhase; } });\nObject.defineProperty(exports, \"storeTransactionActionPhase\", { enumerable: true, get: function () { return TransactionActionPhase_1.storeTransactionActionPhase; } });\nvar TransactionBouncePhase_1 = require(\"./TransactionBouncePhase\");\nObject.defineProperty(exports, \"loadTransactionBouncePhase\", { enumerable: true, get: function () { return TransactionBouncePhase_1.loadTransactionBouncePhase; } });\nObject.defineProperty(exports, \"storeTransactionBouncePhase\", { enumerable: true, get: function () { return TransactionBouncePhase_1.storeTransactionBouncePhase; } });\nvar TransactionComputePhase_1 = require(\"./TransactionComputePhase\");\nObject.defineProperty(exports, \"loadTransactionComputePhase\", { enumerable: true, get: function () { return TransactionComputePhase_1.loadTransactionComputePhase; } });\nObject.defineProperty(exports, \"storeTransactionComputePhase\", { enumerable: true, get: function () { return TransactionComputePhase_1.storeTransactionComputePhase; } });\nvar TransactionCreditPhase_1 = require(\"./TransactionCreditPhase\");\nObject.defineProperty(exports, \"loadTransactionCreditPhase\", { enumerable: true, get: function () { return TransactionCreditPhase_1.loadTransactionCreditPhase; } });\nObject.defineProperty(exports, \"storeTransactionCreditPhase\", { enumerable: true, get: function () { return TransactionCreditPhase_1.storeTransactionCreditPhase; } });\nvar TransactionDescription_1 = require(\"./TransactionDescription\");\nObject.defineProperty(exports, \"loadTransactionDescription\", { enumerable: true, get: function () { return TransactionDescription_1.loadTransactionDescription; } });\nObject.defineProperty(exports, \"storeTransactionDescription\", { enumerable: true, get: function () { return TransactionDescription_1.storeTransactionDescription; } });\nvar TransactionStoragePhase_1 = require(\"./TransactionStoragePhase\");\nObject.defineProperty(exports, \"loadTransactionStoragePhase\", { enumerable: true, get: function () { return TransactionStoragePhase_1.loadTransactionStoragePhase; } });\nObject.defineProperty(exports, \"storeTransactionsStoragePhase\", { enumerable: true, get: function () { return TransactionStoragePhase_1.storeTransactionsStoragePhase; } });\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openContract = void 0;\nconst Address_1 = require(\"../address/Address\");\nconst Cell_1 = require(\"../boc/Cell\");\nfunction openContract(src, factory) {\n    // Resolve parameters\n    let address;\n    let init = null;\n    if (!Address_1.Address.isAddress(src.address)) {\n        throw Error('Invalid address');\n    }\n    address = src.address;\n    if (src.init) {\n        if (!(src.init.code instanceof Cell_1.Cell)) {\n            throw Error('Invalid init.code');\n        }\n        if (!(src.init.data instanceof Cell_1.Cell)) {\n            throw Error('Invalid init.data');\n        }\n        init = src.init;\n    }\n    // Create executor\n    let executor = factory({ address, init });\n    // Create proxy\n    return new Proxy(src, {\n        get(target, prop) {\n            const value = target[prop];\n            if (typeof prop === 'string' && (prop.startsWith('get') || prop.startsWith('send'))) {\n                if (typeof value === 'function') {\n                    return (...args) => value.apply(target, [executor, ...args]);\n                }\n            }\n            return value;\n        }\n    });\n}\nexports.openContract = openContract;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComputeError = void 0;\nclass ComputeError extends Error {\n    constructor(message, exitCode, opts) {\n        super(message);\n        this.exitCode = exitCode;\n        this.debugLogs = opts && opts.debugLogs ? opts.debugLogs : null;\n        this.logs = opts && opts.logs ? opts.logs : null;\n        Object.setPrototypeOf(this, ComputeError.prototype);\n    }\n}\nexports.ComputeError = ComputeError;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMethodId = void 0;\nconst TABLE = new Int16Array([\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7,\n    0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef,\n    0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,\n    0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de,\n    0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485,\n    0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,\n    0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4,\n    0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc,\n    0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\n    0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b,\n    0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12,\n    0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,\n    0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41,\n    0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49,\n    0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,\n    0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78,\n    0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f,\n    0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\n    0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e,\n    0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256,\n    0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,\n    0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,\n    0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c,\n    0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,\n    0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab,\n    0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3,\n    0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\n    0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92,\n    0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9,\n    0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,\n    0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8,\n    0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0\n]);\nfunction crc16(data) {\n    if (!(data instanceof Buffer)) {\n        data = Buffer.from(data);\n    }\n    let crc = 0;\n    for (let index = 0; index < data.length; index++) {\n        const byte = data[index];\n        crc = (TABLE[((crc >> 8) ^ byte) & 0xff] ^ (crc << 8)) & 0xffff;\n    }\n    return crc;\n}\nfunction getMethodId(name) {\n    return (crc16(name) & 0xffff) | 0x10000;\n}\nexports.getMethodId = getMethodId;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeSignVerify = exports.safeSign = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst MIN_SEED_LENGTH = 8;\nconst MAX_SEED_LENGTH = 64;\nfunction createSafeSignHash(cell, seed) {\n    let seedData = Buffer.from(seed);\n    if (seedData.length > MAX_SEED_LENGTH) {\n        throw Error('Seed can\\t be longer than 64 bytes');\n    }\n    if (seedData.length < MIN_SEED_LENGTH) {\n        throw Error('Seed must be at least 8 bytes');\n    }\n    return (0, ton_crypto_1.sha256_sync)(Buffer.concat([Buffer.from([0xff, 0xff]), seedData, cell.hash()]));\n}\nfunction safeSign(cell, secretKey, seed = 'ton-safe-sign-magic') {\n    return (0, ton_crypto_1.sign)(createSafeSignHash(cell, seed), secretKey);\n}\nexports.safeSign = safeSign;\nfunction safeSignVerify(cell, signature, publicKey, seed = 'ton-safe-sign-magic') {\n    return (0, ton_crypto_1.signVerify)(createSafeSignHash(cell, seed), signature, publicKey);\n}\nexports.safeSignVerify = safeSignVerify;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeSignVerify = exports.safeSign = exports.getMethodId = exports.base32Encode = exports.base32Decode = exports.crc32c = exports.crc16 = exports.fromNano = exports.toNano = exports.ComputeError = exports.openContract = exports.TupleBuilder = exports.TupleReader = exports.serializeTuple = exports.parseTuple = exports.exoticPruned = exports.exoticMerkleUpdate = exports.exoticMerkleProof = exports.Dictionary = exports.Cell = exports.CellType = exports.Slice = exports.beginCell = exports.Builder = exports.BitBuilder = exports.BitReader = exports.BitString = exports.contractAddress = exports.ADNLAddress = exports.ExternalAddress = exports.address = exports.Address = void 0;\n// Address\nvar Address_1 = require(\"./address/Address\");\nObject.defineProperty(exports, \"Address\", { enumerable: true, get: function () { return Address_1.Address; } });\nObject.defineProperty(exports, \"address\", { enumerable: true, get: function () { return Address_1.address; } });\nvar ExternalAddress_1 = require(\"./address/ExternalAddress\");\nObject.defineProperty(exports, \"ExternalAddress\", { enumerable: true, get: function () { return ExternalAddress_1.ExternalAddress; } });\nvar ADNLAddress_1 = require(\"./address/ADNLAddress\");\nObject.defineProperty(exports, \"ADNLAddress\", { enumerable: true, get: function () { return ADNLAddress_1.ADNLAddress; } });\nvar contractAddress_1 = require(\"./address/contractAddress\");\nObject.defineProperty(exports, \"contractAddress\", { enumerable: true, get: function () { return contractAddress_1.contractAddress; } });\n// BitString\nvar BitString_1 = require(\"./boc/BitString\");\nObject.defineProperty(exports, \"BitString\", { enumerable: true, get: function () { return BitString_1.BitString; } });\nvar BitReader_1 = require(\"./boc/BitReader\");\nObject.defineProperty(exports, \"BitReader\", { enumerable: true, get: function () { return BitReader_1.BitReader; } });\nvar BitBuilder_1 = require(\"./boc/BitBuilder\");\nObject.defineProperty(exports, \"BitBuilder\", { enumerable: true, get: function () { return BitBuilder_1.BitBuilder; } });\n// Cell\nvar Builder_1 = require(\"./boc/Builder\");\nObject.defineProperty(exports, \"Builder\", { enumerable: true, get: function () { return Builder_1.Builder; } });\nObject.defineProperty(exports, \"beginCell\", { enumerable: true, get: function () { return Builder_1.beginCell; } });\nvar Slice_1 = require(\"./boc/Slice\");\nObject.defineProperty(exports, \"Slice\", { enumerable: true, get: function () { return Slice_1.Slice; } });\nvar CellType_1 = require(\"./boc/CellType\");\nObject.defineProperty(exports, \"CellType\", { enumerable: true, get: function () { return CellType_1.CellType; } });\nvar Cell_1 = require(\"./boc/Cell\");\nObject.defineProperty(exports, \"Cell\", { enumerable: true, get: function () { return Cell_1.Cell; } });\n// Dict\nvar Dictionary_1 = require(\"./dict/Dictionary\");\nObject.defineProperty(exports, \"Dictionary\", { enumerable: true, get: function () { return Dictionary_1.Dictionary; } });\n// Exotics\nvar exoticMerkleProof_1 = require(\"./boc/cell/exoticMerkleProof\");\nObject.defineProperty(exports, \"exoticMerkleProof\", { enumerable: true, get: function () { return exoticMerkleProof_1.exoticMerkleProof; } });\nvar exoticMerkleUpdate_1 = require(\"./boc/cell/exoticMerkleUpdate\");\nObject.defineProperty(exports, \"exoticMerkleUpdate\", { enumerable: true, get: function () { return exoticMerkleUpdate_1.exoticMerkleUpdate; } });\nvar exoticPruned_1 = require(\"./boc/cell/exoticPruned\");\nObject.defineProperty(exports, \"exoticPruned\", { enumerable: true, get: function () { return exoticPruned_1.exoticPruned; } });\nvar tuple_1 = require(\"./tuple/tuple\");\nObject.defineProperty(exports, \"parseTuple\", { enumerable: true, get: function () { return tuple_1.parseTuple; } });\nObject.defineProperty(exports, \"serializeTuple\", { enumerable: true, get: function () { return tuple_1.serializeTuple; } });\nvar reader_1 = require(\"./tuple/reader\");\nObject.defineProperty(exports, \"TupleReader\", { enumerable: true, get: function () { return reader_1.TupleReader; } });\nvar builder_1 = require(\"./tuple/builder\");\nObject.defineProperty(exports, \"TupleBuilder\", { enumerable: true, get: function () { return builder_1.TupleBuilder; } });\n// Types\n__exportStar(require(\"./types/_export\"), exports);\nvar openContract_1 = require(\"./contract/openContract\");\nObject.defineProperty(exports, \"openContract\", { enumerable: true, get: function () { return openContract_1.openContract; } });\nvar ComputeError_1 = require(\"./contract/ComputeError\");\nObject.defineProperty(exports, \"ComputeError\", { enumerable: true, get: function () { return ComputeError_1.ComputeError; } });\n// Utility\nvar convert_1 = require(\"./utils/convert\");\nObject.defineProperty(exports, \"toNano\", { enumerable: true, get: function () { return convert_1.toNano; } });\nObject.defineProperty(exports, \"fromNano\", { enumerable: true, get: function () { return convert_1.fromNano; } });\nvar crc16_1 = require(\"./utils/crc16\");\nObject.defineProperty(exports, \"crc16\", { enumerable: true, get: function () { return crc16_1.crc16; } });\nvar crc32c_1 = require(\"./utils/crc32c\");\nObject.defineProperty(exports, \"crc32c\", { enumerable: true, get: function () { return crc32c_1.crc32c; } });\nvar base32_1 = require(\"./utils/base32\");\nObject.defineProperty(exports, \"base32Decode\", { enumerable: true, get: function () { return base32_1.base32Decode; } });\nObject.defineProperty(exports, \"base32Encode\", { enumerable: true, get: function () { return base32_1.base32Encode; } });\nvar getMethodId_1 = require(\"./utils/getMethodId\");\nObject.defineProperty(exports, \"getMethodId\", { enumerable: true, get: function () { return getMethodId_1.getMethodId; } });\n// Crypto\nvar safeSign_1 = require(\"./crypto/safeSign\");\nObject.defineProperty(exports, \"safeSign\", { enumerable: true, get: function () { return safeSign_1.safeSign; } });\nObject.defineProperty(exports, \"safeSignVerify\", { enumerable: true, get: function () { return safeSign_1.safeSignVerify; } });\n", "// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getBooleanAlgebra = function (B) {\n    return function () { return ({\n        meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n        join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n        zero: function () { return B.zero; },\n        one: function () { return B.one; },\n        implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n        not: function (x) { return function (a) { return B.not(x(a)); }; }\n    }); };\n};\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function (S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n};\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getMonoid = function (M) {\n    var getSemigroupM = getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getRing = function (R) {\n    var S = getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var apply = function (a) {\n    return function (f) {\n        return f(a);\n    };\n};\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexport var constTrue = /*#__PURE__*/ constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexport var constFalse = /*#__PURE__*/ constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexport var constNull = /*#__PURE__*/ constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexport var constUndefined = /*#__PURE__*/ constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexport var constVoid = constUndefined;\nexport function flip(f) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length > 1) {\n            return f(args[1], args[0]);\n        }\n        return function (a) { return f(a)(args[0]); };\n    };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default: {\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n        }\n    }\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @since 2.11.0\n */\nexport var SK = function (_, b) { return b; };\n/**\n * Use `Predicate` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * Use `Endomorphism` module instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n/** @internal */\nexport var isSome = function (fa) { return fa._tag === 'Some'; };\n/** @internal */\nexport var none = { _tag: 'None' };\n/** @internal */\nexport var some = function (a) { return ({ _tag: 'Some', value: a }); };\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isLeft = function (ma) { return ma._tag === 'Left'; };\n/** @internal */\nexport var isRight = function (ma) { return ma._tag === 'Right'; };\n/** @internal */\nexport var left = function (e) { return ({ _tag: 'Left', left: e }); };\n/** @internal */\nexport var right = function (a) { return ({ _tag: 'Right', right: a }); };\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var singleton = function (a) { return [a]; };\n/** @internal */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/** @internal */\nexport var head = function (as) { return as[0]; };\n/** @internal */\nexport var tail = function (as) { return as.slice(1); };\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var emptyReadonlyArray = [];\n/** @internal */\nexport var emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1), true); };\n", "import { tuple } from './function';\nimport * as _ from './internal';\nexport function ap(F, G) {\n    return function (fa) {\n        return function (fab) {\n            return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n        };\n    };\n}\nexport function apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexport function apSecond(A) {\n    return function (second) {\n        return function (first) {\n            return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n        };\n    };\n}\nexport function apS(F) {\n    return function (name, fb) {\n        return function (fa) {\n            return F.ap(F.map(fa, function (a) { return function (b) {\n                var _a;\n                return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n            }; }), fb);\n        };\n    };\n}\nexport function getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!_.has.call(tupleConstructors, len)) {\n        tupleConstructors[len] = curried(tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nexport function sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nexport function sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\n", "/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nimport { pipe } from './function';\nexport function map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexport function flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexport function bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nfunction let_(F) {\n    return function (name, f) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = f(a), _a));\n    }); }; };\n}\nexport { \n/**\n * @since 2.13.0\n */\nlet_ as let };\n/** @deprecated */\nexport function getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return pipe(fga, _map(f)); }\n    };\n}\n", "/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nimport { ap, getApplySemigroup } from './Apply';\nimport { pipe } from './function';\nimport { getFunctorComposition } from './Functor';\nexport function getApplicativeMonoid(F) {\n    var f = getApplySemigroup(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\n/** @deprecated */\nexport function getApplicativeComposition(F, G) {\n    var map = getFunctorComposition(F, G).map;\n    var _ap = ap(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return pipe(fgab, _ap(fga)); }\n    };\n}\n", "export function chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexport function bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\n", "/**\n * @since 2.0.0\n */\nexport var tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\n", "/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nimport { chainFirst } from './Chain';\nimport { flow } from './function';\nimport * as _ from './internal';\nexport function fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexport function fromPredicate(F) {\n    return function (predicate, onFalse) {\n        return function (a) {\n            return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n        };\n    };\n}\nexport function fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return flow(f, from); };\n    };\n}\nexport function chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexport function fromEitherK(F) {\n    return function (f) { return flow(f, F.fromEither); };\n}\nexport function chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexport function chainFirstEitherK(F, M) {\n    return flow(fromEitherK(F), chainFirst(M));\n}\nexport function filterOrElse(F, M) {\n    return function (predicate, onFalse) {\n        return function (ma) {\n            return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n        };\n    };\n}\n", "/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nimport { pipe } from './function';\nimport { flap as flap_ } from './Functor';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var separated = function (left, right) { return ({ left: left, right: right }); };\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _mapLeft = function (fa, f) { return pipe(fa, mapLeft(f)); };\nvar _bimap = function (fa, g, f) { return pipe(fa, bimap(g, f)); };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var map = function (f) {\n    return function (fa) {\n        return separated(left(fa), f(right(fa)));\n    };\n};\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.10.0\n */\nexport var mapLeft = function (f) {\n    return function (fa) {\n        return separated(f(left(fa)), right(fa));\n    };\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var bimap = function (f, g) {\n    return function (fa) {\n        return separated(f(left(fa)), g(right(fa)));\n    };\n};\n/**\n * @category type lambdas\n * @since 2.10.0\n */\nexport var URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexport var left = function (s) { return s.left; };\n/**\n * @since 2.10.0\n */\nexport var right = function (s) { return s.right; };\n", "import * as _ from './internal';\nexport function wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexport function witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexport function filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\n", "import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { tailRec } from './ChainRec';\nimport { chainOptionK as chainOptionK_, filterOrElse as filterOrElse_, fromOption as fromOption_, fromOptionK as fromOptionK_, fromPredicate as fromPredicate_ } from './FromEither';\nimport { flow, identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_, let as let__ } from './Functor';\nimport * as _ from './internal';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var right = _.right;\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = foldMap(M);\n    return pipe(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return pipe(fa, bimap(f, g)); };\nvar _mapLeft = function (fa, f) { return pipe(fa, mapLeft(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\nvar _chainRec = function (a, f) {\n    return tailRec(f(a), function (e) {\n        return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n    });\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (SE, SA) { return ({\n    show: function (ma) { return (isLeft(ma) ? \"left(\".concat(SE.show(ma.left), \")\") : \"right(\".concat(SA.show(ma.right), \")\")); }\n}); };\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n    }\n}); };\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function (S) { return ({\n    concat: function (x, y) { return (isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right))); }\n}); };\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category filtering\n * @since 2.10.0\n */\nexport var getCompactable = function (M) {\n    var empty = left(M.empty);\n    return {\n        URI: URI,\n        _E: undefined,\n        compact: function (ma) { return (isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : right(ma.right.value)); },\n        separate: function (ma) {\n            return isLeft(ma)\n                ? separated(ma, ma)\n                : isLeft(ma.right)\n                    ? separated(right(ma.right.left), empty)\n                    : separated(empty, right(ma.right.right));\n        }\n    };\n};\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.10.0\n */\nexport var getFilterable = function (M) {\n    var empty = left(M.empty);\n    var _a = getCompactable(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return isLeft(ma)\n            ? separated(ma, ma)\n            : p(ma.right)\n                ? separated(empty, right(ma.right))\n                : separated(right(ma.right), empty);\n    };\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : right(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return separated(ma, ma);\n            }\n            var e = f(ma.right);\n            return isLeft(e) ? separated(right(e.left), empty) : separated(empty, right(e.right));\n        }\n    };\n};\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var getWitherable = function (M) {\n    var F_ = getFilterable(M);\n    var C = getCompactable(M);\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: witherDefault(Traversable, C),\n        wilt: wiltDefault(Traversable, C)\n    };\n};\n/**\n * The default [`Applicative`](#applicative) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as A from 'fp-ts/Apply'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const parsePerson = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     E.apS('name', parseString(input.name)),\n *     E.apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePerson({}), E.left('not a string')) // <= first error\n *\n * const Applicative = E.getApplicativeValidation(\n *   pipe(string.Semigroup, S.intercalate(', '))\n * )\n *\n * const apS = A.apS(Applicative)\n *\n * const parsePersonAll = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     apS('name', parseString(input.name)),\n *     apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePersonAll({}), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nexport var getApplicativeValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return isLeft(fab)\n            ? isLeft(fa)\n                ? left(SE.concat(fab.left, fa.left))\n                : fab\n            : isLeft(fa)\n                ? fa\n                : right(fab.right(fa.right));\n    },\n    of: of\n}); };\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * const parse = (u: unknown): E.Either<string, string | number> =>\n *   pipe(\n *     parseString(u),\n *     E.alt<string, string | number>(() => parseNumber(u))\n *   )\n *\n * assert.deepStrictEqual(parse(true), E.left('not a number')) // <= last error\n *\n * const Alt = E.getAltValidation(pipe(string.Semigroup, S.intercalate(', ')))\n *\n * const parseAll = (u: unknown): E.Either<string, string | number> =>\n *   Alt.alt<string | number>(parseString(u), () => parseNumber(u))\n *\n * assert.deepStrictEqual(parseAll(true), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nexport var getAltValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if (isRight(me)) {\n            return me;\n        }\n        var ea = that();\n        return isLeft(ea) ? left(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isLeft(fa) ? fa : right(f(fa.right));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category constructors\n * @since 2.7.0\n */\nexport var of = right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nexport var apW = function (fa) { return function (fab) {\n    return isLeft(fab) ? fab : isLeft(fa) ? fa : right(fab.right(fa.right));\n}; };\n/**\n * @since 2.0.0\n */\nexport var ap = apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * const e1: E.Either<string, number> = E.right(1)\n * const e2: E.Either<number, number> = E.right(2)\n *\n * export const result1 = pipe(\n *   // @ts-expect-error\n *   e1,\n *   E.chain(() => e2)\n * )\n *\n * // merged error types -----v-------------v\n * // const result2: E.Either<string | number, number>\n * export const result2 = pipe(\n *   e1, // no error\n *   E.chainW(() => e2)\n * )\n *\n * @category sequencing\n * @since 2.6.0\n */\nexport var chainW = function (f) {\n    return function (ma) {\n        return isLeft(ma) ? ma : f(ma.right);\n    };\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = chainW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(b, fa.right);\n}; };\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isLeft(fa) ? M.empty : f(fa.right);\n}; }; };\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(fa.right, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return isLeft(ta) ? F.of(left(ta.left)) : F.map(f(ta.right), right);\n        };\n    };\n};\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ma) {\n        return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var bimap = function (f, g) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : right(g(fa.right));\n}; };\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var mapLeft = function (f) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : fa;\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return isLeft(fa) ? that() : fa;\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Either` returns the left-most non-`Left` value (or the right-most `Left` value if both values are `Left`).\n *\n * | x        | y        | pipe(x, alt(() => y) |\n * | -------- | -------- | -------------------- |\n * | left(a)  | left(b)  | left(b)              |\n * | left(a)  | right(2) | right(2)             |\n * | right(1) | left(b)  | right(1)             |\n * | right(1) | right(2) | right(1)             |\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.left('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(2)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(1)\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isLeft(wa) ? wa : right(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ChainRec = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @since 2.6.3\n */\nexport var throwError = left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    throwError: throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category lifting\n * @since 2.0.0\n */\nexport var fromPredicate = /*#__PURE__*/ fromPredicate_(FromEither);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromOption = \n/*#__PURE__*/ fromOption_(FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isRight = _.isRight;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchW = function (onLeft, onRight) {\n    return function (ma) {\n        return isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n    };\n};\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nexport var getOrElseW = function (onLeft) {\n    return function (ma) {\n        return isLeft(ma) ? onLeft(ma.left) : ma.right;\n    };\n};\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexport var apFirstW = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexport var apSecondW = apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.8.0\n */\nexport var chainFirstW = chainFirst;\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexport var flattenW = \n/*#__PURE__*/ chainW(identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var flatten = flattenW;\n/**\n * @since 2.0.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category lifting\n * @since 2.10.0\n */\nexport var fromOptionK = \n/*#__PURE__*/ fromOptionK_(FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainOptionK = /*#__PURE__*/ chainOptionK_(FromEither, Chain);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterOrElse = /*#__PURE__*/ filterOrElse_(FromEither, Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexport var filterOrElseW = filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @since 2.0.0\n */\nexport var swap = function (ma) { return (isLeft(ma) ? right(ma.left) : left(ma.right)); };\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nexport var orElseW = function (onLeft) {\n    return function (ma) {\n        return isLeft(ma) ? onLeft(ma.left) : ma;\n    };\n};\n/**\n * Useful for recovering from errors.\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var orElse = orElseW;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromNullable = function (e) {\n    return function (a) {\n        return a == null ? left(e) : right(a);\n    };\n};\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f, onThrow) {\n    try {\n        return right(f());\n    }\n    catch (e) {\n        return left(onThrow(e));\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f, onThrow) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return tryCatch(function () { return f.apply(void 0, a); }, onThrow);\n    };\n};\n/**\n * @category lifting\n * @since 2.9.0\n */\nexport var fromNullableK = function (e) {\n    var from = fromNullable(e);\n    return function (f) { return flow(f, from); };\n};\n/**\n * @category sequencing\n * @since 2.9.0\n */\nexport var chainNullableK = function (e) {\n    var from = fromNullableK(e);\n    return function (f) { return chain(from(f)); };\n};\n/**\n * @category conversions\n * @since 2.10.0\n */\nexport var toUnion = /*#__PURE__*/ foldW(identity, identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nexport function toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexport function elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return isLeft(ma) ? false : E.equals(a, ma.right);\n    };\n}\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) {\n    return function (ma) {\n        return isLeft(ma) ? false : predicate(ma.right);\n    };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexport var bindW = bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexport var apSW = apS;\n/**\n * @since 2.11.0\n */\nexport var ApT = /*#__PURE__*/ of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var e = f(0, _.head(as));\n        if (isLeft(e)) {\n            return e;\n        }\n        var out = [e.right];\n        for (var i = 1; i < as.length; i++) {\n            var e_1 = f(i, as[i]);\n            if (isLeft(e_1)) {\n                return e_1;\n            }\n            out.push(e_1.right);\n        }\n        return right(out);\n    };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArray = function (f) { return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/ traverseArray(identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function parseJSON(s, onError) {\n    return tryCatch(function () { return JSON.parse(s); }, onError);\n}\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var stringifyJSON = function (u, onError) {\n    return tryCatch(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `E.Functor` instead of `E.either`\n * (where `E` is from `import E from 'fp-ts/Either'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var either = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = \n/*#__PURE__*/ getApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = \n/*#__PURE__*/ getApplicativeMonoid(Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationSemigroup = function (SE, SA) {\n    return getApplySemigroup_(getApplicativeValidation(SE))(SA);\n};\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationMonoid = function (SE, MA) {\n    return getApplicativeMonoid(getApplicativeValidation(SE))(MA);\n};\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function getValidation(SE) {\n    var ap = getApplicativeValidation(SE).ap;\n    var alt = getAltValidation(SE).alt;\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        of: of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: sequence,\n        chainRec: _chainRec,\n        throwError: throwError,\n        ap: ap,\n        alt: alt\n    };\n}\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @since 1.0.0\n */\nimport { isLeft, left, right } from 'fp-ts/es6/Either';\n/**\n * @category Decode error\n * @since 1.0.0\n */\nexport var failures = left;\n/**\n * @category Decode error\n * @since 1.0.0\n */\nexport var failure = function (value, context, message) {\n    return failures([{ value: value, context: context, message: message }]);\n};\n/**\n * @category Decode error\n * @since 1.0.0\n */\nexport var success = right;\n/**\n * @category Codec\n * @since 1.0.0\n */\nvar Type = /** @class */ (function () {\n    function Type(\n    /** a unique name for this codec */\n    name, \n    /** a custom type guard */\n    is, \n    /** succeeds if a value of type I can be decoded to a value of type A */\n    validate, \n    /** converts a value of type A to a value of type O */\n    encode) {\n        this.name = name;\n        this.is = is;\n        this.validate = validate;\n        this.encode = encode;\n        this.decode = this.decode.bind(this);\n    }\n    /**\n     * @since 1.0.0\n     */\n    Type.prototype.pipe = function (ab, name) {\n        var _this = this;\n        if (name === void 0) { name = \"pipe(\".concat(this.name, \", \").concat(ab.name, \")\"); }\n        return new Type(name, ab.is, function (i, c) {\n            var e = _this.validate(i, c);\n            if (isLeft(e)) {\n                return e;\n            }\n            return ab.validate(e.right, c);\n        }, this.encode === identity && ab.encode === identity ? identity : function (b) { return _this.encode(ab.encode(b)); });\n    };\n    /**\n     * @since 1.0.0\n     */\n    Type.prototype.asDecoder = function () {\n        return this;\n    };\n    /**\n     * @since 1.0.0\n     */\n    Type.prototype.asEncoder = function () {\n        return this;\n    };\n    /**\n     * a version of `validate` with a default context\n     * @since 1.0.0\n     */\n    Type.prototype.decode = function (i) {\n        return this.validate(i, [{ key: '', type: this, actual: i }]);\n    };\n    return Type;\n}());\nexport { Type };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 1.0.0\n */\nexport var identity = function (a) { return a; };\n/**\n * @since 1.0.0\n */\nexport function getFunctionName(f) {\n    return f.displayName || f.name || \"<function\".concat(f.length, \">\");\n}\n/**\n * @since 1.0.0\n */\nexport function getContextEntry(key, decoder) {\n    return { key: key, type: decoder };\n}\n/**\n * @since 1.0.0\n */\nexport function appendContext(c, key, decoder, actual) {\n    var len = c.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i] = c[i];\n    }\n    r[len] = { key: key, type: decoder, actual: actual };\n    return r;\n}\nfunction pushAll(xs, ys) {\n    var l = ys.length;\n    for (var i = 0; i < l; i++) {\n        xs.push(ys[i]);\n    }\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction getNameFromProps(props) {\n    return Object.keys(props)\n        .map(function (k) { return \"\".concat(k, \": \").concat(props[k].name); })\n        .join(', ');\n}\nfunction useIdentity(codecs) {\n    for (var i = 0; i < codecs.length; i++) {\n        if (codecs[i].encode !== identity) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getInterfaceTypeName(props) {\n    return \"{ \".concat(getNameFromProps(props), \" }\");\n}\nfunction getPartialTypeName(inner) {\n    return \"Partial<\".concat(inner, \">\");\n}\nfunction enumerableRecord(keys, domain, codomain, name) {\n    if (name === void 0) { name = \"{ [K in \".concat(domain.name, \"]: \").concat(codomain.name, \" }\"); }\n    var len = keys.length;\n    return new DictionaryType(name, function (u) { return UnknownRecord.is(u) && keys.every(function (k) { return codomain.is(u[k]); }); }, function (u, c) {\n        var e = UnknownRecord.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var o = e.right;\n        var a = {};\n        var errors = [];\n        var changed = false;\n        for (var i = 0; i < len; i++) {\n            var k = keys[i];\n            var ok = o[k];\n            var codomainResult = codomain.validate(ok, appendContext(c, k, codomain, ok));\n            if (isLeft(codomainResult)) {\n                pushAll(errors, codomainResult.left);\n            }\n            else {\n                var vok = codomainResult.right;\n                changed = changed || vok !== ok;\n                a[k] = vok;\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success((changed || Object.keys(o).length !== len ? a : o));\n    }, codomain.encode === identity\n        ? identity\n        : function (a) {\n            var s = {};\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                s[k] = codomain.encode(a[k]);\n            }\n            return s;\n        }, domain, codomain);\n}\n/**\n * @internal\n */\nexport function getDomainKeys(domain) {\n    var _a;\n    if (isLiteralC(domain)) {\n        var literal_1 = domain.value;\n        if (string.is(literal_1)) {\n            return _a = {}, _a[literal_1] = null, _a;\n        }\n    }\n    else if (isKeyofC(domain)) {\n        return domain.keys;\n    }\n    else if (isUnionC(domain)) {\n        var keys = domain.types.map(function (type) { return getDomainKeys(type); });\n        return keys.some(undefinedType.is) ? undefined : Object.assign.apply(Object, __spreadArray([{}], keys, false));\n    }\n    return undefined;\n}\nfunction nonEnumerableRecord(domain, codomain, name) {\n    if (name === void 0) { name = \"{ [K in \".concat(domain.name, \"]: \").concat(codomain.name, \" }\"); }\n    return new DictionaryType(name, function (u) {\n        if (UnknownRecord.is(u)) {\n            return Object.keys(u).every(function (k) { return domain.is(k) && codomain.is(u[k]); });\n        }\n        return isAnyC(codomain) && Array.isArray(u);\n    }, function (u, c) {\n        if (UnknownRecord.is(u)) {\n            var a = {};\n            var errors = [];\n            var keys = Object.keys(u);\n            var len = keys.length;\n            var changed = false;\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var ok = u[k];\n                var domainResult = domain.validate(k, appendContext(c, k, domain, k));\n                if (isLeft(domainResult)) {\n                    pushAll(errors, domainResult.left);\n                }\n                else {\n                    var vk = domainResult.right;\n                    changed = changed || vk !== k;\n                    k = vk;\n                    var codomainResult = codomain.validate(ok, appendContext(c, k, codomain, ok));\n                    if (isLeft(codomainResult)) {\n                        pushAll(errors, codomainResult.left);\n                    }\n                    else {\n                        var vok = codomainResult.right;\n                        changed = changed || vok !== ok;\n                        a[k] = vok;\n                    }\n                }\n            }\n            return errors.length > 0 ? failures(errors) : success((changed ? a : u));\n        }\n        if (isAnyC(codomain) && Array.isArray(u)) {\n            return success(u);\n        }\n        return failure(u, c);\n    }, domain.encode === identity && codomain.encode === identity\n        ? identity\n        : function (a) {\n            var s = {};\n            var keys = Object.keys(a);\n            var len = keys.length;\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                s[String(domain.encode(k))] = codomain.encode(a[k]);\n            }\n            return s;\n        }, domain, codomain);\n}\nfunction getUnionName(codecs) {\n    return '(' + codecs.map(function (type) { return type.name; }).join(' | ') + ')';\n}\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function mergeAll(base, us) {\n    var equal = true;\n    var primitive = true;\n    var baseIsNotADictionary = !UnknownRecord.is(base);\n    for (var _i = 0, us_1 = us; _i < us_1.length; _i++) {\n        var u = us_1[_i];\n        if (u !== base) {\n            equal = false;\n        }\n        if (UnknownRecord.is(u)) {\n            primitive = false;\n        }\n    }\n    if (equal) {\n        return base;\n    }\n    else if (primitive) {\n        return us[us.length - 1];\n    }\n    var r = {};\n    for (var _a = 0, us_2 = us; _a < us_2.length; _a++) {\n        var u = us_2[_a];\n        for (var k in u) {\n            if (!hasOwnProperty.call(r, k) || baseIsNotADictionary || u[k] !== base[k]) {\n                r[k] = u[k];\n            }\n        }\n    }\n    return r;\n}\nfunction getProps(codec) {\n    switch (codec._tag) {\n        case 'RefinementType':\n        case 'ReadonlyType':\n            return getProps(codec.type);\n        case 'InterfaceType':\n        case 'StrictType':\n        case 'PartialType':\n            return codec.props;\n        case 'IntersectionType':\n            return codec.types.reduce(function (props, type) { return Object.assign(props, getProps(type)); }, {});\n    }\n}\nfunction stripKeys(o, props) {\n    var keys = Object.getOwnPropertyNames(o);\n    var shouldStrip = false;\n    var r = {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (!hasOwnProperty.call(props, key)) {\n            shouldStrip = true;\n        }\n        else {\n            r[key] = o[key];\n        }\n    }\n    return shouldStrip ? r : o;\n}\nfunction getExactTypeName(codec) {\n    if (isTypeC(codec)) {\n        return \"{| \".concat(getNameFromProps(codec.props), \" |}\");\n    }\n    else if (isPartialC(codec)) {\n        return getPartialTypeName(\"{| \".concat(getNameFromProps(codec.props), \" |}\"));\n    }\n    return \"Exact<\".concat(codec.name, \">\");\n}\nfunction isNonEmpty(as) {\n    return as.length > 0;\n}\n/**\n * @internal\n */\nexport var emptyTags = {};\nfunction intersect(a, b) {\n    var r = [];\n    for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {\n        var v = a_1[_i];\n        if (b.indexOf(v) !== -1) {\n            r.push(v);\n        }\n    }\n    return r;\n}\nfunction mergeTags(a, b) {\n    if (a === emptyTags) {\n        return b;\n    }\n    if (b === emptyTags) {\n        return a;\n    }\n    var r = Object.assign({}, a);\n    for (var k in b) {\n        if (hasOwnProperty.call(a, k)) {\n            var intersection_1 = intersect(a[k], b[k]);\n            if (isNonEmpty(intersection_1)) {\n                r[k] = intersection_1;\n            }\n            else {\n                r = emptyTags;\n                break;\n            }\n        }\n        else {\n            r[k] = b[k];\n        }\n    }\n    return r;\n}\nfunction intersectTags(a, b) {\n    if (a === emptyTags || b === emptyTags) {\n        return emptyTags;\n    }\n    var r = emptyTags;\n    for (var k in a) {\n        if (hasOwnProperty.call(b, k)) {\n            var intersection_2 = intersect(a[k], b[k]);\n            if (intersection_2.length === 0) {\n                if (r === emptyTags) {\n                    r = {};\n                }\n                r[k] = a[k].concat(b[k]);\n            }\n        }\n    }\n    return r;\n}\n// tslint:disable-next-line: deprecation\nfunction isAnyC(codec) {\n    return codec._tag === 'AnyType';\n}\nfunction isLiteralC(codec) {\n    return codec._tag === 'LiteralType';\n}\nfunction isKeyofC(codec) {\n    return codec._tag === 'KeyofType';\n}\nfunction isTypeC(codec) {\n    return codec._tag === 'InterfaceType';\n}\nfunction isPartialC(codec) {\n    return codec._tag === 'PartialType';\n}\n// tslint:disable-next-line: deprecation\nfunction isStrictC(codec) {\n    return codec._tag === 'StrictType';\n}\nfunction isExactC(codec) {\n    return codec._tag === 'ExactType';\n}\n// tslint:disable-next-line: deprecation\nfunction isRefinementC(codec) {\n    return codec._tag === 'RefinementType';\n}\nfunction isIntersectionC(codec) {\n    return codec._tag === 'IntersectionType';\n}\nfunction isUnionC(codec) {\n    return codec._tag === 'UnionType';\n}\nfunction isRecursiveC(codec) {\n    return codec._tag === 'RecursiveType';\n}\nvar lazyCodecs = [];\n/**\n * @internal\n */\nexport function getTags(codec) {\n    if (lazyCodecs.indexOf(codec) !== -1) {\n        return emptyTags;\n    }\n    if (isTypeC(codec) || isStrictC(codec)) {\n        var index = emptyTags;\n        // tslint:disable-next-line: forin\n        for (var k in codec.props) {\n            var prop = codec.props[k];\n            if (isLiteralC(prop)) {\n                if (index === emptyTags) {\n                    index = {};\n                }\n                index[k] = [prop.value];\n            }\n        }\n        return index;\n    }\n    else if (isExactC(codec) || isRefinementC(codec)) {\n        return getTags(codec.type);\n    }\n    else if (isIntersectionC(codec)) {\n        return codec.types.reduce(function (tags, codec) { return mergeTags(tags, getTags(codec)); }, emptyTags);\n    }\n    else if (isUnionC(codec)) {\n        return codec.types.slice(1).reduce(function (tags, codec) { return intersectTags(tags, getTags(codec)); }, getTags(codec.types[0]));\n    }\n    else if (isRecursiveC(codec)) {\n        lazyCodecs.push(codec);\n        var tags = getTags(codec.type);\n        lazyCodecs.pop();\n        return tags;\n    }\n    return emptyTags;\n}\n/**\n * @internal\n */\nexport function getIndex(codecs) {\n    var tags = getTags(codecs[0]);\n    var keys = Object.keys(tags);\n    var len = codecs.length;\n    var _loop_1 = function (k) {\n        var all = tags[k].slice();\n        var index = [tags[k]];\n        for (var i = 1; i < len; i++) {\n            var codec = codecs[i];\n            var ctags = getTags(codec);\n            var values = ctags[k];\n            // tslint:disable-next-line: strict-type-predicates\n            if (values === undefined) {\n                return \"continue-keys\";\n            }\n            else {\n                if (values.some(function (v) { return all.indexOf(v) !== -1; })) {\n                    return \"continue-keys\";\n                }\n                else {\n                    all.push.apply(all, values);\n                    index.push(values);\n                }\n            }\n        }\n        return { value: [k, index] };\n    };\n    keys: for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var k = keys_1[_i];\n        var state_1 = _loop_1(k);\n        if (typeof state_1 === \"object\")\n            return state_1.value;\n        switch (state_1) {\n            case \"continue-keys\": continue keys;\n        }\n    }\n    return undefined;\n}\n// -------------------------------------------------------------------------------------\n// primitives\n// -------------------------------------------------------------------------------------\n/**\n * @since 1.0.0\n */\nvar NullType = /** @class */ (function (_super) {\n    __extends(NullType, _super);\n    function NullType() {\n        var _this = _super.call(this, 'null', function (u) { return u === null; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'NullType';\n        return _this;\n    }\n    return NullType;\n}(Type));\nexport { NullType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var nullType = new NullType();\n/**\n * @since 1.0.0\n */\nvar UndefinedType = /** @class */ (function (_super) {\n    __extends(UndefinedType, _super);\n    function UndefinedType() {\n        var _this = _super.call(this, 'undefined', function (u) { return u === void 0; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'UndefinedType';\n        return _this;\n    }\n    return UndefinedType;\n}(Type));\nexport { UndefinedType };\nvar undefinedType = new UndefinedType();\n/**\n * @since 1.2.0\n */\nvar VoidType = /** @class */ (function (_super) {\n    __extends(VoidType, _super);\n    function VoidType() {\n        var _this = _super.call(this, 'void', undefinedType.is, undefinedType.validate, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'VoidType';\n        return _this;\n    }\n    return VoidType;\n}(Type));\nexport { VoidType };\n/**\n * @category primitives\n * @since 1.2.0\n */\nexport var voidType = new VoidType();\n/**\n * @since 1.5.0\n */\nvar UnknownType = /** @class */ (function (_super) {\n    __extends(UnknownType, _super);\n    function UnknownType() {\n        var _this = _super.call(this, 'unknown', function (_) { return true; }, success, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'UnknownType';\n        return _this;\n    }\n    return UnknownType;\n}(Type));\nexport { UnknownType };\n/**\n * @category primitives\n * @since 1.5.0\n */\nexport var unknown = new UnknownType();\n/**\n * @since 1.0.0\n */\nvar StringType = /** @class */ (function (_super) {\n    __extends(StringType, _super);\n    function StringType() {\n        var _this = _super.call(this, 'string', function (u) { return typeof u === 'string'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'StringType';\n        return _this;\n    }\n    return StringType;\n}(Type));\nexport { StringType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var string = new StringType();\n/**\n * @since 1.0.0\n */\nvar NumberType = /** @class */ (function (_super) {\n    __extends(NumberType, _super);\n    function NumberType() {\n        var _this = _super.call(this, 'number', function (u) { return typeof u === 'number'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'NumberType';\n        return _this;\n    }\n    return NumberType;\n}(Type));\nexport { NumberType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var number = new NumberType();\n/**\n * @since 2.1.0\n */\nvar BigIntType = /** @class */ (function (_super) {\n    __extends(BigIntType, _super);\n    function BigIntType() {\n        var _this = _super.call(this, 'bigint', \n        // tslint:disable-next-line: valid-typeof\n        function (u) { return typeof u === 'bigint'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'BigIntType';\n        return _this;\n    }\n    return BigIntType;\n}(Type));\nexport { BigIntType };\n/**\n * @category primitives\n * @since 2.1.0\n */\nexport var bigint = new BigIntType();\n/**\n * @since 1.0.0\n */\nvar BooleanType = /** @class */ (function (_super) {\n    __extends(BooleanType, _super);\n    function BooleanType() {\n        var _this = _super.call(this, 'boolean', function (u) { return typeof u === 'boolean'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'BooleanType';\n        return _this;\n    }\n    return BooleanType;\n}(Type));\nexport { BooleanType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var boolean = new BooleanType();\n/**\n * @since 1.0.0\n */\nvar AnyArrayType = /** @class */ (function (_super) {\n    __extends(AnyArrayType, _super);\n    function AnyArrayType() {\n        var _this = _super.call(this, 'UnknownArray', Array.isArray, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'AnyArrayType';\n        return _this;\n    }\n    return AnyArrayType;\n}(Type));\nexport { AnyArrayType };\n/**\n * @category primitives\n * @since 1.7.1\n */\nexport var UnknownArray = new AnyArrayType();\n/**\n * @since 1.0.0\n */\nvar AnyDictionaryType = /** @class */ (function (_super) {\n    __extends(AnyDictionaryType, _super);\n    function AnyDictionaryType() {\n        var _this = _super.call(this, 'UnknownRecord', function (u) { return u !== null && typeof u === 'object' && !Array.isArray(u); }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'AnyDictionaryType';\n        return _this;\n    }\n    return AnyDictionaryType;\n}(Type));\nexport { AnyDictionaryType };\n/**\n * @category primitives\n * @since 1.7.1\n */\nexport var UnknownRecord = new AnyDictionaryType();\nexport { \n/**\n * @category primitives\n * @since 1.0.0\n */\nnullType as null, \n/**\n * @category primitives\n * @since 1.0.0\n */\nundefinedType as undefined, \n/**\n * @category primitives\n * @since 1.0.0\n */\nvoidType as void };\n/**\n * @since 1.0.0\n */\nvar LiteralType = /** @class */ (function (_super) {\n    __extends(LiteralType, _super);\n    function LiteralType(name, is, validate, encode, value) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.value = value;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'LiteralType';\n        return _this;\n    }\n    return LiteralType;\n}(Type));\nexport { LiteralType };\n/**\n * @category constructors\n * @since 1.0.0\n */\nexport function literal(value, name) {\n    if (name === void 0) { name = JSON.stringify(value); }\n    var is = function (u) { return u === value; };\n    return new LiteralType(name, is, function (u, c) { return (is(u) ? success(value) : failure(u, c)); }, identity, value);\n}\n/**\n * @since 1.0.0\n */\nvar KeyofType = /** @class */ (function (_super) {\n    __extends(KeyofType, _super);\n    function KeyofType(name, is, validate, encode, keys) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.keys = keys;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'KeyofType';\n        return _this;\n    }\n    return KeyofType;\n}(Type));\nexport { KeyofType };\n/**\n * @category constructors\n * @since 1.0.0\n */\nexport function keyof(keys, name) {\n    if (name === void 0) { name = Object.keys(keys)\n        .map(function (k) { return JSON.stringify(k); })\n        .join(' | '); }\n    var is = function (u) { return string.is(u) && hasOwnProperty.call(keys, u); };\n    return new KeyofType(name, is, function (u, c) { return (is(u) ? success(u) : failure(u, c)); }, identity, keys);\n}\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @since 1.0.0\n */\nvar RefinementType = /** @class */ (function (_super) {\n    __extends(RefinementType, _super);\n    function RefinementType(name, is, validate, encode, type, predicate) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        _this.predicate = predicate;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'RefinementType';\n        return _this;\n    }\n    return RefinementType;\n}(Type));\nexport { RefinementType };\n/**\n * @category combinators\n * @since 1.8.1\n */\nexport function brand(codec, predicate, name) {\n    return refinement(codec, predicate, name);\n}\n/**\n * A branded codec representing an integer\n *\n * @category primitives\n * @since 1.8.1\n */\nexport var Int = brand(number, function (n) { return Number.isInteger(n); }, 'Int');\n/**\n * @since 1.0.0\n */\nvar RecursiveType = /** @class */ (function (_super) {\n    __extends(RecursiveType, _super);\n    function RecursiveType(name, is, validate, encode, runDefinition) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.runDefinition = runDefinition;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'RecursiveType';\n        return _this;\n    }\n    return RecursiveType;\n}(Type));\nexport { RecursiveType };\nObject.defineProperty(RecursiveType.prototype, 'type', {\n    get: function () {\n        return this.runDefinition();\n    },\n    enumerable: true,\n    configurable: true\n});\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function recursion(name, definition) {\n    var cache;\n    var runDefinition = function () {\n        if (!cache) {\n            cache = definition(Self);\n            cache.name = name;\n        }\n        return cache;\n    };\n    var Self = new RecursiveType(name, function (u) { return runDefinition().is(u); }, function (u, c) { return runDefinition().validate(u, c); }, function (a) { return runDefinition().encode(a); }, runDefinition);\n    return Self;\n}\n/**\n * @since 1.0.0\n */\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(name, is, validate, encode, type) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ArrayType';\n        return _this;\n    }\n    return ArrayType;\n}(Type));\nexport { ArrayType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function array(item, name) {\n    if (name === void 0) { name = \"Array<\".concat(item.name, \">\"); }\n    return new ArrayType(name, function (u) { return UnknownArray.is(u) && u.every(item.is); }, function (u, c) {\n        var e = UnknownArray.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var us = e.right;\n        var len = us.length;\n        var as = us;\n        var errors = [];\n        for (var i = 0; i < len; i++) {\n            var ui = us[i];\n            var result = item.validate(ui, appendContext(c, String(i), item, ui));\n            if (isLeft(result)) {\n                pushAll(errors, result.left);\n            }\n            else {\n                var ai = result.right;\n                if (ai !== ui) {\n                    if (as === us) {\n                        as = us.slice();\n                    }\n                    as[i] = ai;\n                }\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success(as);\n    }, item.encode === identity ? identity : function (a) { return a.map(item.encode); }, item);\n}\n/**\n * @since 1.0.0\n */\nvar InterfaceType = /** @class */ (function (_super) {\n    __extends(InterfaceType, _super);\n    function InterfaceType(name, is, validate, encode, props) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.props = props;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'InterfaceType';\n        return _this;\n    }\n    return InterfaceType;\n}(Type));\nexport { InterfaceType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function type(props, name) {\n    if (name === void 0) { name = getInterfaceTypeName(props); }\n    var keys = Object.keys(props);\n    var types = keys.map(function (key) { return props[key]; });\n    var len = keys.length;\n    return new InterfaceType(name, function (u) {\n        if (UnknownRecord.is(u)) {\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var uk = u[k];\n                if ((uk === undefined && !hasOwnProperty.call(u, k)) || !types[i].is(uk)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }, function (u, c) {\n        var e = UnknownRecord.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var o = e.right;\n        var a = o;\n        var errors = [];\n        for (var i = 0; i < len; i++) {\n            var k = keys[i];\n            var ak = a[k];\n            var type_1 = types[i];\n            var result = type_1.validate(ak, appendContext(c, k, type_1, ak));\n            if (isLeft(result)) {\n                pushAll(errors, result.left);\n            }\n            else {\n                var vak = result.right;\n                if (vak !== ak || (vak === undefined && !hasOwnProperty.call(a, k))) {\n                    /* istanbul ignore next */\n                    if (a === o) {\n                        a = __assign({}, o);\n                    }\n                    a[k] = vak;\n                }\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success(a);\n    }, useIdentity(types)\n        ? identity\n        : function (a) {\n            var s = __assign({}, a);\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var encode = types[i].encode;\n                if (encode !== identity) {\n                    s[k] = encode(a[k]);\n                }\n            }\n            return s;\n        }, props);\n}\n/**\n * @since 1.0.0\n */\nvar PartialType = /** @class */ (function (_super) {\n    __extends(PartialType, _super);\n    function PartialType(name, is, validate, encode, props) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.props = props;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'PartialType';\n        return _this;\n    }\n    return PartialType;\n}(Type));\nexport { PartialType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function partial(props, name) {\n    if (name === void 0) { name = getPartialTypeName(getInterfaceTypeName(props)); }\n    var keys = Object.keys(props);\n    var types = keys.map(function (key) { return props[key]; });\n    var len = keys.length;\n    return new PartialType(name, function (u) {\n        if (UnknownRecord.is(u)) {\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var uk = u[k];\n                if (uk !== undefined && !props[k].is(uk)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }, function (u, c) {\n        var e = UnknownRecord.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var o = e.right;\n        var a = o;\n        var errors = [];\n        for (var i = 0; i < len; i++) {\n            var k = keys[i];\n            var ak = a[k];\n            var type_2 = props[k];\n            var result = type_2.validate(ak, appendContext(c, k, type_2, ak));\n            if (isLeft(result)) {\n                if (ak !== undefined) {\n                    pushAll(errors, result.left);\n                }\n            }\n            else {\n                var vak = result.right;\n                if (vak !== ak) {\n                    /* istanbul ignore next */\n                    if (a === o) {\n                        a = __assign({}, o);\n                    }\n                    a[k] = vak;\n                }\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success(a);\n    }, useIdentity(types)\n        ? identity\n        : function (a) {\n            var s = __assign({}, a);\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var ak = a[k];\n                if (ak !== undefined) {\n                    s[k] = types[i].encode(ak);\n                }\n            }\n            return s;\n        }, props);\n}\n/**\n * @since 1.0.0\n */\nvar DictionaryType = /** @class */ (function (_super) {\n    __extends(DictionaryType, _super);\n    function DictionaryType(name, is, validate, encode, domain, codomain) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.domain = domain;\n        _this.codomain = codomain;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'DictionaryType';\n        return _this;\n    }\n    return DictionaryType;\n}(Type));\nexport { DictionaryType };\n/**\n * @category combinators\n * @since 1.7.1\n */\nexport function record(domain, codomain, name) {\n    var keys = getDomainKeys(domain);\n    return keys\n        ? enumerableRecord(Object.keys(keys), domain, codomain, name)\n        : nonEnumerableRecord(domain, codomain, name);\n}\n/**\n * @since 1.0.0\n */\nvar UnionType = /** @class */ (function (_super) {\n    __extends(UnionType, _super);\n    function UnionType(name, is, validate, encode, types) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.types = types;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'UnionType';\n        return _this;\n    }\n    return UnionType;\n}(Type));\nexport { UnionType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function union(codecs, name) {\n    if (name === void 0) { name = getUnionName(codecs); }\n    var index = getIndex(codecs);\n    if (index !== undefined && codecs.length > 0) {\n        var tag_1 = index[0], groups_1 = index[1];\n        var len_1 = groups_1.length;\n        var find_1 = function (value) {\n            for (var i = 0; i < len_1; i++) {\n                if (groups_1[i].indexOf(value) !== -1) {\n                    return i;\n                }\n            }\n            return undefined;\n        };\n        // tslint:disable-next-line: deprecation\n        return new TaggedUnionType(name, function (u) {\n            if (UnknownRecord.is(u)) {\n                var i = find_1(u[tag_1]);\n                return i !== undefined ? codecs[i].is(u) : false;\n            }\n            return false;\n        }, function (u, c) {\n            var e = UnknownRecord.validate(u, c);\n            if (isLeft(e)) {\n                return e;\n            }\n            var r = e.right;\n            var i = find_1(r[tag_1]);\n            if (i === undefined) {\n                return failure(u, c);\n            }\n            var codec = codecs[i];\n            return codec.validate(r, appendContext(c, String(i), codec, r));\n        }, useIdentity(codecs)\n            ? identity\n            : function (a) {\n                var i = find_1(a[tag_1]);\n                if (i === undefined) {\n                    // https://github.com/gcanti/io-ts/pull/305\n                    throw new Error(\"no codec found to encode value in union codec \".concat(name));\n                }\n                else {\n                    return codecs[i].encode(a);\n                }\n            }, codecs, tag_1);\n    }\n    else {\n        return new UnionType(name, function (u) { return codecs.some(function (type) { return type.is(u); }); }, function (u, c) {\n            var errors = [];\n            for (var i = 0; i < codecs.length; i++) {\n                var codec = codecs[i];\n                var result = codec.validate(u, appendContext(c, String(i), codec, u));\n                if (isLeft(result)) {\n                    pushAll(errors, result.left);\n                }\n                else {\n                    return success(result.right);\n                }\n            }\n            return failures(errors);\n        }, useIdentity(codecs)\n            ? identity\n            : function (a) {\n                for (var _i = 0, codecs_1 = codecs; _i < codecs_1.length; _i++) {\n                    var codec = codecs_1[_i];\n                    if (codec.is(a)) {\n                        return codec.encode(a);\n                    }\n                }\n                // https://github.com/gcanti/io-ts/pull/305\n                throw new Error(\"no codec found to encode value in union type \".concat(name));\n            }, codecs);\n    }\n}\n/**\n * @since 1.0.0\n */\nvar IntersectionType = /** @class */ (function (_super) {\n    __extends(IntersectionType, _super);\n    function IntersectionType(name, is, validate, encode, types) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.types = types;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'IntersectionType';\n        return _this;\n    }\n    return IntersectionType;\n}(Type));\nexport { IntersectionType };\nexport function intersection(codecs, name) {\n    if (name === void 0) { name = \"(\".concat(codecs.map(function (type) { return type.name; }).join(' & '), \")\"); }\n    var len = codecs.length;\n    return new IntersectionType(name, function (u) { return codecs.every(function (type) { return type.is(u); }); }, codecs.length === 0\n        ? success\n        : function (u, c) {\n            var us = [];\n            var errors = [];\n            for (var i = 0; i < len; i++) {\n                var codec = codecs[i];\n                var result = codec.validate(u, appendContext(c, String(i), codec, u));\n                if (isLeft(result)) {\n                    pushAll(errors, result.left);\n                }\n                else {\n                    us.push(result.right);\n                }\n            }\n            return errors.length > 0 ? failures(errors) : success(mergeAll(u, us));\n        }, codecs.length === 0\n        ? identity\n        : function (a) {\n            return mergeAll(a, codecs.map(function (codec) { return codec.encode(a); }));\n        }, codecs);\n}\n/**\n * @since 1.0.0\n */\nvar TupleType = /** @class */ (function (_super) {\n    __extends(TupleType, _super);\n    function TupleType(name, is, validate, encode, types) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.types = types;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'TupleType';\n        return _this;\n    }\n    return TupleType;\n}(Type));\nexport { TupleType };\nexport function tuple(codecs, name) {\n    if (name === void 0) { name = \"[\".concat(codecs.map(function (type) { return type.name; }).join(', '), \"]\"); }\n    var len = codecs.length;\n    return new TupleType(name, function (u) { return UnknownArray.is(u) && u.length === len && codecs.every(function (type, i) { return type.is(u[i]); }); }, function (u, c) {\n        var e = UnknownArray.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var us = e.right;\n        var as = us.length > len ? us.slice(0, len) : us; // strip additional components\n        var errors = [];\n        for (var i = 0; i < len; i++) {\n            var a = us[i];\n            var type_3 = codecs[i];\n            var result = type_3.validate(a, appendContext(c, String(i), type_3, a));\n            if (isLeft(result)) {\n                pushAll(errors, result.left);\n            }\n            else {\n                var va = result.right;\n                if (va !== a) {\n                    /* istanbul ignore next */\n                    if (as === us) {\n                        as = us.slice();\n                    }\n                    as[i] = va;\n                }\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success(as);\n    }, useIdentity(codecs) ? identity : function (a) { return codecs.map(function (type, i) { return type.encode(a[i]); }); }, codecs);\n}\n/**\n * @since 1.0.0\n */\nvar ReadonlyType = /** @class */ (function (_super) {\n    __extends(ReadonlyType, _super);\n    function ReadonlyType(name, is, validate, encode, type) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ReadonlyType';\n        return _this;\n    }\n    return ReadonlyType;\n}(Type));\nexport { ReadonlyType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function readonly(codec, name) {\n    if (name === void 0) { name = \"Readonly<\".concat(codec.name, \">\"); }\n    return new ReadonlyType(name, codec.is, codec.validate, codec.encode, codec);\n}\n/**\n * @since 1.0.0\n */\nvar ReadonlyArrayType = /** @class */ (function (_super) {\n    __extends(ReadonlyArrayType, _super);\n    function ReadonlyArrayType(name, is, validate, encode, type) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ReadonlyArrayType';\n        return _this;\n    }\n    return ReadonlyArrayType;\n}(Type));\nexport { ReadonlyArrayType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function readonlyArray(item, name) {\n    if (name === void 0) { name = \"ReadonlyArray<\".concat(item.name, \">\"); }\n    var codec = array(item);\n    return new ReadonlyArrayType(name, codec.is, codec.validate, codec.encode, item);\n}\n/**\n * Strips additional properties, equivalent to `exact(type(props))`.\n *\n * @category combinators\n * @since 1.0.0\n */\nexport var strict = function (props, name) { return exact(type(props), name); };\n/**\n * @since 1.1.0\n */\nvar ExactType = /** @class */ (function (_super) {\n    __extends(ExactType, _super);\n    function ExactType(name, is, validate, encode, type) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ExactType';\n        return _this;\n    }\n    return ExactType;\n}(Type));\nexport { ExactType };\n/**\n * Strips additional properties.\n *\n * @category combinators\n * @since 1.1.0\n */\nexport function exact(codec, name) {\n    if (name === void 0) { name = getExactTypeName(codec); }\n    var props = getProps(codec);\n    return new ExactType(name, codec.is, function (u, c) {\n        var e = UnknownRecord.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var ce = codec.validate(u, c);\n        if (isLeft(ce)) {\n            return ce;\n        }\n        return right(stripKeys(ce.right, props));\n    }, function (a) { return codec.encode(stripKeys(a, props)); }, codec);\n}\n/**\n * @since 1.0.0\n */\nvar FunctionType = /** @class */ (function (_super) {\n    __extends(FunctionType, _super);\n    function FunctionType() {\n        var _this = _super.call(this, 'Function', \n        // tslint:disable-next-line:strict-type-predicates\n        function (u) { return typeof u === 'function'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'FunctionType';\n        return _this;\n    }\n    return FunctionType;\n}(Type));\nexport { FunctionType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var Function = new FunctionType();\n/**\n * @since 1.0.0\n */\nvar NeverType = /** @class */ (function (_super) {\n    __extends(NeverType, _super);\n    function NeverType() {\n        var _this = _super.call(this, 'never', function (_) { return false; }, function (u, c) { return failure(u, c); }, \n        /* istanbul ignore next */\n        function () {\n            throw new Error('cannot encode never');\n        }) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'NeverType';\n        return _this;\n    }\n    return NeverType;\n}(Type));\nexport { NeverType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var never = new NeverType();\n/**\n * @since 1.0.0\n */\nvar AnyType = /** @class */ (function (_super) {\n    __extends(AnyType, _super);\n    function AnyType() {\n        var _this = _super.call(this, 'any', function (_) { return true; }, success, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'AnyType';\n        return _this;\n    }\n    return AnyType;\n}(Type));\nexport { AnyType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var any = new AnyType();\nexport function refinement(codec, predicate, name) {\n    if (name === void 0) { name = \"(\".concat(codec.name, \" | \").concat(getFunctionName(predicate), \")\"); }\n    return new RefinementType(name, function (u) { return codec.is(u) && predicate(u); }, function (i, c) {\n        var e = codec.validate(i, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var a = e.right;\n        return predicate(a) ? success(a) : failure(a, c);\n    }, codec.encode, codec, predicate);\n}\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var Integer = refinement(number, Number.isInteger, 'Integer');\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * @since 1.3.0\n * @deprecated\n */\nvar TaggedUnionType = /** @class */ (function (_super) {\n    __extends(TaggedUnionType, _super);\n    function TaggedUnionType(name, \n    // tslint:disable-next-line: deprecation\n    is, \n    // tslint:disable-next-line: deprecation\n    validate, \n    // tslint:disable-next-line: deprecation\n    encode, codecs, tag) {\n        var _this = _super.call(this, name, is, validate, encode, codecs) /* istanbul ignore next */ // <= workaround for https://github.com/Microsoft/TypeScript/issues/13455\n         || this;\n        _this.tag = tag;\n        return _this;\n    }\n    return TaggedUnionType;\n}(UnionType));\nexport { TaggedUnionType };\n/**\n * Use `union` instead.\n *\n * @category combinators\n * @since 1.3.0\n * @deprecated\n */\nexport var taggedUnion = function (tag, codecs, name\n// tslint:disable-next-line: deprecation\n) {\n    if (name === void 0) { name = getUnionName(codecs); }\n    var U = union(codecs, name);\n    // tslint:disable-next-line: deprecation\n    if (U instanceof TaggedUnionType) {\n        return U;\n    }\n    else {\n        console.warn(\"[io-ts] Cannot build a tagged union for \".concat(name, \", returning a de-optimized union\"));\n        // tslint:disable-next-line: deprecation\n        return new TaggedUnionType(name, U.is, U.validate, U.encode, codecs, tag);\n    }\n};\nexport { \n/**\n * Use `UnknownArray` instead.\n *\n * @category primitives\n * @deprecated\n * @since 1.0.0\n */\nUnknownArray as Array };\nexport { \n/**\n * Use `type` instead.\n *\n * @category combinators\n * @deprecated\n * @since 1.0.0\n */\ntype as interface };\n/**\n * @since 1.0.0\n * @deprecated\n */\nexport var getValidationError /* istanbul ignore next */ = function (value, context) { return ({\n    value: value,\n    context: context\n}); };\n/**\n * @since 1.0.0\n * @deprecated\n */\nexport var getDefaultContext /* istanbul ignore next */ = function (decoder) { return [\n    { key: '', type: decoder }\n]; };\n/**\n * Use `UnknownRecord` instead.\n *\n * @category primitives\n * @since 1.0.0\n * @deprecated\n */\nexport var Dictionary = UnknownRecord;\n/**\n * @since 1.0.0\n * @deprecated\n */\nvar ObjectType = /** @class */ (function (_super) {\n    __extends(ObjectType, _super);\n    function ObjectType() {\n        var _this = _super.call(this, 'object', function (u) { return u !== null && typeof u === 'object'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ObjectType';\n        return _this;\n    }\n    return ObjectType;\n}(Type));\nexport { ObjectType };\n/**\n * Use `UnknownRecord` instead.\n *\n * @category primitives\n * @since 1.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexport var object = new ObjectType();\n/**\n * Use `record` instead.\n *\n * @category combinators\n * @since 1.0.0\n * @deprecated\n */\nexport var dictionary = record;\n/**\n * @since 1.0.0\n * @deprecated\n */\nvar StrictType = /** @class */ (function (_super) {\n    __extends(StrictType, _super);\n    function StrictType(name, \n    // tslint:disable-next-line: deprecation\n    is, \n    // tslint:disable-next-line: deprecation\n    validate, \n    // tslint:disable-next-line: deprecation\n    encode, props) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.props = props;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'StrictType';\n        return _this;\n    }\n    return StrictType;\n}(Type));\nexport { StrictType };\n/**\n * Drops the codec \"kind\".\n *\n * @category combinators\n * @since 1.1.0\n * @deprecated\n */\nexport function clean(codec) {\n    return codec;\n}\nexport function alias(codec) {\n    return function () { return codec; };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) {\n    return function () { return ({\n        meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n        join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n        zero: function () { return B.zero; },\n        one: function () { return B.one; },\n        implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n        not: function (x) { return function (a) { return B.not(x(a)); }; }\n    }); };\n};\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = (0, exports.getSemigroup)(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = (0, exports.getSemiring)(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) {\n    return function (f) {\n        return f(a);\n    };\n};\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\nfunction flip(f) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length > 1) {\n            return f(args[1], args[0]);\n        }\n        return function (a) { return f(a)(args[0]); };\n    };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default: {\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n        }\n    }\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n", "\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1), true); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction ap(F, G) {\n    return function (fa) {\n        return function (fab) {\n            return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n        };\n    };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) {\n        return function (first) {\n            return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n        };\n    };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) {\n        return function (fa) {\n            return F.ap(F.map(fa, function (a) { return function (b) {\n                var _a;\n                return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n            }; }), fb);\n        };\n    };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!_.has.call(tupleConstructors, len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctorComposition = exports.let = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\nfunction let_(F) {\n    return function (name, f) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = f(a), _a));\n    }); }; };\n}\nexports.let = let_;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return (0, function_1.pipe)(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplicativeComposition = exports.getApplicativeMonoid = void 0;\n/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction getApplicativeMonoid(F) {\n    var f = (0, Apply_1.getApplySemigroup)(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\nexports.getApplicativeMonoid = getApplicativeMonoid;\n/** @deprecated */\nfunction getApplicativeComposition(F, G) {\n    var map = (0, Functor_1.getFunctorComposition)(F, G).map;\n    var _ap = (0, Apply_1.ap)(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return (0, function_1.pipe)(fgab, _ap(fga)); }\n    };\n}\nexports.getApplicativeComposition = getApplicativeComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexports.chainFirst = chainFirst;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tailRec = void 0;\n/**\n * @since 2.0.0\n */\nvar tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\nexports.tailRec = tailRec;\n", "\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterOrElse = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexports.fromOption = fromOption;\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) {\n        return function (a) {\n            return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n        };\n    };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return (0, function_1.flow)(f, from); };\n    };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromEitherK(F) {\n    return function (f) { return (0, function_1.flow)(f, F.fromEither); };\n}\nexports.fromEitherK = fromEitherK;\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexports.chainEitherK = chainEitherK;\nfunction chainFirstEitherK(F, M) {\n    return (0, function_1.flow)(fromEitherK(F), (0, Chain_1.chainFirst)(M));\n}\nexports.chainFirstEitherK = chainFirstEitherK;\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) {\n        return function (ma) {\n            return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n        };\n    };\n}\nexports.filterOrElse = filterOrElse;\n", "\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\nvar _bimap = function (fa, g, f) { return (0, function_1.pipe)(fa, (0, exports.bimap)(g, f)); };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar map = function (f) {\n    return function (fa) {\n        return (0, exports.separated)((0, exports.left)(fa), f((0, exports.right)(fa)));\n    };\n};\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar mapLeft = function (f) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), (0, exports.right)(fa));\n    };\n};\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar bimap = function (f, g) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), g((0, exports.right)(fa)));\n    };\n};\nexports.bimap = bimap;\n/**\n * @category type lambdas\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterE = exports.witherDefault = exports.wiltDefault = void 0;\nvar _ = __importStar(require(\"./internal\"));\nfunction wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexports.wiltDefault = wiltDefault;\nfunction witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexports.witherDefault = witherDefault;\nfunction filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\nexports.filterE = filterE;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fold = exports.match = exports.foldW = exports.matchW = exports.isRight = exports.isLeft = exports.fromOption = exports.fromPredicate = exports.FromEither = exports.MonadThrow = exports.throwError = exports.ChainRec = exports.Extend = exports.extend = exports.Alt = exports.alt = exports.altW = exports.Bifunctor = exports.mapLeft = exports.bimap = exports.Traversable = exports.sequence = exports.traverse = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.chain = exports.chainW = exports.Applicative = exports.Apply = exports.ap = exports.apW = exports.Pointed = exports.of = exports.Functor = exports.map = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = exports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.right = exports.left = void 0;\nexports.getValidation = exports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.either = exports.stringifyJSON = exports.parseJSON = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.let = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toError = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.orElse = exports.orElseW = exports.swap = exports.filterOrElseW = exports.filterOrElse = exports.chainOptionK = exports.fromOptionK = exports.duplicate = exports.flatten = exports.flattenW = exports.chainFirstW = exports.chainFirst = exports.apSecondW = exports.apSecond = exports.apFirstW = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar ChainRec_1 = require(\"./ChainRec\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.right = _.right;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return (0, function_1.pipe)(ma, (0, exports.chain)(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return (0, function_1.pipe)(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return (0, function_1.pipe)(fa, (0, exports.bimap)(f, g)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\nvar _chainRec = function (a, f) {\n    return (0, ChainRec_1.tailRec)(f(a), function (e) {\n        return (0, exports.isLeft)(e) ? (0, exports.right)((0, exports.left)(e.left)) : (0, exports.isLeft)(e.right) ? (0, exports.left)(f(e.right.left)) : (0, exports.right)((0, exports.right)(e.right.right));\n    });\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (SE, SA) { return ({\n    show: function (ma) { return ((0, exports.isLeft)(ma) ? \"left(\".concat(SE.show(ma.left), \")\") : \"right(\".concat(SA.show(ma.right), \")\")); }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || ((0, exports.isLeft)(x) ? (0, exports.isLeft)(y) && EL.equals(x.left, y.left) : (0, exports.isRight)(y) && EA.equals(x.right, y.right));\n    }\n}); };\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function (S) { return ({\n    concat: function (x, y) { return ((0, exports.isLeft)(y) ? x : (0, exports.isLeft)(x) ? y : (0, exports.right)(S.concat(x.right, y.right))); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: function (ma) { return ((0, exports.isLeft)(ma) ? ma : ma.right._tag === 'None' ? empty : (0, exports.right)(ma.right.value)); },\n        separate: function (ma) {\n            return (0, exports.isLeft)(ma)\n                ? (0, Separated_1.separated)(ma, ma)\n                : (0, exports.isLeft)(ma.right)\n                    ? (0, Separated_1.separated)((0, exports.right)(ma.right.left), empty)\n                    : (0, Separated_1.separated)(empty, (0, exports.right)(ma.right.right));\n        }\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getFilterable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    var _a = (0, exports.getCompactable)(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return (0, exports.isLeft)(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return (0, exports.isLeft)(ma)\n            ? (0, Separated_1.separated)(ma, ma)\n            : p(ma.right)\n                ? (0, Separated_1.separated)(empty, (0, exports.right)(ma.right))\n                : (0, Separated_1.separated)((0, exports.right)(ma.right), empty);\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : (0, exports.right)(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return (0, Separated_1.separated)(ma, ma);\n            }\n            var e = f(ma.right);\n            return (0, exports.isLeft)(e) ? (0, Separated_1.separated)((0, exports.right)(e.left), empty) : (0, Separated_1.separated)(empty, (0, exports.right)(e.right));\n        }\n    };\n};\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.0.0\n */\nvar getWitherable = function (M) {\n    var F_ = (0, exports.getFilterable)(M);\n    var C = (0, exports.getCompactable)(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: (0, Witherable_1.witherDefault)(exports.Traversable, C),\n        wilt: (0, Witherable_1.wiltDefault)(exports.Traversable, C)\n    };\n};\nexports.getWitherable = getWitherable;\n/**\n * The default [`Applicative`](#applicative) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as A from 'fp-ts/Apply'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const parsePerson = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     E.apS('name', parseString(input.name)),\n *     E.apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePerson({}), E.left('not a string')) // <= first error\n *\n * const Applicative = E.getApplicativeValidation(\n *   pipe(string.Semigroup, S.intercalate(', '))\n * )\n *\n * const apS = A.apS(Applicative)\n *\n * const parsePersonAll = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     apS('name', parseString(input.name)),\n *     apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePersonAll({}), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getApplicativeValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return (0, exports.isLeft)(fab)\n            ? (0, exports.isLeft)(fa)\n                ? (0, exports.left)(SE.concat(fab.left, fa.left))\n                : fab\n            : (0, exports.isLeft)(fa)\n                ? fa\n                : (0, exports.right)(fab.right(fa.right));\n    },\n    of: exports.of\n}); };\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * const parse = (u: unknown): E.Either<string, string | number> =>\n *   pipe(\n *     parseString(u),\n *     E.alt<string, string | number>(() => parseNumber(u))\n *   )\n *\n * assert.deepStrictEqual(parse(true), E.left('not a number')) // <= last error\n *\n * const Alt = E.getAltValidation(pipe(string.Semigroup, S.intercalate(', ')))\n *\n * const parseAll = (u: unknown): E.Either<string, string | number> =>\n *   Alt.alt<string | number>(parseString(u), () => parseNumber(u))\n *\n * assert.deepStrictEqual(parseAll(true), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getAltValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if ((0, exports.isRight)(me)) {\n            return me;\n        }\n        var ea = that();\n        return (0, exports.isLeft)(ea) ? (0, exports.left)(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\nexports.getAltValidation = getAltValidation;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? fa : (0, exports.right)(f(fa.right));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nvar apW = function (fa) { return function (fab) {\n    return (0, exports.isLeft)(fab) ? fab : (0, exports.isLeft)(fa) ? fa : (0, exports.right)(fab.right(fa.right));\n}; };\nexports.apW = apW;\n/**\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * const e1: E.Either<string, number> = E.right(1)\n * const e2: E.Either<number, number> = E.right(2)\n *\n * export const result1 = pipe(\n *   // @ts-expect-error\n *   e1,\n *   E.chain(() => e2)\n * )\n *\n * // merged error types -----v-------------v\n * // const result2: E.Either<string | number, number>\n * export const result2 = pipe(\n *   e1, // no error\n *   E.chainW(() => e2)\n * )\n *\n * @category sequencing\n * @since 2.6.0\n */\nvar chainW = function (f) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? ma : f(ma.right);\n    };\n};\nexports.chainW = chainW;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chain = exports.chainW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(b, fa.right);\n}; };\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? M.empty : f(fa.right);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(fa.right, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return (0, exports.isLeft)(ta) ? F.of((0, exports.left)(ta.left)) : F.map(f(ta.right), exports.right);\n        };\n    };\n};\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? F.of((0, exports.left)(ma.left)) : F.map(ma.right, exports.right);\n    };\n};\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : (0, exports.right)(g(fa.right));\n}; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.0.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : fa;\n}; };\nexports.mapLeft = mapLeft;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Either` returns the left-most non-`Left` value (or the right-most `Left` value if both values are `Left`).\n *\n * | x        | y        | pipe(x, alt(() => y) |\n * | -------- | -------- | -------------------- |\n * | left(a)  | left(b)  | left(b)              |\n * | left(a)  | right(2) | right(2)             |\n * | right(1) | left(b)  | right(1)             |\n * | right(1) | right(2) | right(1)             |\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.left('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(2)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(1)\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return (0, exports.isLeft)(wa) ? wa : (0, exports.right)(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @since 2.6.3\n */\nexports.throwError = exports.left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: function_1.identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category lifting\n * @since 2.0.0\n */\nexports.fromPredicate = (0, FromEither_1.fromPredicate)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/ (0, FromEither_1.fromOption)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isRight = _.isRight;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nvar matchW = function (onLeft, onRight) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : onRight(ma.right);\n    };\n};\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nvar getOrElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma.right;\n    };\n};\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apFirstW = exports.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apSecondW = exports.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/ (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexports.flattenW = \n/*#__PURE__*/ (0, exports.chainW)(function_1.identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = exports.flattenW;\n/**\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category lifting\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/ (0, FromEither_1.fromOptionK)(exports.FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainOptionK = (0, FromEither_1.chainOptionK)(exports.FromEither, exports.Chain);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.filterOrElse = (0, FromEither_1.filterOrElse)(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @since 2.0.0\n */\nvar swap = function (ma) { return ((0, exports.isLeft)(ma) ? (0, exports.right)(ma.left) : (0, exports.left)(ma.right)); };\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar orElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma;\n    };\n};\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.orElse = exports.orElseW;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromNullable = function (e) {\n    return function (a) {\n        return a == null ? (0, exports.left)(e) : (0, exports.right)(a);\n    };\n};\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onThrow) {\n    try {\n        return (0, exports.right)(f());\n    }\n    catch (e) {\n        return (0, exports.left)(onThrow(e));\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f, onThrow) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.tryCatch)(function () { return f.apply(void 0, a); }, onThrow);\n    };\n};\nexports.tryCatchK = tryCatchK;\n/**\n * @category lifting\n * @since 2.9.0\n */\nvar fromNullableK = function (e) {\n    var from = (0, exports.fromNullable)(e);\n    return function (f) { return (0, function_1.flow)(f, from); };\n};\nexports.fromNullableK = fromNullableK;\n/**\n * @category sequencing\n * @since 2.9.0\n */\nvar chainNullableK = function (e) {\n    var from = (0, exports.fromNullableK)(e);\n    return function (f) { return (0, exports.chain)(from(f)); };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * @category conversions\n * @since 2.10.0\n */\nexports.toUnion = (0, exports.foldW)(function_1.identity, function_1.identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return (0, exports.isLeft)(ma) ? false : E.equals(a, ma.right);\n    };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? false : predicate(ma.right);\n    };\n};\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var e = f(0, _.head(as));\n        if ((0, exports.isLeft)(e)) {\n            return e;\n        }\n        var out = [e.right];\n        for (var i = 1; i < as.length; i++) {\n            var e_1 = f(i, as[i]);\n            if ((0, exports.isLeft)(e_1)) {\n                return e_1;\n            }\n            out.push(e_1.right);\n        }\n        return (0, exports.right)(out);\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/ (0, exports.traverseArray)(function_1.identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction parseJSON(s, onError) {\n    return (0, exports.tryCatch)(function () { return JSON.parse(s); }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar stringifyJSON = function (u, onError) {\n    return (0, exports.tryCatch)(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\nexports.stringifyJSON = stringifyJSON;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `E.Functor` instead of `E.either`\n * (where `E` is from `import E from 'fp-ts/Either'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.either = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/ (0, Apply_1.getApplySemigroup)(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/ (0, Applicative_1.getApplicativeMonoid)(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationSemigroup = function (SE, SA) {\n    return (0, Apply_1.getApplySemigroup)((0, exports.getApplicativeValidation)(SE))(SA);\n};\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationMonoid = function (SE, MA) {\n    return (0, Applicative_1.getApplicativeMonoid)((0, exports.getApplicativeValidation)(SE))(MA);\n};\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction getValidation(SE) {\n    var ap = (0, exports.getApplicativeValidation)(SE).ap;\n    var alt = (0, exports.getAltValidation)(SE).alt;\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        chainRec: _chainRec,\n        throwError: exports.throwError,\n        ap: ap,\n        alt: alt\n    };\n}\nexports.getValidation = getValidation;\n", "import { pipe } from './function';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexport var struct = function (eqs) {\n    return fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Eq<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for equality (meaning we have an `Eq<X>`)\n *\n * For example, given the following `User` type, we want to construct an `Eq<User>` that just looks at the `key` field\n * for each user (since it's known to be unique).\n *\n * If we have a way of comparing `UUID`s for equality (`eqUUID: Eq<UUID>`) and we know how to go from `User -> UUID`,\n * using `contramap` we can do this\n *\n * @example\n * import { contramap, Eq } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/string'\n *\n * type UUID = string\n *\n * interface User {\n *   readonly key: UUID\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const eqUUID: Eq<UUID> = S.Eq\n *\n * const eqUserByKey: Eq<User> = pipe(\n *   eqUUID,\n *   contramap((user) => user.key)\n * )\n *\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k2', firstName: 'a1', lastName: 'b1' }\n *   ),\n *   false\n * )\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k1', firstName: 'a2', lastName: 'b1' }\n *   ),\n *   true\n * )\n *\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (x, y) { return fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\n/**\n * @category instances\n * @since 2.6.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleEq = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructEq = struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var strictEqual = eqStrict.equals;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Contravariant` instance, pass `E.Contravariant` instead of `E.eq`\n * (where `E` is from `import E from 'fp-ts/Eq'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eq = Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqBoolean = eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqString = eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqNumber = eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n", "import { eqStrict } from './Eq';\nimport { constant, constTrue, pipe } from './function';\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nexport var equalsDefault = function (compare) {\n    return function (first, second) {\n        return first === second || compare(first, second) === 0;\n    };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromCompare = function (compare) { return ({\n    equals: equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\n/**\n * @since 2.10.0\n */\nexport var reverse = function (O) { return fromCompare(function (first, second) { return O.compare(second, first); }); };\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Ord<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for ordering (meaning we have an `Ord<X>`)\n *\n * For example, given the following `User` type, there are lots of possible choices for `X`,\n * but let's say we want to sort a list of users by `lastName`.\n *\n * If we have a way of comparing `lastName`s for ordering (`ordLastName: Ord<string>`) and we know how to go from `User -> string`,\n * using `contramap` we can do this\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import { contramap, Ord } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const ordLastName: Ord<string> = S.Ord\n *\n * const ordByLastName: Ord<User> = pipe(\n *   ordLastName,\n *   contramap((user) => user.lastName)\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordByLastName)([\n *     { firstName: 'a', lastName: 'd' },\n *     { firstName: 'c', lastName: 'b' }\n *   ]),\n *   [\n *     { firstName: 'c', lastName: 'b' },\n *     { firstName: 'a', lastName: 'd' }\n *   ]\n * )\n *\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Ord';\n/**\n * A typical use case for the `Semigroup` instance of `Ord` is merging two or more orderings.\n *\n * For example the following snippet builds an `Ord` for a type `User` which\n * sorts by `created` date descending, and **then** `lastName`\n *\n * @example\n * import * as D from 'fp-ts/Date'\n * import { pipe } from 'fp-ts/function'\n * import { contramap, getSemigroup, Ord, reverse } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly id: string\n *   readonly lastName: string\n *   readonly created: Date\n * }\n *\n * const ordByLastName: Ord<User> = pipe(\n *   S.Ord,\n *   contramap((user) => user.lastName)\n * )\n *\n * const ordByCreated: Ord<User> = pipe(\n *   D.Ord,\n *   contramap((user) => user.created)\n * )\n *\n * const ordUserByCreatedDescThenLastName = getSemigroup<User>().concat(\n *   reverse(ordByCreated),\n *   ordByLastName\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordUserByCreatedDescThenLastName)([\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) }\n *   ]),\n *   [\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) }\n *   ]\n * )\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: fromCompare(function () { return 0; })\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var trivial = {\n    equals: constTrue,\n    compare: /*#__PURE__*/ constant(0)\n};\n/**\n * @since 2.11.0\n */\nexport var equals = function (O) {\n    return function (second) {\n        return function (first) {\n            return first === second || O.compare(first, second) === 0;\n        };\n    };\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var lt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === -1;\n    };\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var gt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === 1;\n    };\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var leq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== 1;\n    };\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var geq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== -1;\n    };\n};\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var min = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) < 1 ? first : second;\n    };\n};\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var max = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) > -1 ? first : second;\n    };\n};\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nexport var clamp = function (O) {\n    var minO = min(O);\n    var maxO = max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nexport var between = function (O) {\n    var ltO = lt(O);\n    var gtO = gt(O);\n    return function (low, hi) { return function (a) { return ltO(a, low) || gtO(a, hi) ? false : true; }; };\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleOrd = tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualOrd = reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ord = Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ordDate = /*#__PURE__*/ pipe(ordNumber, \n/*#__PURE__*/\ncontramap(function (date) { return date.valueOf(); }));\n", "/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @since 2.11.0\n */\nexport var reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\n/**\n * @since 2.11.0\n */\nexport var filterFirst = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n    }); };\n};\n/**\n * @since 2.11.0\n */\nexport var filterSecond = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n    }); };\n};\n/**\n * @since 2.11.0\n */\nexport var endo = function (f) {\n    return function (M) { return ({\n        concat: function (first, second) { return M.concat(f(first), f(second)); }\n    }); };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nexport var concatAll = function (M) {\n    return function (startWith) {\n        return function (as) {\n            return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n        };\n    };\n};\n", "/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nimport { getSemigroup, identity } from './function';\nimport * as _ from './internal';\nimport * as M from './Magma';\nimport * as Or from './Ord';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var min = function (O) { return ({\n    concat: Or.min(O)\n}); };\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var max = function (O) { return ({\n    concat: Or.max(O)\n}); };\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @since 2.10.0\n */\nexport var reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @since 2.10.0\n */\nexport var struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @since 2.10.0\n */\nexport var intercalate = function (middle) {\n    return function (S) { return ({\n        concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n    }); };\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var first = function () { return ({ concat: identity }); };\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var last = function () { return ({ concat: function (_, y) { return y; } }); };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexport var concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupVoid = constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\n/**\n * Use [`last`](#last) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastSemigroup = last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstSemigroup = first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleSemigroup = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructSemigroup = struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualSemigroup = reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getJoinSemigroup = max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getMeetSemigroup = min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var getIntercalateSemigroup = intercalate;\nexport function fold(S) {\n    var concatAllS = concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getFunctionSemigroup = getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { flow, identity, pipe, SK } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as Se from './Semigroup';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexport var isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nexport var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\n/**\n * @internal\n */\nexport var prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function (i, a, as) {\n    if (isNonEmpty(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nexport var uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return as;\n        }\n        var out = [head(as)];\n        var rest = tail(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nexport var sortBy = function (ords) {\n    if (isNonEmpty(ords)) {\n        var M = getMonoid();\n        return sort(ords.reduce(M.concat, M.empty));\n    }\n    return identity;\n};\n/**\n * @since 2.11.0\n */\nexport var union = function (E) {\n    var uniqE = uniq(E);\n    return function (second) { return function (first) { return uniqE(pipe(first, concat(second))); }; };\n};\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nexport var rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if (isOutOfBound(Math.abs(m), as) || m === 0) {\n            return as;\n        }\n        if (m < 0) {\n            var _a = splitAt(-m)(as), f = _a[0], s = _a[1];\n            return pipe(s, concat(f));\n        }\n        else {\n            return rotate(m - len)(as);\n        }\n    };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var fromReadonlyArray = function (as) {\n    return isNonEmpty(as) ? _.some(as) : _.none;\n};\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function (a) { return makeBy(function () { return a; }); };\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function (start, end) {\n    return start <= end ? makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @since 2.9.0\n */\nexport var unprepend = function (as) { return [head(as), tail(as)]; };\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nexport var unappend = function (as) { return [init(as), last(as)]; };\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var fromArray = function (as) { return fromReadonlyArray(as.slice()); };\nexport function concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexport function concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @since 2.5.0\n */\nexport var reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([last(as)], as.slice(0, -1).reverse(), true);\n};\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.5.0\n */\nexport var groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.length === 1 ? as : as.slice().sort(O.compare);\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * @since 2.5.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * @since 2.5.1\n */\nexport var zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @since 2.5.1\n */\nexport var unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    return function (as) {\n        var rest = tail(as);\n        return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : as;\n    };\n};\n/**\n * @category sequencing\n * @since 2.10.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        var out = _.fromReadonlyNonEmptyArray(f(0, head(as)));\n        for (var i = 1; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nexport var chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while (isNonEmpty(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [as, empty] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n    };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nexport var chunksOf = function (n) { return chop(splitAt(n)); };\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/**\n * @category constructors\n * @since 2.5.0\n */\nexport var of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as RNEA.ReadonlyNonEmptyArray<number>,\n *     RNEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (as) {\n        return pipe(as, concatW(that()));\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyNonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * @since 2.5.0\n */\nexport var ap = function (as) { return chain(function (f) { return pipe(as, map(f)); }); };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chain = function (f) { return chainWithIndex(function (_, a) { return f(a); }); };\n/**\n * @since 2.5.0\n */\nexport var extend = function (f) {\n    return function (as) {\n        var next = tail(as);\n        var out = [f(as)];\n        while (isNonEmpty(next)) {\n            out.push(f(next));\n            next = tail(next);\n        }\n        return out;\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/ extend(identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/ chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nexport var map = function (f) {\n    return mapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category mapping\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, head(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nexport var foldMap = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n        };\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n    };\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0]));\n        };\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n    };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) { return traverseWithIndex(F)(SK); };\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, head(as)), of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexport var extract = _.head;\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function () { return ({\n    concat: concat\n}); };\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function (E) {\n    return fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\n/**\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = /*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: _map,\n    extend: _extend,\n    extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexport var head = extract;\n/**\n * @since 2.5.0\n */\nexport var tail = _.tail;\n/**\n * @since 2.5.0\n */\nexport var last = function (as) { return as[as.length - 1]; };\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nexport var init = function (as) { return as.slice(0, -1); };\n/**\n * @since 2.5.0\n */\nexport var min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\n/**\n * @since 2.5.0\n */\nexport var max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\n/**\n * @since 2.10.0\n */\nexport var concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeft = function (f) {\n    return function (as) {\n        return f(head(as), tail(as));\n    };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRight = function (f) {\n    return function (as) {\n        return f(init(as), last(as));\n    };\n};\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f(head(as))], tail(as), true);\n    };\n};\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateHead = function (a) { return modifyHead(function () { return a; }); };\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function (f) {\n    return function (as) {\n        return pipe(init(as), append(f(last(as))));\n    };\n};\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateLast = function (a) { return modifyLast(function () { return a; }); };\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function (S) {\n    var concatAllS = concatAll(S);\n    return function (middle) { return flow(intersperse(middle), concatAllS); };\n};\nexport function groupSort(O) {\n    var sortO = sort(O);\n    var groupO = group(O);\n    return function (as) { return (isNonEmpty(as) ? groupO(sortO(as)) : empty); };\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var filterWithIndex = function (predicate) {\n    return function (as) {\n        return fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n    return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = function (init, end) { return pipe(init, concat([end])); };\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RNEA.Functor` instead of `RNEA.readonlyNonEmptyArray`\n * (where `RNEA` is from `import RNEA from 'fp-ts/ReadonlyNonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyNonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { identity, pipe } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/**\n * @internal\n */\nexport var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\n/**\n * @internal\n */\nexport var prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function (i, a, as) {\n    if (isNonEmpty(as)) {\n        var xs = fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    var xs = fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n};\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nexport var uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return copy(as);\n        }\n        var out = [head(as)];\n        var rest = tail(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nexport var sortBy = function (ords) {\n    if (isNonEmpty(ords)) {\n        var M = getMonoid();\n        return sort(ords.reduce(M.concat, M.empty));\n    }\n    return copy;\n};\n/**\n * @since 2.11.0\n */\nexport var union = function (E) {\n    var uniqE = uniq(E);\n    return function (second) { return function (first) { return uniqE(pipe(first, concat(second))); }; };\n};\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nexport var rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if (isOutOfBound(Math.abs(m), as) || m === 0) {\n            return copy(as);\n        }\n        if (m < 0) {\n            var _a = splitAt(-m)(as), f = _a[0], s = _a[1];\n            return pipe(s, concat(f));\n        }\n        else {\n            return rotate(m - len)(as);\n        }\n    };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.10.0\n */\nexport var fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromArray = function (as) { return (isNonEmpty(as) ? _.some(as) : _.none); };\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function (a) { return makeBy(function () { return a; }); };\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function (start, end) {\n    return start <= end ? makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @since 2.9.0\n */\nexport var unprepend = function (as) { return [head(as), tail(as)]; };\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nexport var unappend = function (as) { return [init(as), last(as)]; };\nexport function concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexport function concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @since 2.0.0\n */\nexport var reverse = function (as) { return __spreadArray([last(as)], as.slice(0, -1).reverse(), true); };\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.0.0\n */\nexport var groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.slice().sort(O.compare);\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var copy = fromReadonlyNonEmptyArray;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var of = function (a) { return [a]; };\n/**\n * @since 2.5.1\n */\nexport var zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @since 2.5.1\n */\nexport var unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    return function (as) {\n        var rest = tail(as);\n        return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : copy(as);\n    };\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = RNEA.foldMap;\n/**\n * @category sequencing\n * @since 2.10.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        var out = fromReadonlyNonEmptyArray(f(0, head(as)));\n        for (var i = 1; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * @since 2.10.0\n */\nexport var chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while (isNonEmpty(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [copy(as), []] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n    };\n};\n/**\n * @since 2.10.0\n */\nexport var chunksOf = function (n) { return chop(splitAt(n)); };\n/* istanbul ignore next */\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as NEA.NonEmptyArray<number>,\n *     NEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (as) {\n        return pipe(as, concatW(that()));\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `NonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @since 2.0.0\n */\nexport var ap = function (as) {\n    return chain(function (f) { return pipe(as, map(f)); });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = function (f) {\n    return chainWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @since 2.0.0\n */\nexport var extend = function (f) {\n    return function (as) {\n        var next = tail(as);\n        var out = [f(as)];\n        while (isNonEmpty(next)) {\n            out.push(f(next));\n            next = tail(next);\n        }\n        return out;\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/ chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return mapWithIndex(function (_, a) { return f(a); }); };\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, head(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = RNEA.reduce;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = RNEA.reduceRight;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) { return traverseWithIndex(F)(function (_, a) { return a; }); };\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, head(as)), of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\n/**\n * @since 2.7.0\n */\nexport var extract = RNEA.head;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: concat\n}); };\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RNEA.getEq;\n/**\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: _map,\n    extend: _extend,\n    extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexport var head = RNEA.head;\n/**\n * @since 2.0.0\n */\nexport var tail = function (as) { return as.slice(1); };\n/**\n * @since 2.0.0\n */\nexport var last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nexport var init = function (as) { return as.slice(0, -1); };\n/**\n * @since 2.0.0\n */\nexport var min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexport var max = RNEA.max;\n/**\n * @since 2.10.0\n */\nexport var concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeft = function (f) {\n    return function (as) {\n        return f(head(as), tail(as));\n    };\n};\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRight = function (f) {\n    return function (as) {\n        return f(init(as), last(as));\n    };\n};\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f(head(as))], tail(as), true);\n    };\n};\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateHead = function (a) { return modifyHead(function () { return a; }); };\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function (f) {\n    return function (as) {\n        return pipe(init(as), append(f(last(as))));\n    };\n};\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateLast = function (a) { return modifyLast(function () { return a; }); };\n/**\n * Places an element in between members of a `NonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = RNEA.intercalate;\nexport function groupSort(O) {\n    var sortO = sort(O);\n    var groupO = group(O);\n    return function (as) { return (isNonEmpty(as) ? groupO(sortO(as)) : []); };\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var filterWithIndex = function (predicate) {\n    return function (as) {\n        return fromArray(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n    return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = function (init, end) { return pipe(init, append(end)); };\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = RNEA.concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `NEA.Functor` instead of `NEA.nonEmptyArray`\n * (where `NEA` is from `import NEA from 'fp-ts/NonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var nonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n", "// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nexport var isNumber = function (u) { return typeof u === 'number'; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bounded = {\n    equals: Eq.equals,\n    compare: Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidSum = {\n    concat: SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidProduct = {\n    concat: SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Field = {\n    add: SemigroupSum.concat,\n    zero: 0,\n    mul: SemigroupProduct.concat,\n    one: 1,\n    sub: MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n", "export function guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_, let as let__ } from './Functor';\nimport * as _ from './internal';\nimport * as N from './number';\nimport { fromCompare } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isEmpty = function (as) { return as.length === 0; };\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @since 2.11.0\n */\nexport var prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @since 2.11.0\n */\nexport var appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var makeBy = function (n, f) { return (n <= 0 ? empty : RNEA.makeBy(f)(n)); };\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var replicate = function (n, a) { return makeBy(n, function () { return a; }); };\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : empty); };\n}\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.11.0\n */\nexport var fromOption = function (ma) { return (_.isNone(ma) ? empty : [ma.value]); };\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category conversions\n * @since 2.11.0\n */\nexport var fromEither = function (e) { return (_.isLeft(e) ? empty : [e.right]); };\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n    };\n};\n/**\n * @category pattern matching\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty();\n    };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty();\n    };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category sequencing\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        if (isEmpty(as)) {\n            return empty;\n        }\n        var out = [];\n        for (var i = 0; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.5.0\n */\nexport var scanLeft = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[0] = b;\n        for (var i = 0; i < len; i++) {\n            out[i + 1] = f(out[i], as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.5.0\n */\nexport var scanRight = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[len] = b;\n        for (var i = len - 1; i >= 0; i--) {\n            out[i] = f(as[i], out[i + 1]);\n        }\n        return out;\n    };\n};\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nexport var size = function (as) { return as.length; };\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport var isOutOfBound = RNEA.isOutOfBound;\nexport function lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport var head = function (as) { return (isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none); };\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport var last = function (as) { return (isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none); };\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport var tail = function (as) {\n    return isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport var init = function (as) {\n    return isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @since 2.5.0\n */\nexport var takeLeft = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(0, n);\n    };\n};\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @since 2.5.0\n */\nexport var takeRight = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(-n);\n    };\n};\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? empty : out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var _a = splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @since 2.5.0\n */\nexport var dropLeft = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(n, as.length);\n    };\n};\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @since 2.5.0\n */\nexport var dropRight = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(0, as.length - n);\n    };\n};\nexport function dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanLeftIndex(as, predicate);\n        return i === 0 ? as : i === as.length ? empty : as.slice(i);\n    };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport var findIndex = function (predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\nexport function findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport var findFirstMap = function (f) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\nexport function findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport var findLastMap = function (f) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport var findLastIndex = function (predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport var deleteAt = function (i) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n    };\n};\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.5.0\n */\nexport var reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.5.0\n */\nexport var rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nexport var lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.5.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.length <= 1 ? as : as.slice().sort(O.compare);\n    };\n};\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.5.0\n */\nexport var zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nexport var unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.5.0\n */\nexport var rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\nexport function elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.5.0\n */\nexport var uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.5.0\n */\nexport var sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.5.0\n */\nexport var chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return (isNonEmpty(as) ? g(as) : empty); };\n};\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        return n >= 1 && isNonEmpty(as) ? RNEA.splitAt(n)(as) : isEmpty(as) ? [as, empty] : [empty, as];\n    };\n};\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.5.0\n */\nexport var chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : empty); };\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromOption(f.apply(void 0, a));\n    };\n};\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return isNonEmpty(input)\n            ? pipe(RNEA.head(input), chain(function (x) { return go(pipe(scope, append(x)), RNEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : empty;\n    };\n    return go(empty, input);\n}\n/**\n * @since 2.11.0\n */\nexport var concatW = function (second) {\n    return function (first) {\n        return isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second);\n    };\n};\n/**\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return isNonEmpty(first) && isNonEmpty(second) ? unionE(second)(first) : isNonEmpty(first) ? first : second;\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\nvar _filter = function (fa, predicate) {\n    return pipe(fa, filter(predicate));\n};\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\nvar _extend = function (fa, f) { return pipe(fa, extend(f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/** @internal */\nexport var _chainRecDepthFirst = function (a, f) { return pipe(a, chainRecDepthFirst(f)); };\n/** @internal */\nexport var _chainRecBreadthFirst = function (a, f) { return pipe(a, chainRecBreadthFirst(f)); };\n/**\n * @category constructors\n * @since 2.5.0\n */\nexport var of = RNEA.of;\n/**\n * @since 2.7.0\n */\nexport var zero = function () { return empty; };\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (fa) {\n        return fa.concat(that());\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.5.0\n */\nexport var alt = altW;\n/**\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n    return chain(function (f) { return pipe(fa, map(f)); });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chain(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/ chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nexport var map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\n/**\n * @category mapping\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filter = function (predicate) {\n    return function (as) {\n        return as.filter(predicate);\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) {\n    return function (fa) {\n        var out = [];\n        for (var i = 0; i < fa.length; i++) {\n            var optionB = f(i, fa[i]);\n            if (_.isSome(optionB)) {\n                out.push(optionB.value);\n            }\n        }\n        return out;\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var compact = /*#__PURE__*/ filterMap(identity);\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < as.length; i++) {\n            var a = as[i];\n            if (predicateWithIndex(i, a)) {\n                right.push(a);\n            }\n            else {\n                left.push(a);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) {\n    return function (fa) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < fa.length; i++) {\n            var e = f(i, fa[i]);\n            if (e._tag === 'Left') {\n                left.push(e.left);\n            }\n            else {\n                right.push(e.right);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        return as.filter(function (a, i) { return predicateWithIndex(i, a); });\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\n/**\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) {\n    return function (f) {\n        return function (fa) {\n            return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n        };\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) { return function (fa) {\n    return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n}; };\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ta) {\n        return _reduce(ta, F.of(zero()), function (fas, fa) {\n            return F.ap(F.map(fas, function (as) { return function (a) { return pipe(as, append(a)); }; }), fa);\n        });\n    };\n};\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n            return F.ap(F.map(fbs, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, a));\n        });\n    };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) { return (isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second)); }\n}); };\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function (E) {\n    return fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getOrd = function (O) {\n    return fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) { return ({\n    concat: getUnionSemigroup(E).concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexport var guard = /*#__PURE__*/ guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = function (f) {\n    return function (a) {\n        var todo = __spreadArray([], f(a), true);\n        var out = [];\n        while (todo.length > 0) {\n            var e = todo.shift();\n            if (_.isLeft(e)) {\n                todo.unshift.apply(todo, f(e.left));\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        return out;\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = function (f) {\n    return function (a) {\n        var initial = f(a);\n        var todo = [];\n        var out = [];\n        function go(e) {\n            if (_.isLeft(e)) {\n                f(e.left).forEach(function (v) { return todo.push(v); });\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n            var e = initial_1[_i];\n            go(e);\n        }\n        while (todo.length > 0) {\n            go(todo.shift());\n        }\n        return out;\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexport var filterE = /*#__PURE__*/ filterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromEitherK = /*#__PURE__*/ fromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    return isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var toArray = function (as) { return as.slice(); };\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var fromArray = function (as) { return (isEmpty(as) ? empty : as.slice()); };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = RNEA.empty;\nexport function every(predicate) {\n    return function (as) { return as.every(predicate); };\n}\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) {\n    return function (as) {\n        return as.some(predicate);\n    };\n};\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n/**\n * Places an element in between members of a `ReadonlyArray`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function (M) {\n    var intercalateM = RNEA.intercalate(M);\n    return function (middle) { return match(function () { return M.empty; }, intercalateM(middle)); };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RA.Functor` instead of `RA.readonlyArray`\n * (where `RA` is from `import RA from 'fp-ts/ReadonlyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyArray = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: zero,\n    unfold: unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n", "import { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as NEA from './NonEmptyArray';\nimport * as RA from './ReadonlyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isEmpty = function (as) { return as.length === 0; };\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @since 2.11.0\n */\nexport var prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @since 2.11.0\n */\nexport var appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var replicate = function (n, a) { return makeBy(n, function () { return a; }); };\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category conversions\n * @since 2.11.0\n */\nexport var fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category conversions\n * @since 2.11.0\n */\nexport var fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n    };\n};\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();\n    };\n};\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();\n    };\n};\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category sequencing\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        var out = [];\n        for (var i = 0; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.0.0\n */\nexport var scanLeft = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[0] = b;\n        for (var i = 0; i < len; i++) {\n            out[i + 1] = f(out[i], as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.0.0\n */\nexport var scanRight = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[len] = b;\n        for (var i = len - 1; i >= 0; i--) {\n            out[i] = f(as[i], out[i + 1]);\n        }\n        return out;\n    };\n};\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\nexport var size = function (as) { return as.length; };\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\nexport var isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexport var lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.0.0\n */\nexport var head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.0.0\n */\nexport var last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.0.0\n */\nexport var tail = function (as) { return (isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none); };\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.0.0\n */\nexport var init = function (as) { return (isNonEmpty(as) ? _.some(NEA.init(as)) : _.none); };\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @since 2.0.0\n */\nexport var takeLeft = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? copy(as) : as.slice(0, n);\n    };\n};\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @since 2.0.0\n */\nexport var takeRight = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? copy(as) : n === 0 ? [] : as.slice(-n);\n    };\n};\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var _a = splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @since 2.0.0\n */\nexport var dropLeft = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n    };\n};\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @since 2.0.0\n */\nexport var dropRight = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n    };\n};\nexport function dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexport var findIndex = RA.findIndex;\nexport function findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @since 2.0.0\n */\nexport var findFirstMap = RA.findFirstMap;\nexport function findLast(predicate) {\n    return RA.findLast(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @since 2.0.0\n */\nexport var findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\nexport var findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @since 2.0.0\n */\nexport var copy = function (as) { return as.slice(); };\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) { return modifyAt(i, function () { return a; }); };\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nexport var deleteAt = function (i) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n    };\n};\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.0.0\n */\nexport var reverse = function (as) { return (isEmpty(as) ? [] : as.slice().reverse()); };\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.0.0\n */\nexport var rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.0.0\n */\nexport var lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.0.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.length <= 1 ? copy(as) : as.slice().sort(O.compare);\n    };\n};\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.0.0\n */\nexport var zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nexport var unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.0.0\n */\nexport var rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexport var elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.0.0\n */\nexport var uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.0.0\n */\nexport var sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.0.0\n */\nexport var chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (isNonEmpty(as) ? g(as) : []); };\n};\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.0.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        return n >= 1 && isNonEmpty(as) ? NEA.splitAt(n)(as) : isEmpty(as) ? [copy(as), []] : [[], copy(as)];\n    };\n};\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.0.0\n */\nexport var chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromOption(f.apply(void 0, a));\n    };\n};\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return isNonEmpty(input)\n            ? pipe(NEA.head(input), chain(function (x) { return go(pipe(scope, append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\n/**\n * @since 2.11.0\n */\nexport var concatW = function (second) {\n    return function (first) {\n        return isEmpty(first) ? copy(second) : isEmpty(second) ? copy(first) : first.concat(second);\n    };\n};\n/**\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return isNonEmpty(first) && isNonEmpty(second)\n            ? unionE(second)(first)\n            : isNonEmpty(first)\n                ? copy(first)\n                : copy(second);\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return pipe(fa, extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @since 2.7.0\n */\nexport var zero = function () { return []; };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\n/**\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])), [\n *   \"a1😀\", \"a1😫\", \"a1😎\",\n *   \"a2😀\", \"a2😫\", \"a2😎\",\n *   \"b1😀\", \"b1😫\", \"b1😎\",\n *   \"b2😀\", \"b2😫\", \"b2😎\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"]))\n * );\n *\n * @since 2.0.0\n */\nexport var ap = function (fa) { return chain(function (f) { return pipe(fa, map(f)); }); };\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * This is the `chain` component of the array `Monad`.\n *\n * @example\n * import { chain, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], chain(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/ chain(identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterMapWithIndex = function (f) {\n    return function (fa) {\n        var out = [];\n        for (var i = 0; i < fa.length; i++) {\n            var optionB = f(i, fa[i]);\n            if (_.isSome(optionB)) {\n                out.push(optionB.value);\n            }\n        }\n        return out;\n    };\n};\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var compact = /*#__PURE__*/ filterMap(identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n};\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filter = function (predicate) {\n    return function (as) {\n        return as.filter(predicate);\n    };\n};\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < as.length; i++) {\n            var b = as[i];\n            if (predicateWithIndex(i, b)) {\n                right.push(b);\n            }\n            else {\n                left.push(b);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return partitionMapWithIndex(function (_, a) { return f(a); }); };\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionMapWithIndex = function (f) {\n    return function (fa) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < fa.length; i++) {\n            var e = f(i, fa[i]);\n            if (e._tag === 'Left') {\n                left.push(e.left);\n            }\n            else {\n                right.push(e.right);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (fa) {\n        return fa.concat(that());\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Array` concatenates the inputs into a single array.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n    };\n};\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @since 2.0.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ta) {\n        return _reduce(ta, F.of(zero()), function (fas, fa) {\n            return F.ap(F.map(fas, function (as) { return function (a) { return pipe(as, append(a)); }; }), fa);\n        });\n    };\n};\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n            return F.ap(F.map(fbs, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, a));\n        });\n    };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: []\n}); };\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) { return ({\n    concat: getUnionSemigroup(E).concat,\n    empty: []\n}); };\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexport var guard = /*#__PURE__*/ guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexport var filterE = /*#__PURE__*/ filterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromEitherK = /*#__PURE__*/ fromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    return isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexport var every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) {\n    return function (as) {\n        return as.some(predicate);\n    };\n};\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n/**\n * Places an element in between members of an `Array`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = RA.intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `A.Functor` instead of `A.array`\n * (where `A` is from `import A from 'fp-ts/Array'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var array = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: zero,\n    unfold: unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n", "import { constFalse, constTrue, flow, pipe } from './function';\nvar contramap_ = function (predicate, f) { return pipe(predicate, contramap(f)); };\n/**\n * @since 2.11.0\n */\nexport var contramap = function (f) {\n    return function (predicate) {\n        return flow(f, predicate);\n    };\n};\n/**\n * @category type lambdas\n * @since 2.11.0\n */\nexport var URI = 'Predicate';\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getSemigroupAny = function () { return ({\n    concat: function (first, second) { return pipe(first, or(second)); }\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getMonoidAny = function () { return ({\n    concat: getSemigroupAny().concat,\n    empty: constFalse\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getSemigroupAll = function () { return ({\n    concat: function (first, second) { return pipe(first, and(second)); }\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getMonoidAll = function () { return ({\n    concat: getSemigroupAll().concat,\n    empty: constTrue\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var not = function (predicate) {\n    return function (a) {\n        return !predicate(a);\n    };\n};\n/**\n * @since 2.11.0\n */\nexport var or = function (second) {\n    return function (first) {\n        return function (a) {\n            return first(a) || second(a);\n        };\n    };\n};\n/**\n * @since 2.11.0\n */\nexport var and = function (second) {\n    return function (first) {\n        return function (a) {\n            return first(a) && second(a);\n        };\n    };\n};\n", "import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { chainEitherK as chainEitherK_, fromEitherK as fromEitherK_, chainFirstEitherK as chainFirstEitherK_ } from './FromEither';\nimport { constNull, constUndefined, flow, identity, pipe } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { not } from './Predicate';\nimport { first, last } from './Semigroup';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var some = _.some;\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? some(a) : none); };\n}\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getLeft = function (ma) { return (ma._tag === 'Right' ? none : some(ma.left)); };\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getRight = function (ma) { return (ma._tag === 'Left' ? none : some(ma.right)); };\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (S) { return ({\n    show: function (ma) { return (isNone(ma) ? 'none' : \"some(\".concat(S.show(ma.value), \")\")); }\n}); };\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (E) { return ({\n    equals: function (x, y) { return x === y || (isNone(x) ? isNone(y) : isNone(y) ? false : E.equals(x.value, y.value)); }\n}); };\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = function (O) { return ({\n    equals: getEq(O).equals,\n    compare: function (x, y) { return (x === y ? 0 : isSome(x) ? (isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n}); };\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function (S) { return ({\n    concat: function (x, y) { return (isNone(x) ? y : isNone(y) ? x : some(S.concat(x.value, y.value))); },\n    empty: none\n}); };\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isNone(fa) ? none : some(f(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category constructors\n * @since 2.7.0\n */\nexport var of = some;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @since 2.0.0\n */\nexport var ap = function (fa) { return function (fab) {\n    return isNone(fab) ? none : isNone(fa) ? none : some(fab.value(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return isNone(ma) ? none : f(ma.value);\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(b, fa.value);\n}; };\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isNone(fa) ? M.empty : f(fa.value);\n}; }; };\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(fa.value, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return isNone(fa) ? that() : fa;\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * | x       | y       | pipe(x, alt(() => y) |\n * | ------- | ------- | -------------------- |\n * | none    | none    | none                 |\n * | some(a) | none    | some(a)              |\n * | none    | some(b) | some(b)              |\n * | some(a) | some(b) | some(a)              |\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.none)\n *   ),\n *   O.none\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt<string>(() => O.none)\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.7.0\n */\nexport var zero = function () { return none; };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexport var guard = /*#__PURE__*/ guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isNone(wa) ? none : some(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var compact = /*#__PURE__*/ chain(identity);\nvar defaultSeparated = /*#__PURE__*/ separated(none, none);\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var separate = function (ma) {\n    return isNone(ma) ? defaultSeparated : separated(getLeft(ma.value), getRight(ma.value));\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var filter = function (predicate) {\n    return function (fa) {\n        return isNone(fa) ? none : predicate(fa.value) ? fa : none;\n    };\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var filterMap = function (f) { return function (fa) {\n    return isNone(fa) ? none : f(fa.value);\n}; };\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var partition = function (predicate) {\n    return function (fa) {\n        return separated(_filter(fa, not(predicate)), _filter(fa, predicate));\n    };\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return flow(map(f), separate); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return isNone(ta) ? F.of(none) : F.map(f(ta.value), some);\n        };\n    };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ta) {\n        return isNone(ta) ? F.of(none) : F.map(ta.value, some);\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @since 2.7.0\n */\nexport var throwError = function () { return none; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    throwError: throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromEither = getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchW = function (onNone, onSome) {\n    return function (ma) {\n        return isNone(ma) ? onNone() : onSome(ma.value);\n    };\n};\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nexport var getOrElseW = function (onNone) {\n    return function (ma) {\n        return isNone(ma) ? onNone() : ma.value;\n    };\n};\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexport var flatten = compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @since 2.0.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromEitherK = /*#__PURE__*/ fromEitherK_(FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainEitherK = \n/*#__PURE__*/ chainEitherK_(FromEither, Chain);\n/**\n * @category sequencing\n * @since 2.12.0\n */\nexport var chainFirstEitherK = \n/*#__PURE__*/ chainFirstEitherK_(FromEither, Chain);\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromNullable = function (a) { return (a == null ? none : some(a)); };\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f) {\n    try {\n        return some(f());\n    }\n    catch (e) {\n        return none;\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return tryCatch(function () { return f.apply(void 0, a); });\n    };\n};\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category lifting\n * @since 2.9.0\n */\nexport var fromNullableK = function (f) { return flow(f, fromNullable); };\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category sequencing\n * @since 2.9.0\n */\nexport var chainNullableK = function (f) {\n    return function (ma) {\n        return isNone(ma) ? none : fromNullable(f(ma.value));\n    };\n};\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var toNullable = /*#__PURE__*/ match(constNull, identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var toUndefined = /*#__PURE__*/ match(constUndefined, identity);\nexport function elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return isNone(ma) ? false : E.equals(a, ma.value);\n    };\n}\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) {\n    return function (ma) {\n        return isNone(ma) ? false : predicate(ma.value);\n    };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n/**\n * @since 2.11.0\n */\nexport var ApT = /*#__PURE__*/ of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var o = f(0, _.head(as));\n        if (isNone(o)) {\n            return none;\n        }\n        var out = [o.value];\n        for (var i = 1; i < as.length; i++) {\n            var o_1 = f(i, as[i]);\n            if (isNone(o_1)) {\n                return none;\n            }\n            out.push(o_1.value);\n        }\n        return some(out);\n    };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArray = function (f) {\n    return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); });\n};\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/ traverseArray(identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `Refinement` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function getRefinement(getOption) {\n    return function (a) { return isSome(getOption(a)); };\n}\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var mapNullable = chainNullableK;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `O.Functor` instead of `O.option`\n * (where `O` is from `import O from 'fp-ts/Option'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var option = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    zero: zero,\n    alt: _alt,\n    extend: _extend,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = /*#__PURE__*/ getApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = /*#__PURE__*/ getApplicativeMonoid(Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstMonoid = function () { return getMonoid(first()); };\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastMonoid = function () { return getMonoid(last()); };\n", "import { isNonEmpty } from './ReadonlyNonEmptyArray';\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Eq.equals('a', 'a'), true)\n * assert.deepStrictEqual(S.Eq.equals('a', 'b'), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * `string` semigroup under concatenation.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Semigroup.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Semigroup = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * An empty `string`.\n *\n * @since 2.10.0\n */\nexport var empty = '';\n/**\n * `string` monoid under concatenation.\n *\n * The `empty` value is `''`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Monoid.concat('a', 'b'), 'ab')\n * assert.deepStrictEqual(S.Monoid.concat('a', S.Monoid.empty), 'a')\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Monoid = {\n    concat: Semigroup.concat,\n    empty: empty\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Ord.compare('a', 'a'), 0)\n * assert.deepStrictEqual(S.Ord.compare('a', 'b'), -1)\n * assert.deepStrictEqual(S.Ord.compare('b', 'a'), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Show.show('a'), '\"a\"')\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (s) { return JSON.stringify(s); }\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.isString('a'), true)\n * assert.deepStrictEqual(S.isString(1), false)\n *\n * @category refinements\n * @since 2.11.0\n */\nexport var isString = function (u) { return typeof u === 'string'; };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('a', S.toUpperCase), 'A')\n *\n * @since 2.11.0\n */\nexport var toUpperCase = function (s) { return s.toUpperCase(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('A', S.toLowerCase), 'a')\n *\n * @since 2.11.0\n */\nexport var toLowerCase = function (s) { return s.toLowerCase(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.replace('b', 'd')), 'adc')\n *\n * @since 2.11.0\n */\nexport var replace = function (searchValue, replaceValue) {\n    return function (s) {\n        return s.replace(searchValue, replaceValue);\n    };\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trim), 'a')\n *\n * @since 2.11.0\n */\nexport var trim = function (s) { return s.trim(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimLeft), 'a ')\n *\n * @since 2.11.0\n */\nexport var trimLeft = function (s) { return s.trimLeft(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimRight), ' a')\n *\n * @since 2.11.0\n */\nexport var trimRight = function (s) { return s.trimRight(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abcd', S.slice(1, 3)), 'bc')\n *\n * @since 2.11.0\n */\nexport var slice = function (start, end) {\n    return function (s) {\n        return s.slice(start, end);\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `string` is empty.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('', S.isEmpty), true)\n * assert.deepStrictEqual(pipe('a', S.isEmpty), false)\n *\n * @since 2.10.0\n */\nexport var isEmpty = function (s) { return s.length === 0; };\n/**\n * Calculate the number of characters in a `string`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.size), 3)\n *\n * @since 2.10.0\n */\nexport var size = function (s) { return s.length; };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.split('')), ['a', 'b', 'c'])\n * assert.deepStrictEqual(pipe('', S.split('')), [''])\n *\n * @since 2.11.0\n */\nexport var split = function (separator) {\n    return function (s) {\n        var out = s.split(separator);\n        return isNonEmpty(out) ? out : [s];\n    };\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.includes('b')), true)\n * assert.deepStrictEqual(pipe('abc', S.includes('d')), false)\n *\n * @since 2.11.0\n */\nexport var includes = function (searchString, position) {\n    return function (s) {\n        return s.includes(searchString, position);\n    };\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.startsWith('a')), true)\n * assert.deepStrictEqual(pipe('bc', S.startsWith('a')), false)\n *\n * @since 2.11.0\n */\nexport var startsWith = function (searchString, position) {\n    return function (s) {\n        return s.startsWith(searchString, position);\n    };\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.endsWith('c')), true)\n * assert.deepStrictEqual(pipe('ab', S.endsWith('c')), false)\n *\n * @since 2.11.0\n */\nexport var endsWith = function (searchString, position) {\n    return function (s) {\n        return s.endsWith(searchString, position);\n    };\n};\n", "import { fromEquals } from './Eq';\nimport { flow, identity, pipe, SK } from './function';\nimport { flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { separated } from './Separated';\nimport * as S from './string';\nimport { wiltDefault, witherDefault } from './Witherable';\n/**\n * Builds a `ReadonlyRecord` by copying a `Record`.\n *\n * @example\n * import { ReadonlyRecord, fromRecord } from \"fp-ts/ReadonlyRecord\"\n *\n * const x: Record<string, number> = { a: 1, b: 2 };\n * const y: ReadonlyRecord<string, number> = fromRecord(x);\n * assert.deepStrictEqual(x,y);\n * // `y.a = 5` gives compiler error\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var fromRecord = function (r) { return Object.assign({}, r); };\n/**\n * Builds a mutable `Record` from a `ReadonlyRecord`.\n *\n * @example\n * import { ReadonlyRecord, toRecord } from \"fp-ts/ReadonlyRecord\"\n *\n * const x: ReadonlyRecord<string, number> = { a: 1, b: 2 };\n * const y: Record<string, number> = toRecord(x);\n * assert.deepStrictEqual(x,y);\n * y.a = 5; // it's ok, y is mutable\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var toRecord = function (r) { return Object.assign({}, r); };\n/**\n * Calculate the number of key/value pairs in a `ReadonlyRecord`,\n *\n * @example\n * import { size } from \"fp-ts/ReadonlyRecord\";\n *\n * assert.deepStrictEqual(size({ a: true, b: 2, c: \"three\" }), 3);\n *\n * @since 2.5.0\n */\nexport var size = function (r) { return Object.keys(r).length; };\n/**\n * Test whether a `ReadonlyRecord` is empty.\n *\n * @example\n * import { isEmpty } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(isEmpty({}), true);\n * assert.deepStrictEqual(isEmpty({ a: 3 }), false);\n * @since 2.5.0\n */\nexport var isEmpty = function (r) {\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            return false;\n        }\n    }\n    return true;\n};\nvar keys_ = function (O) {\n    return function (r) {\n        return Object.keys(r).sort(O.compare);\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var keys = /*#__PURE__*/ keys_(S.Ord);\nexport function collect(O) {\n    if (typeof O === 'function') {\n        return collect(S.Ord)(O);\n    }\n    var keysO = keys_(O);\n    return function (f) {\n        return function (r) {\n            var out = [];\n            for (var _i = 0, _a = keysO(r); _i < _a.length; _i++) {\n                var key = _a[_i];\n                out.push(f(key, r[key]));\n            }\n            return out;\n        };\n    };\n}\n/**\n * Get a sorted `ReadonlyArray` of the key/value pairs contained in a `ReadonlyRecord`.\n *\n * @example\n * import { toReadonlyArray } from 'fp-ts/ReadonlyRecord'\n *\n * const x = { c: 3, a: \"foo\", b: false };\n * assert.deepStrictEqual(toReadonlyArray(x), [\n *   [\"a\", \"foo\"],\n *   [\"b\", false],\n *   [\"c\", 3],\n * ]);\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var toReadonlyArray = \n/*#__PURE__*/ collect(S.Ord)(function (k, a) { return [k, a]; });\nexport function toUnfoldable(U) {\n    return function (r) {\n        var sas = toReadonlyArray(r);\n        var len = sas.length;\n        return U.unfold(0, function (b) { return (b < len ? _.some([sas[b], b + 1]) : _.none); });\n    };\n}\n/**\n * Insert or replace a key/value pair in a `ReadonlyRecord`.\n *\n * @example\n * import { upsertAt } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(upsertAt(\"a\", 5)({ a: 1, b: 2 }), { a: 5, b: 2 });\n * assert.deepStrictEqual(upsertAt(\"c\", 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 });\n *\n * @since 2.10.0\n */\nexport var upsertAt = function (k, a) {\n    return function (r) {\n        if (_.has.call(r, k) && r[k] === a) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        out[k] = a;\n        return out;\n    };\n};\n/**\n * Test whether or not a key exists in a `ReadonlyRecord`.\n *\n * Note. This function is not pipeable because is a `Refinement`.\n *\n * @example\n * import { has } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(has(\"a\", { a: 1, b: 2 }), true);\n * assert.deepStrictEqual(has(\"c\", { a: 1, b: 2 }), false);\n *\n * @since 2.10.0\n */\nexport var has = function (k, r) { return _.has.call(r, k); };\nexport function deleteAt(k) {\n    return function (r) {\n        if (!_.has.call(r, k)) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        delete out[k];\n        return out;\n    };\n}\n/**\n * Replace a key/value pair in a `ReadonlyRecord`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyRecord'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(updateAt(\"a\", 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(updateAt(\"c\", 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.5.0\n */\nexport var updateAt = function (k, a) {\n    return function (r) {\n        if (!has(k, r)) {\n            return _.none;\n        }\n        if (r[k] === a) {\n            return _.some(r);\n        }\n        var out = Object.assign({}, r);\n        out[k] = a;\n        return _.some(out);\n    };\n};\n/**\n * Applies a mapping function to one specific key/value pair in a `ReadonlyRecord`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyRecord'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(modifyAt(\"a\", (x: number) => x * 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(modifyAt(\"c\", (x: number) => x * 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.5.0\n */\nexport var modifyAt = function (k, f) {\n    return function (r) {\n        if (!has(k, r)) {\n            return _.none;\n        }\n        var next = f(r[k]);\n        if (next === r[k]) {\n            return _.some(r);\n        }\n        var out = Object.assign({}, r);\n        out[k] = next;\n        return _.some(out);\n    };\n};\nexport function pop(k) {\n    var deleteAtk = deleteAt(k);\n    return function (r) {\n        var oa = lookup(k, r);\n        return _.isNone(oa) ? _.none : _.some([oa.value, deleteAtk(r)]);\n    };\n}\nexport function isSubrecord(E) {\n    return function (me, that) {\n        if (that === undefined) {\n            var isSubrecordE_1 = isSubrecord(E);\n            return function (that) { return isSubrecordE_1(that, me); };\n        }\n        for (var k in me) {\n            if (!_.has.call(that, k) || !E.equals(me[k], that[k])) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\nexport function lookup(k, r) {\n    if (r === undefined) {\n        return function (r) { return lookup(k, r); };\n    }\n    return _.has.call(r, k) ? _.some(r[k]) : _.none;\n}\n/**\n * @since 2.5.0\n */\nexport var empty = {};\nexport function mapWithIndex(f) {\n    return function (r) {\n        var out = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                out[k] = f(k, r[k]);\n            }\n        }\n        return out;\n    };\n}\nexport function map(f) {\n    return mapWithIndex(function (_, a) { return f(a); });\n}\nexport function reduceWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 2) {\n        return reduceWithIndex(S.Ord).apply(void 0, args);\n    }\n    var keysO = keys_(args[0]);\n    return function (b, f) { return function (fa) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = 0; i < len; i++) {\n            var k = ks[i];\n            out = f(k, out, fa[k]);\n        }\n        return out;\n    }; };\n}\nexport function foldMapWithIndex(O) {\n    if ('compare' in O) {\n        var keysO_1 = keys_(O);\n        return function (M) {\n            return function (f) {\n                return function (fa) {\n                    var out = M.empty;\n                    var ks = keysO_1(fa);\n                    var len = ks.length;\n                    for (var i = 0; i < len; i++) {\n                        var k = ks[i];\n                        out = M.concat(out, f(k, fa[k]));\n                    }\n                    return out;\n                };\n            };\n        };\n    }\n    return foldMapWithIndex(S.Ord)(O);\n}\nexport function reduceRightWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 2) {\n        return reduceRightWithIndex(S.Ord).apply(void 0, args);\n    }\n    var keysO = keys_(args[0]);\n    return function (b, f) { return function (fa) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var k = ks[i];\n            out = f(k, fa[k], out);\n        }\n        return out;\n    }; };\n}\n/**\n * Create a `ReadonlyRecord` with one key/value pair.\n *\n * @example\n * import { singleton } from \"fp-ts/ReadonlyRecord\";\n *\n * assert.deepStrictEqual(singleton(\"a\", 1), { a: 1 });\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var singleton = function (k, a) {\n    var _a;\n    return (_a = {}, _a[k] = a, _a);\n};\nexport function traverseWithIndex(F) {\n    var traverseWithIndexOF = _traverseWithIndex(S.Ord)(F);\n    return function (f) { return function (ta) { return traverseWithIndexOF(ta, f); }; };\n}\nexport function traverse(F) {\n    var traverseOF = _traverse(S.Ord)(F);\n    return function (f) { return function (ta) { return traverseOF(ta, f); }; };\n}\nexport function sequence(F) {\n    return _sequence(S.Ord)(F);\n}\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), compact); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), separate); }; };\n};\nexport function partitionMapWithIndex(f) {\n    return function (r) {\n        var left = {};\n        var right = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var e = f(k, r[k]);\n                switch (e._tag) {\n                    case 'Left':\n                        left[k] = e.left;\n                        break;\n                    case 'Right':\n                        right[k] = e.right;\n                        break;\n                }\n            }\n        }\n        return separated(left, right);\n    };\n}\nexport function partitionWithIndex(predicateWithIndex) {\n    return function (r) {\n        var left = {};\n        var right = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var a = r[k];\n                if (predicateWithIndex(k, a)) {\n                    right[k] = a;\n                }\n                else {\n                    left[k] = a;\n                }\n            }\n        }\n        return separated(left, right);\n    };\n}\nexport function filterMapWithIndex(f) {\n    return function (r) {\n        var out = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var ob = f(k, r[k]);\n                if (_.isSome(ob)) {\n                    out[k] = ob.value;\n                }\n            }\n        }\n        return out;\n    };\n}\nexport function filterWithIndex(predicateWithIndex) {\n    return function (fa) {\n        var out = {};\n        var changed = false;\n        for (var key in fa) {\n            if (_.has.call(fa, key)) {\n                var a = fa[key];\n                if (predicateWithIndex(key, a)) {\n                    out[key] = a;\n                }\n                else {\n                    changed = true;\n                }\n            }\n        }\n        return changed ? out : fa;\n    };\n}\nexport function fromFoldable(M, F) {\n    var fromFoldableMapM = fromFoldableMap(M, F);\n    return function (fka) { return fromFoldableMapM(fka, identity); };\n}\nexport function fromFoldableMap(M, F) {\n    return function (ta, f) {\n        return F.reduce(ta, {}, function (r, a) {\n            var _a = f(a), k = _a[0], b = _a[1];\n            r[k] = _.has.call(r, k) ? M.concat(r[k], b) : b;\n            return r;\n        });\n    };\n}\n/**\n * Alias of [`toReadonlyArray`](#toreadonlyarray).\n *\n * @example\n * import { toEntries } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(toEntries({ b: 2, a: 1 }), [['a', 1], ['b', 2]])\n *\n * @category conversions\n * @since 2.12.0\n */\nexport var toEntries = toReadonlyArray;\n/**\n * Converts a `ReadonlyArray` of `[key, value]` tuples into a `ReadonlyRecord`.\n *\n * @example\n * import { fromEntries } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(fromEntries([['a', 1], ['b', 2], ['a', 3]]), { b: 2, a: 3 })\n *\n * @since 2.12.0\n * @category conversions\n */\nexport var fromEntries = function (fa) {\n    var out = {};\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var a = fa_1[_i];\n        out[a[0]] = a[1];\n    }\n    return out;\n};\nexport function every(predicate) {\n    return function (r) {\n        for (var k in r) {\n            if (!predicate(r[k])) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\n/**\n * Test if at least one value in a `ReadonlyRecord` satisfies the predicate.\n *\n * @example\n * import { some } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: 1, b: -2 }), true);\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: -1, b: -2 }), false);\n *\n * @since 2.5.0\n */\nexport function some(predicate) {\n    return function (r) {\n        for (var k in r) {\n            if (predicate(r[k])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexport function elem(E) {\n    return function (a, fa) {\n        if (fa === undefined) {\n            var elemE_1 = elem(E);\n            return function (fa) { return elemE_1(a, fa); };\n        }\n        for (var k in fa) {\n            if (E.equals(fa[k], a)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Union of two `ReadonlyRecord`s.\n * Takes two `ReadonlyRecord`s and produces a `ReadonlyRecord` combining all the\n * entries of the two inputs.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements with the same key.\n *\n * @example\n * import { union } from \"fp-ts/ReadonlyRecord\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(union(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4, b: 2, c: 3 });\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(union(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1, b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nexport var union = function (M) {\n    return function (second) {\n        return function (first) {\n            if (isEmpty(first)) {\n                return second;\n            }\n            if (isEmpty(second)) {\n                return first;\n            }\n            var out = {};\n            for (var k in first) {\n                if (has(k, second)) {\n                    out[k] = M.concat(first[k], second[k]);\n                }\n                else {\n                    out[k] = first[k];\n                }\n            }\n            for (var k in second) {\n                if (!has(k, out)) {\n                    out[k] = second[k];\n                }\n            }\n            return out;\n        };\n    };\n};\n/**\n * Intersection of two `ReadonlyRecord`s.\n * Takes two `ReadonlyRecord`s and produces a `ReadonlyRecord` combining only the\n * entries of the two inputswith the same key.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements.\n *\n * @example\n * import { intersection } from \"fp-ts/ReadonlyRecord\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(intersection(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4});\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(intersection(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1});\n *\n * @since 2.11.0\n */\nexport var intersection = function (M) {\n    return function (second) {\n        return function (first) {\n            if (isEmpty(first) || isEmpty(second)) {\n                return empty;\n            }\n            var out = {};\n            for (var k in first) {\n                if (has(k, second)) {\n                    out[k] = M.concat(first[k], second[k]);\n                }\n            }\n            return out;\n        };\n    };\n};\n/**\n * Difference between two `ReadonlyRecord`s.\n * Takes two `ReadonlyRecord`s and produces a `ReadonlyRecord` composed by the\n * entries of the two inputs, removing the entries with the same\n * key in both inputs.\n *\n * @example\n * import { difference } from \"fp-ts/ReadonlyRecord\";\n *\n * assert.deepStrictEqual(difference({ a: 1 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3, c: 3 })({ a: 1, b: 2 }), { b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nexport var difference = function (second) {\n    return function (first) {\n        if (isEmpty(first)) {\n            return second;\n        }\n        if (isEmpty(second)) {\n            return first;\n        }\n        var out = {};\n        for (var k in first) {\n            if (!has(k, second)) {\n                out[k] = first[k];\n            }\n        }\n        for (var k in second) {\n            if (!has(k, first)) {\n                out[k] = second[k];\n            }\n        }\n        return out;\n    };\n};\n/** @internal */\nexport var _map = function (fa, f) { return pipe(fa, map(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _reduce = function (O) {\n    var reduceO = reduce(O);\n    return function (fa, b, f) { return pipe(fa, reduceO(b, f)); };\n};\n/** @internal */\nexport var _foldMap = function (O) { return function (M) {\n    var foldMapM = foldMap(O)(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n}; };\n/** @internal */\n/* istanbul ignore next */\nexport var _reduceRight = function (O) {\n    var reduceRightO = reduceRight(O);\n    return function (fa, b, f) { return pipe(fa, reduceRightO(b, f)); };\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _filter = function (fa, predicate) {\n    return pipe(fa, filter(predicate));\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _partition = function (fa, predicate) { return pipe(fa, partition(predicate)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _reduceWithIndex = function (O) {\n    var reduceWithIndexO = reduceWithIndex(O);\n    return function (fa, b, f) { return pipe(fa, reduceWithIndexO(b, f)); };\n};\n/** @internal */\nexport var _foldMapWithIndex = function (O) {\n    var foldMapWithIndexO = foldMapWithIndex(O);\n    return function (M) {\n        var foldMapWithIndexM = foldMapWithIndexO(M);\n        return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n    };\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _reduceRightWithIndex = function (O) {\n    var reduceRightWithIndexO = reduceRightWithIndex(O);\n    return function (fa, b, f) { return pipe(fa, reduceRightWithIndexO(b, f)); };\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _partitionWithIndex = function (fa, predicateWithIndex) {\n    return pipe(fa, partitionWithIndex(predicateWithIndex));\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\n/** @internal */\nexport var _traverse = function (O) {\n    var traverseWithIndexO = _traverseWithIndex(O);\n    return function (F) {\n        var traverseWithIndexOF = traverseWithIndexO(F);\n        return function (ta, f) { return traverseWithIndexOF(ta, flow(SK, f)); };\n    };\n};\n/** @internal */\nexport var _sequence = function (O) {\n    var traverseO = _traverse(O);\n    return function (F) {\n        var traverseOF = traverseO(F);\n        return function (ta) { return traverseOF(ta, identity); };\n    };\n};\nvar _traverseWithIndex = function (O) {\n    return function (F) {\n        var keysO = keys_(O);\n        return function (ta, f) {\n            var ks = keysO(ta);\n            if (ks.length === 0) {\n                return F.of(empty);\n            }\n            var fr = F.of({});\n            var _loop_1 = function (key) {\n                fr = F.ap(F.map(fr, function (r) { return function (b) {\n                    var _a;\n                    return Object.assign({}, r, (_a = {}, _a[key] = b, _a));\n                }; }), f(key, ta[key]));\n            };\n            for (var _i = 0, ks_1 = ks; _i < ks_1.length; _i++) {\n                var key = ks_1[_i];\n                _loop_1(key);\n            }\n            return fr;\n        };\n    };\n};\n/**\n * Given a `Predicate`, it produces a new `ReadonlyRecord` keeping only the entries with a\n * value that satisfies the provided predicate.\n *\n * @example\n * import { filter } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(filter((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo\",\n *   b: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var filter = function (predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * Maps a `ReadonlyRecord` with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from \"fp-ts/ReadonlyRecord\"\n * import { option } from \"fp-ts\"\n *\n * const f = (s: string) => s.length < 4 ? option.some(`${s} is short`): option.none\n * assert.deepStrictEqual(filterMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo is short\",\n *   b: \"bar is short\",\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMap = function (f) { return filterMapWithIndex(function (_, a) { return f(a); }); };\n/**\n * Partition a `ReadonlyRecord` into two parts according to a `Predicate`.\n *\n * @example\n * import { partition } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(partition((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left:{\n *     c: \"verylong\"\n *   },\n *   right: {\n *     a: \"foo\",\n *     b: \"bar\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * Maps a `ReadonlyRecord` with a function returning an `Either` and\n * partitions the resulting `ReadonlyRecord` into `Left`s and `Right`s.\n *\n * @example\n * import { partitionMap } from \"fp-ts/ReadonlyRecord\"\n * import { either } from \"fp-ts\"\n *\n * const f = (s: string) => (s.length < 4 ? either.right(`${s} is short`) : either.left(`${s} is not short`));\n * assert.deepStrictEqual(partitionMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left: {\n *     c: \"verylong is not short\",\n *   },\n *   right: {\n *     a: \"foo is short\",\n *     b: \"bar is short\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexport function reduce() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 1) {\n        var reduceWithIndexO_1 = reduceWithIndex(args[0]);\n        return function (b, f) { return reduceWithIndexO_1(b, function (_, b, a) { return f(b, a); }); };\n    }\n    return reduce(S.Ord).apply(void 0, args);\n}\nexport function foldMap(O) {\n    if ('compare' in O) {\n        var foldMapWithIndexO_1 = foldMapWithIndex(O);\n        return function (M) {\n            var foldMapWithIndexM = foldMapWithIndexO_1(M);\n            return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n        };\n    }\n    return foldMap(S.Ord)(O);\n}\nexport function reduceRight() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 1) {\n        var reduceRightWithIndexO_1 = reduceRightWithIndex(args[0]);\n        return function (b, f) { return reduceRightWithIndexO_1(b, function (_, b, a) { return f(b, a); }); };\n    }\n    return reduceRight(S.Ord).apply(void 0, args);\n}\n/**\n * Compact a `ReadonlyRecord` of `Option`s discarding the `None` values and\n * keeping the `Some` values.\n *\n * @example\n * import { compact } from 'fp-ts/ReadonlyRecord'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(compact({ a: option.some(\"foo\"), b: option.none, c: option.some(\"bar\") }), {\n *   a: \"foo\",\n *   c: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var compact = function (r) {\n    var out = {};\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            var oa = r[k];\n            if (_.isSome(oa)) {\n                out[k] = oa.value;\n            }\n        }\n    }\n    return out;\n};\n/**\n * Separate a `ReadonlyRecord` of `Either`s into `Left`s and `Right`s.\n *\n * @example\n * import { separate } from 'fp-ts/ReadonlyRecord'\n * import { either } from 'fp-ts'\n *\n * assert.deepStrictEqual(\n *   separate({ a: either.right(\"foo\"), b: either.left(\"bar\"), c: either.right(\"baz\") }),\n *   {\n *     right: {\n *       a: \"foo\",\n *       c: \"baz\",\n *     },\n *     left: {\n *       b: \"bar\",\n *     },\n *   }\n * );\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var separate = function (r) {\n    var left = {};\n    var right = {};\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            var e = r[k];\n            if (_.isLeft(e)) {\n                left[k] = e.left;\n            }\n            else {\n                right[k] = e.right;\n            }\n        }\n    }\n    return separated(left, right);\n};\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyRecord';\nexport function getShow(O) {\n    if ('compare' in O) {\n        return function (S) { return ({\n            show: function (r) {\n                var elements = collect(O)(function (k, a) { return \"\".concat(JSON.stringify(k), \": \").concat(S.show(a)); })(r).join(', ');\n                return elements === '' ? '{}' : \"{ \".concat(elements, \" }\");\n            }\n        }); };\n    }\n    return getShow(S.Ord)(O);\n}\nexport function getEq(E) {\n    var isSubrecordE = isSubrecord(E);\n    return fromEquals(function (x, y) { return isSubrecordE(x)(y) && isSubrecordE(y)(x); });\n}\nexport function getMonoid(S) {\n    return {\n        concat: function (first, second) {\n            if (isEmpty(first)) {\n                return second;\n            }\n            if (isEmpty(second)) {\n                return first;\n            }\n            var r = Object.assign({}, first);\n            for (var k in second) {\n                if (_.has.call(second, k)) {\n                    r[k] = _.has.call(first, k) ? S.concat(first[k], second[k]) : second[k];\n                }\n            }\n            return r;\n        },\n        empty: empty\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Takes a value and a `ReadonlyRecord` of functions and returns a\n * `ReadonlyRecord` by applying each function to the input value.\n *\n * @example\n * import { flap } from \"fp-ts/ReadonlyRecord\"\n *\n * const fab = { x: (n: number) => `${n} times 2`, y: (n: number) => `${n * 2}` };\n * assert.deepStrictEqual(flap(3)(fab), {\n *   x: \"3 times 2\",\n *   y: \"6\",\n * });\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * Produces a `Foldable` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nexport var getFoldable = function (O) { return ({\n    URI: URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O)\n}); };\n/**\n * Produces a `FoldableWithIndex1` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nexport var getFoldableWithIndex = function (O) { return ({\n    URI: URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O)\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex\n};\n/**\n * Produces a `Traversable` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var getTraversable = function (O) { return ({\n    URI: URI,\n    map: _map,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O)\n}); };\n/**\n * Produces a `TraversableWithIndex` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var getTraversableWithIndex = function (O) { return ({\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O),\n    traverseWithIndex: _traverseWithIndex(O)\n}); };\n/**\n * @category filtering\n * @since 2.11.0\n */\nexport var getWitherable = function (O) {\n    var T = getTraversable(O);\n    return {\n        URI: URI,\n        map: _map,\n        reduce: _reduce(O),\n        foldMap: _foldMap(O),\n        reduceRight: _reduceRight(O),\n        traverse: T.traverse,\n        sequence: T.sequence,\n        compact: compact,\n        separate: separate,\n        filter: _filter,\n        filterMap: _filterMap,\n        partition: _partition,\n        partitionMap: _partitionMap,\n        wither: witherDefault(T, Compactable),\n        wilt: wiltDefault(T, Compactable)\n    };\n};\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `ReadonlyRecord` of the base type.\n * The resulting `Semigroup` concatenates two `ReadonlyRecord`s by\n * `union`.\n *\n * @example\n * import { getUnionSemigroup, ReadonlyRecord } from \"fp-ts/ReadonlyRecord\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sReadonlyRecord: Semigroup<ReadonlyRecord<string, number>> = getUnionSemigroup(sNumber);\n * assert.deepStrictEqual(sReadonlyRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { a: 1, b: -1, c: 4 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (S) {\n    var unionS = union(S);\n    return {\n        concat: function (first, second) { return unionS(second)(first); }\n    };\n};\n/**\n * Same as `getMonoid`.\n * Returns a `Monoid` instance for `ReadonlyRecord`s given a `Semigroup`\n * instance for the base type.\n * The `Monoid` makes the union of two `ReadonlyRecord`s combining the\n * entries that have the same key with the provided `Semigroup`.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getUnionMonoid } from 'fp-ts/ReadonlyRecord'\n *\n * const M = getUnionMonoid(SemigroupSum);\n * assert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), { foo: 579 , bar: 234, baz: 567 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (S) { return ({\n    concat: getUnionSemigroup(S).concat,\n    empty: empty\n}); };\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `ReadonlyRecord` of the base type.\n * The resulting `Semigroup` concatenates two `ReadonlyRecord`s by\n * `intersection`.\n *\n * @example\n * import { getIntersectionSemigroup, ReadonlyRecord } from \"fp-ts/ReadonlyRecord\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sReadonlyRecord: Semigroup<ReadonlyRecord<string, number>> = getIntersectionSemigroup(sNumber);\n * assert.deepStrictEqual(sReadonlyRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { b: -1 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (S) {\n    var intersectionS = intersection(S);\n    return {\n        concat: function (first, second) { return intersectionS(second)(first); }\n    };\n};\n/**\n * Produces a `Magma` with a `concat` function that combines\n * two `ReadonlyRecord`s by making the `difference`.\n *\n * @example\n * import { getDifferenceMagma, difference, ReadonlyRecord } from \"fp-ts/ReadonlyRecord\"\n * import { Magma } from \"fp-ts/Magma\"\n *\n * const r1 = { a: 3, c: 3 };\n * const r2 = { a: 1, b: 2 };\n * const m: Magma<ReadonlyRecord<string, number>> = getDifferenceMagma<number>();\n * assert.deepStrictEqual(m.concat(r1, r2), difference(r2)(r1));\n * assert.deepStrictEqual(m.concat(r1, r2), { c: 3, b: 2 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function () { return ({\n    concat: function (first, second) { return difference(second)(first); }\n}); };\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `getFoldable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord)\n};\n/**\n * Use `getFoldableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord)\n};\n/**\n * Use `getTraversable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence\n};\n/**\n * Use `getTraversableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord)\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * Use `getWitherable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var insertAt = upsertAt;\nexport function hasOwnProperty(k, r) {\n    return _.has.call(r === undefined ? this : r, k);\n}\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RR.Functor` instead of `RR.readonlyRecord`\n * (where `RR` is from `import RR from 'fp-ts/ReadonlyRecord'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyRecord = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord),\n    wither: _wither,\n    wilt: _wilt\n};\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as A from './Array';\nimport { pipe } from './function';\nimport { flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as RR from './ReadonlyRecord';\nimport * as Se from './Semigroup';\nimport * as S from './string';\nimport { wiltDefault, witherDefault } from './Witherable';\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * Calculate the number of key/value pairs in a `Record`.\n *\n * @example\n * import { size } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(size({ a: true, b: 2, c: \"three\" }), 3);\n *\n * @since 2.0.0\n */\nexport var size = RR.size;\n/**\n * Test whether a `Record` is empty.\n *\n * @example\n * import { isEmpty } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(isEmpty({}), true);\n * assert.deepStrictEqual(isEmpty({ a: 3 }), false);\n *\n * @since 2.0.0\n */\nexport var isEmpty = RR.isEmpty;\nvar keys_ = function (O) {\n    return function (r) {\n        return Object.keys(r).sort(O.compare);\n    };\n};\n/**\n * The keys of a `Record`, sorted alphabetically.\n *\n * @example\n * import { keys } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(keys({ c: 1, a: 2, b: 3 }), [\"a\", \"b\", \"c\"]);\n *\n * @since 2.0.0\n */\nexport var keys = /*#__PURE__*/ keys_(S.Ord);\nexport function collect(O) {\n    if (typeof O === 'function') {\n        return collect(S.Ord)(O);\n    }\n    var keysO = keys_(O);\n    return function (f) {\n        return function (r) {\n            var out = [];\n            for (var _i = 0, _a = keysO(r); _i < _a.length; _i++) {\n                var key = _a[_i];\n                out.push(f(key, r[key]));\n            }\n            return out;\n        };\n    };\n}\n/**\n * Get a sorted `Array` of the key/value pairs contained in a `Record`.\n * Sorted alphabetically by key.\n *\n * @example\n * import { toArray } from 'fp-ts/Record'\n *\n * const x = { c: 3, a: \"foo\", b: false };\n * assert.deepStrictEqual(toArray(x), [\n *   [\"a\", \"foo\"],\n *   [\"b\", false],\n *   [\"c\", 3],\n * ]);\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var toArray = /*#__PURE__*/ collect(S.Ord)(function (k, a) { return [\n    k,\n    a\n]; });\nexport function toUnfoldable(U) {\n    return function (r) {\n        var sas = toArray(r);\n        var len = sas.length;\n        return U.unfold(0, function (b) { return (b < len ? _.some([sas[b], b + 1]) : _.none); });\n    };\n}\n/**\n * Insert or replace a key/value pair in a `Record`.\n *\n * @example\n * import { upsertAt } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(upsertAt(\"a\", 5)({ a: 1, b: 2 }), { a: 5, b: 2 });\n * assert.deepStrictEqual(upsertAt(\"c\", 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 });\n *\n * @since 2.10.0\n */\nexport var upsertAt = RR.upsertAt;\n/**\n * Test whether or not a key exists in a `Record`.\n *\n * Note. This function is not pipeable because is a `Refinement`.\n *\n * @example\n * import { has } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(has(\"a\", { a: 1, b: 2 }), true);\n * assert.deepStrictEqual(has(\"c\", { a: 1, b: 2 }), false);\n *\n * @since 2.10.0\n */\nexport var has = RR.has;\nexport function deleteAt(k) {\n    return function (r) {\n        if (!_.has.call(r, k)) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        delete out[k];\n        return out;\n    };\n}\n/**\n * Replace a key/value pair in a `Record`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { updateAt } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(updateAt(\"a\", 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(updateAt(\"c\", 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.0.0\n */\nexport var updateAt = function (k, a) {\n    return modifyAt(k, function () { return a; });\n};\n/**\n * Applies a mapping function to one spcific key/value pair in a `Record`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { modifyAt } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(modifyAt(\"a\", (x: number) => x * 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(modifyAt(\"c\", (x: number) => x * 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.0.0\n */\nexport var modifyAt = function (k, f) {\n    return function (r) {\n        if (!has(k, r)) {\n            return _.none;\n        }\n        var out = Object.assign({}, r);\n        out[k] = f(r[k]);\n        return _.some(out);\n    };\n};\nexport function pop(k) {\n    var deleteAtk = deleteAt(k);\n    return function (r) {\n        var oa = lookup(k, r);\n        return _.isNone(oa) ? _.none : _.some([oa.value, deleteAtk(r)]);\n    };\n}\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether one `Record` contains all of the keys and values\n * contained in another `Record`.\n *\n * @example\n * import { isSubrecord } from 'fp-ts/Record'\n * import { string } from 'fp-ts'\n *\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\", c: \"baz\" })({ a: \"foo\", b: \"bar\", c: \"baz\" }),\n *   true\n * );\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\", c: \"baz\" })({ a: \"foo\", c: \"baz\" }),\n *   true\n * );\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\", c: \"baz\" })({ a: \"foo\", b: \"not-bar\", c: \"baz\" }),\n *   false\n * );\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\" })({ a: \"foo\", b: \"bar\", c: \"baz\" }),\n *   false\n * );\n *\n * @since 2.0.0\n */\nexport var isSubrecord = RR.isSubrecord;\n// TODO: remove non-curried overloading in v3\n/**\n * Lookup the value for a key in a `Record`.\n *\n * @returns If the specified key exists it returns an `Option` containing the value,\n * otherwise it returns `None`\n *\n * @example\n * import { lookup } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(lookup(\"b\")({ a: \"foo\", b: \"bar\" }), option.some(\"bar\"));\n * assert.deepStrictEqual(lookup(\"c\")({ a: \"foo\", b: \"bar\" }), option.none);\n *\n * @since 2.0.0\n */\nexport var lookup = RR.lookup;\n/**\n * Map a `Record` passing the key/value pairs to the iterating function.\n *\n * @example\n * import { mapWithIndex } from \"fp-ts/Record\";\n *\n * const f = (k: string, n: number) => `${k.toUpperCase()}-${n}`;\n * assert.deepStrictEqual(mapWithIndex(f)({ a: 3, b: 5 }), { a: \"A-3\", b: \"B-5\" });\n *\n * @since 2.0.0\n */\nexport var mapWithIndex = RR.mapWithIndex;\n/**\n * Map a `Record` passing the values to the iterating function.\n *\n * @example\n * import { map } from \"fp-ts/Record\";\n *\n * const f = (n: number) => `-${n}-`;\n * assert.deepStrictEqual(map(f)({ a: 3, b: 5 }), { a: \"-3-\", b: \"-5-\" });\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var map = RR.map;\nexport function reduceWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduceWithIndex(args[0]) : RR.reduceWithIndex(S.Ord).apply(void 0, args);\n}\nexport function foldMapWithIndex(O) {\n    return 'compare' in O ? RR.foldMapWithIndex(O) : RR.foldMapWithIndex(S.Ord)(O);\n}\nexport function reduceRightWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduceRightWithIndex(args[0]) : RR.reduceRightWithIndex(S.Ord).apply(void 0, args);\n}\n/**\n * Create a `Record` with one key/value pair.\n *\n * @example\n * import { singleton } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(singleton(\"a\", 1), { a: 1 });\n *\n * @since 2.0.0\n */\nexport var singleton = RR.singleton;\nexport function traverseWithIndex(F) {\n    return RR.traverseWithIndex(F);\n}\nexport function traverse(F) {\n    return RR.traverse(F);\n}\nexport function sequence(F) {\n    return RR.sequence(F);\n}\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), compact); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), separate); }; };\n};\n/**\n * Maps a `Record` with a function returning an `Either` and\n * partitions the resulting `Record` into `Left`s and `Right`s.\n *\n * @example\n * import { partitionMapWithIndex } from \"fp-ts/Record\"\n * import { either } from \"fp-ts\"\n *\n * const f = (key: string, a: number) =>\n *   a >= 0 ? either.right(`${key} is >= 0 (${a})`) : either.left(`${key} is < 0 (${a})`);\n * assert.deepStrictEqual(partitionMapWithIndex(f)({ a: -1, b: 2, c: 123 }), {\n *   left: {\n *     a: \"a is < 0 (-1)\",\n *   },\n *   right: {\n *     b: \"b is >= 0 (2)\",\n *     c: \"c is >= 0 (123)\",\n *   },\n * });\n *\n * @since 2.0.0\n */\nexport var partitionMapWithIndex = RR.partitionMapWithIndex;\nexport function partitionWithIndex(predicateWithIndex) {\n    return RR.partitionWithIndex(predicateWithIndex);\n}\n/**\n * Maps a `Record` with an iterating function that takes key and value and\n * returns an `Option`, keeping only the `Some` values and discarding `None`s.\n *\n * @example\n * import { filterMapWithIndex } from \"fp-ts/Record\"\n * import { option } from \"fp-ts\"\n *\n * const f = (key: string, a: number) => (a >= 0 ? option.some(`${key}${a}`) : option.none);\n * assert.deepStrictEqual(filterMapWithIndex(f)({ a: -1, b: 2, c: 3 }), {\n *   b: \"b2\",\n *   c: \"c3\",\n * });\n *\n * @since 2.0.0\n */\nexport var filterMapWithIndex = RR.filterMapWithIndex;\nexport function filterWithIndex(predicateWithIndex) {\n    return RR.filterWithIndex(predicateWithIndex);\n}\nexport function fromFoldable(M, F) {\n    return RR.fromFoldable(M, F);\n}\n/**\n * Alias of [`toArray`](#toArray).\n *\n * @example\n * import { toEntries } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(toEntries({ b: 2, a: 1 }), [['a', 1], ['b', 2]])\n *\n * @since 2.12.0\n * @category conversions\n */\nexport var toEntries = toArray;\n/**\n * Converts an `Array` of `[key, value]` tuples into a `Record`.\n *\n * @example\n * import { fromEntries } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(fromEntries([['a', 1], ['b', 2], ['a', 3]]), { b: 2, a: 3 })\n *\n * @since 2.12.0\n * @category conversions\n */\nexport var fromEntries = function (fa) { return fromFoldable(Se.last(), A.Foldable)(fa); };\nexport function fromFoldableMap(M, F) {\n    return RR.fromFoldableMap(M, F);\n}\n/**\n * Test if every value in a `Record` satisfies the predicate.\n *\n * @example\n * import { every } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(every((n: number) => n >= 0)({ a: 1, b: 2 }), true);\n * assert.deepStrictEqual(every((n: number) => n >= 0)({ a: 1, b: -1 }), false);\n *\n * @since 2.0.0\n */\nexport var every = RR.every;\n/**\n * Test if at least one value in a `Record` satisfies the predicate.\n *\n * @example\n * import { some } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: 1, b: -2 }), true);\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: -1, b: -2 }), false);\n *\n * @since 2.0.0\n */\nexport var some = RR.some;\n// TODO: remove non-curried overloading in v3\n/**\n * Given an `Eq` checks if a `Record` contains an entry with\n * value equal to a provided value.\n *\n * @example\n * import { elem } from \"fp-ts/Record\"\n * import { number } from \"fp-ts\"\n *\n * assert.deepStrictEqual(elem(number.Eq)(123, { foo: 123, bar: 234 }), true);\n * assert.deepStrictEqual(elem(number.Eq)(-7, { foo: 123, bar: 234 }), false);\n *\n * @since 2.0.0\n */\nexport var elem = RR.elem;\n/**\n * Union of two `Record`s.\n * Takes two `Record`s and produces a `Record` combining all the\n * entries of the two inputs.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements with the same key.\n *\n * @example\n * import { union } from \"fp-ts/Record\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(union(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4, b: 2, c: 3 });\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(union(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1, b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nexport var union = function (M) {\n    var unionM = RR.union(M);\n    return function (second) { return function (first) {\n        if (isEmpty(first)) {\n            return __assign({}, second);\n        }\n        if (isEmpty(second)) {\n            return __assign({}, first);\n        }\n        return unionM(second)(first);\n    }; };\n};\n/**\n * Intersection of two `Record`s.\n * Takes two `Record`s and produces a `Record` combining only the\n * entries of the two inputswith the same key.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements.\n *\n * @example\n * import { intersection } from \"fp-ts/Record\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(intersection(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4});\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(intersection(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1});\n *\n * @since 2.11.0\n */\nexport var intersection = function (M) {\n    return function (second) {\n        return function (first) {\n            if (isEmpty(first) || isEmpty(second)) {\n                return {};\n            }\n            return RR.intersection(M)(second)(first);\n        };\n    };\n};\n/**\n * Difference between two `Record`s.\n * Takes two `Record`s and produces a `Record` composed by the\n * entries of the two inputs, removing the entries with the same\n * key in both inputs.\n *\n * @example\n * import { difference } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(difference({ a: 1 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3, c: 3 })({ a: 1, b: 2 }), { b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nexport var difference = function (second) {\n    return function (first) {\n        if (isEmpty(first)) {\n            return __assign({}, second);\n        }\n        if (isEmpty(second)) {\n            return __assign({}, first);\n        }\n        return RR.difference(second)(first);\n    };\n};\nvar _map = RR._map;\nvar _mapWithIndex = RR._mapWithIndex;\nvar _reduce = RR._reduce;\nvar _foldMap = RR._foldMap;\nvar _reduceRight = RR._reduceRight;\nvar _filter = RR._filter;\nvar _filterMap = RR._filterMap;\nvar _partition = RR._partition;\nvar _partitionMap = RR._partitionMap;\nvar _reduceWithIndex = RR._reduceWithIndex;\nvar _foldMapWithIndex = RR._foldMapWithIndex;\nvar _reduceRightWithIndex = RR._reduceRightWithIndex;\nvar _partitionMapWithIndex = RR._partitionMapWithIndex;\nvar _partitionWithIndex = RR._partitionWithIndex;\nvar _filterMapWithIndex = RR._filterMapWithIndex;\nvar _filterWithIndex = RR._filterWithIndex;\nvar _traverse = RR._traverse;\nvar _sequence = RR._sequence;\nvar _traverseWithIndex = function (O) {\n    return function (F) {\n        var keysO = keys_(O);\n        return function (ta, f) {\n            var ks = keysO(ta);\n            if (ks.length === 0) {\n                return F.of({});\n            }\n            var fr = F.of({});\n            var _loop_1 = function (key) {\n                fr = F.ap(F.map(fr, function (r) { return function (b) {\n                    r[key] = b;\n                    return r;\n                }; }), f(key, ta[key]));\n            };\n            for (var _i = 0, ks_1 = ks; _i < ks_1.length; _i++) {\n                var key = ks_1[_i];\n                _loop_1(key);\n            }\n            return fr;\n        };\n    };\n};\n/**\n * Given a `Predicate`, it produces a new `Record` keeping only the entries with a\n * value that satisfies the provided predicate.\n *\n * @example\n * import { filter } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(filter((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo\",\n *   b: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filter = RR.filter;\n/**\n * Maps a `Record` with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from \"fp-ts/Record\"\n * import { option } from \"fp-ts\"\n *\n * const f = (s: string) => s.length < 4 ? option.some(`${s} is short`): option.none\n * assert.deepStrictEqual(filterMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo is short\",\n *   b: \"bar is short\",\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterMap = RR.filterMap;\n/**\n * Partition a `Record` into two parts according to a `Predicate`.\n *\n * @example\n * import { partition } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(partition((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left:{\n *     c: \"verylong\"\n *   },\n *   right: {\n *     a: \"foo\",\n *     b: \"bar\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partition = RR.partition;\n/**\n * Maps a `Record` with a function returning an `Either` and\n * partitions the resulting `Record` into `Left`s and `Right`s.\n *\n * @example\n * import { partitionMap } from \"fp-ts/Record\"\n * import { either } from \"fp-ts\"\n *\n * const f = (s: string) => (s.length < 4 ? either.right(`${s} is short`) : either.left(`${s} is not short`));\n * assert.deepStrictEqual(partitionMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left: {\n *     c: \"verylong is not short\",\n *   },\n *   right: {\n *     a: \"foo is short\",\n *     b: \"bar is short\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionMap = RR.partitionMap;\nexport function reduce() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduce(args[0]) : RR.reduce(S.Ord).apply(void 0, args);\n}\nexport function foldMap(O) {\n    return 'compare' in O ? RR.foldMap(O) : RR.foldMap(S.Ord)(O);\n}\nexport function reduceRight() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduceRight(args[0]) : RR.reduceRight(S.Ord).apply(void 0, args);\n}\n/**\n * Compact a `Record` of `Option`s discarding the `None` values and\n * keeping the `Some` values.\n *\n * @example\n * import { compact } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(compact({ a: option.some(\"foo\"), b: option.none, c: option.some(\"bar\") }), {\n *   a: \"foo\",\n *   c: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var compact = RR.compact;\n/**\n * Separate a `Record` of `Either`s into `Left`s and `Right`s.\n *\n * @example\n * import { separate } from 'fp-ts/Record'\n * import { either } from 'fp-ts'\n *\n * assert.deepStrictEqual(\n *   separate({ a: either.right(\"foo\"), b: either.left(\"bar\"), c: either.right(\"baz\") }),\n *   {\n *     right: {\n *       a: \"foo\",\n *       c: \"baz\",\n *     },\n *     left: {\n *       b: \"bar\",\n *     },\n *   }\n * );\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var separate = RR.separate;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Record';\nexport function getShow(O) {\n    return 'compare' in O ? RR.getShow(O) : RR.getShow(S.Ord)(O);\n}\n/**\n * Given an `Eq` for the base type, it produces an `Eq`\n * for a `Record` of that base type.\n *\n * @example\n * import { getEq } from \"fp-ts/Record\";\n * import { string } from \"fp-ts\";\n * import { Eq } from \"fp-ts/Eq\";\n *\n * const eq: Eq<Record<string, string>> = getEq(string.Eq);\n * assert.deepStrictEqual(eq.equals({ a: \"foo\" }, { b: \"bar\" }), false);\n * assert.deepStrictEqual(eq.equals({ a: \"foo\" }, { a: \"foo\" }), true);\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RR.getEq;\n/**\n * Returns a `Monoid` instance for `Record`s, given a `Semigroup`\n * instance for the base type.\n * The `Monoid` makes the union of two `Record`s comining the\n * overlapping entries with the provided `Semigroup`.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getMonoid } from 'fp-ts/Record'\n *\n * const M = getMonoid(SemigroupSum);\n * assert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), { foo: 579 , bar: 234, baz: 567 });\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = RR.getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Takes a value and a `Record` of functions and returns a\n * `Record` by applying each function to the input value.\n *\n * @example\n * import { flap } from \"fp-ts/Record\"\n *\n * const fab = { x: (n: number) => `${n} times 2`, y: (n: number) => `${n * 2}` };\n * assert.deepStrictEqual(flap(3)(fab), {\n *   x: \"3 times 2\",\n *   y: \"6\",\n * });\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * Produces a `Foldable` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nexport var getFoldable = function (O) { return ({\n    URI: URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O)\n}); };\n/**\n * Produces a `FoldableWithIndex1` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nexport var getFoldableWithIndex = function (O) { return ({\n    URI: URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O)\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex\n};\n/**\n * Produces a `Traversable` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var getTraversable = function (O) { return ({\n    URI: URI,\n    map: _map,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O)\n}); };\n/**\n * Produces a `TraversableWithIndex` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var getTraversableWithIndex = function (O) { return ({\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O),\n    traverseWithIndex: _traverseWithIndex(O)\n}); };\n/**\n * @category filtering\n * @since 2.11.0\n */\nexport var getWitherable = function (O) {\n    var T = getTraversable(O);\n    return {\n        URI: URI,\n        map: _map,\n        reduce: _reduce(O),\n        foldMap: _foldMap(O),\n        reduceRight: _reduceRight(O),\n        traverse: T.traverse,\n        sequence: T.sequence,\n        compact: compact,\n        separate: separate,\n        filter: _filter,\n        filterMap: _filterMap,\n        partition: _partition,\n        partitionMap: _partitionMap,\n        wither: witherDefault(T, Compactable),\n        wilt: wiltDefault(T, Compactable)\n    };\n};\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `Record` of the base type.\n * The resulting `Semigroup` concatenates two `Record`s by\n * `union`.\n *\n * @example\n * import { getUnionSemigroup } from \"fp-ts/Record\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sRecord: Semigroup<Record<string, number>> = getUnionSemigroup(sNumber);\n * assert.deepStrictEqual(sRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { a: 1, b: -1, c: 4 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (S) {\n    var unionS = union(S);\n    return {\n        concat: function (first, second) { return unionS(second)(first); }\n    };\n};\n/**\n * Same as `getMonoid`.\n * Returns a `Monoid` instance for `Record`s given a `Semigroup`\n * instance for the base type.\n * The `Monoid` makes the union of two `Record`s combining the\n * entries that have the same key with the provided `Semigroup`.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getUnionMonoid } from 'fp-ts/Record'\n *\n * const M = getUnionMonoid(SemigroupSum);\n * assert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), { foo: 579 , bar: 234, baz: 567 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (S) { return ({\n    concat: getUnionSemigroup(S).concat,\n    empty: {}\n}); };\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `Record` of the base type.\n * The resulting `Semigroup` concatenates two `Record`s by\n * `intersection`.\n *\n * @example\n * import { getIntersectionSemigroup } from \"fp-ts/Record\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sRecord: Semigroup<Record<string, number>> = getIntersectionSemigroup(sNumber);\n * assert.deepStrictEqual(sRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { b: -1 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (S) {\n    var intersectionS = intersection(S);\n    return {\n        concat: function (first, second) { return intersectionS(second)(first); }\n    };\n};\n/**\n * Produces a `Magma` with a `concat` function that combines\n * two `Record`s by making the `difference`.\n *\n * @example\n * import { getDifferenceMagma, difference } from \"fp-ts/Record\"\n * import { Magma } from \"fp-ts/Magma\"\n *\n * const r1 = { a: 3, c: 3 };\n * const r2 = { a: 1, b: 2 };\n * const m: Magma<Record<string, number>> = getDifferenceMagma<number>();\n * assert.deepStrictEqual(m.concat(r1, r2), difference(r2)(r1));\n * assert.deepStrictEqual(m.concat(r1, r2), { c: 3, b: 2 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function () { return ({\n    concat: function (first, second) { return difference(second)(first); }\n}); };\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `getFoldable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord)\n};\n/**\n * Use `getFoldableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord)\n};\n/**\n * Use `getTraversable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence\n};\n/**\n * Use the `getTraversableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord)\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * Use `getWitherable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Use a new `{}` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var empty = {};\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var insertAt = upsertAt;\n/**\n * Use [`has`](#has) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var hasOwnProperty = RR.hasOwnProperty;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `R.Functor` instead of `R.record`\n * (where `R` is from `import R from 'fp-ts/Record'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var record = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord),\n    wither: _wither,\n    wilt: _wilt\n};\n", "import { apFirst as apFirst_, apSecond as apSecond_ } from './Apply';\nimport { chainFirst as chainFirst_ } from './Chain';\nimport { identity, pipe as pipeFromFunctionModule } from './function';\nexport function map(F) {\n    return function (f) { return function (fa) { return F.map(fa, f); }; };\n}\nexport function contramap(F) {\n    return function (f) { return function (fa) { return F.contramap(fa, f); }; };\n}\nexport function mapWithIndex(F) {\n    return function (f) { return function (fa) { return F.mapWithIndex(fa, f); }; };\n}\nexport function ap(F) {\n    return function (fa) { return function (fab) { return F.ap(fab, fa); }; };\n}\nexport function chain(F) {\n    return function (f) { return function (fa) { return F.chain(fa, f); }; };\n}\nexport function bimap(F) {\n    return function (f, g) { return function (fea) { return F.bimap(fea, f, g); }; };\n}\nexport function mapLeft(F) {\n    return function (f) { return function (fea) { return F.mapLeft(fea, f); }; };\n}\nexport function extend(F) {\n    return function (f) { return function (wa) { return F.extend(wa, f); }; };\n}\nexport function reduce(F) {\n    return function (b, f) { return function (fa) { return F.reduce(fa, b, f); }; };\n}\nexport function foldMap(F) {\n    return function (M) {\n        var foldMapM = F.foldMap(M);\n        return function (f) { return function (fa) { return foldMapM(fa, f); }; };\n    };\n}\nexport function reduceRight(F) {\n    return function (b, f) { return function (fa) { return F.reduceRight(fa, b, f); }; };\n}\nexport function reduceWithIndex(F) {\n    return function (b, f) { return function (fa) { return F.reduceWithIndex(fa, b, f); }; };\n}\nexport function foldMapWithIndex(F) {\n    return function (M) {\n        var foldMapWithIndexM = F.foldMapWithIndex(M);\n        return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };\n    };\n}\nexport function reduceRightWithIndex(F) {\n    return function (b, f) { return function (fa) { return F.reduceRightWithIndex(fa, b, f); }; };\n}\nexport function alt(F) {\n    return function (that) { return function (fa) { return F.alt(fa, that); }; };\n}\nexport function filter(F) {\n    return function (predicate) { return function (fa) { return F.filter(fa, predicate); }; };\n}\nexport function filterMap(F) {\n    return function (f) { return function (fa) { return F.filterMap(fa, f); }; };\n}\nexport function partition(F) {\n    return function (f) { return function (fa) { return F.partition(fa, f); }; };\n}\nexport function partitionMap(F) {\n    return function (f) { return function (fa) { return F.partitionMap(fa, f); }; };\n}\nexport function filterWithIndex(F) {\n    return function (predicate) { return function (fa) { return F.filterWithIndex(fa, predicate); }; };\n}\nexport function filterMapWithIndex(F) {\n    return function (f) { return function (fa) { return F.filterMapWithIndex(fa, f); }; };\n}\nexport function partitionWithIndex(F) {\n    return function (f) { return function (fa) { return F.partitionWithIndex(fa, f); }; };\n}\nexport function partitionMapWithIndex(F) {\n    return function (f) { return function (fa) { return F.partitionMapWithIndex(fa, f); }; };\n}\nexport function promap(F) {\n    return function (f, g) { return function (fbc) { return F.promap(fbc, f, g); }; };\n}\nexport function compose(F) {\n    return function (ea) { return function (ab) { return F.compose(ab, ea); }; };\n}\nvar isFunctor = function (I) { return typeof I.map === 'function'; };\nvar isContravariant = function (I) { return typeof I.contramap === 'function'; };\nvar isFunctorWithIndex = function (I) { return typeof I.mapWithIndex === 'function'; };\nvar isApply = function (I) { return typeof I.ap === 'function'; };\nvar isChain = function (I) { return typeof I.chain === 'function'; };\nvar isBifunctor = function (I) { return typeof I.bimap === 'function'; };\nvar isExtend = function (I) { return typeof I.extend === 'function'; };\nvar isFoldable = function (I) { return typeof I.reduce === 'function'; };\nvar isFoldableWithIndex = function (I) { return typeof I.reduceWithIndex === 'function'; };\nvar isAlt = function (I) { return typeof I.alt === 'function'; };\nvar isCompactable = function (I) { return typeof I.compact === 'function'; };\nvar isFilterable = function (I) { return typeof I.filter === 'function'; };\nvar isFilterableWithIndex = function (I) {\n    return typeof I.filterWithIndex === 'function';\n};\nvar isProfunctor = function (I) { return typeof I.promap === 'function'; };\nvar isSemigroupoid = function (I) { return typeof I.compose === 'function'; };\nvar isMonadThrow = function (I) { return typeof I.throwError === 'function'; };\n/** @deprecated */\nexport function pipeable(I) {\n    var r = {};\n    if (isFunctor(I)) {\n        r.map = map(I);\n    }\n    if (isContravariant(I)) {\n        r.contramap = contramap(I);\n    }\n    if (isFunctorWithIndex(I)) {\n        r.mapWithIndex = mapWithIndex(I);\n    }\n    if (isApply(I)) {\n        r.ap = ap(I);\n        r.apFirst = apFirst_(I);\n        r.apSecond = apSecond_(I);\n    }\n    if (isChain(I)) {\n        r.chain = chain(I);\n        r.chainFirst = chainFirst_(I);\n        r.flatten = r.chain(identity);\n    }\n    if (isBifunctor(I)) {\n        r.bimap = bimap(I);\n        r.mapLeft = mapLeft(I);\n    }\n    if (isExtend(I)) {\n        r.extend = extend(I);\n        r.duplicate = r.extend(identity);\n    }\n    if (isFoldable(I)) {\n        r.reduce = reduce(I);\n        r.foldMap = foldMap(I);\n        r.reduceRight = reduceRight(I);\n    }\n    if (isFoldableWithIndex(I)) {\n        r.reduceWithIndex = reduceWithIndex(I);\n        r.foldMapWithIndex = foldMapWithIndex(I);\n        r.reduceRightWithIndex = reduceRightWithIndex(I);\n    }\n    if (isAlt(I)) {\n        r.alt = alt(I);\n    }\n    if (isCompactable(I)) {\n        r.compact = I.compact;\n        r.separate = I.separate;\n    }\n    if (isFilterable(I)) {\n        r.filter = filter(I);\n        r.filterMap = filterMap(I);\n        r.partition = partition(I);\n        r.partitionMap = partitionMap(I);\n    }\n    if (isFilterableWithIndex(I)) {\n        r.filterWithIndex = filterWithIndex(I);\n        r.filterMapWithIndex = filterMapWithIndex(I);\n        r.partitionWithIndex = partitionWithIndex(I);\n        r.partitionMapWithIndex = partitionMapWithIndex(I);\n    }\n    if (isProfunctor(I)) {\n        r.promap = promap(I);\n    }\n    if (isSemigroupoid(I)) {\n        r.compose = compose(I);\n    }\n    if (isMonadThrow(I)) {\n        var fromOption = function (onNone) { return function (ma) {\n            return ma._tag === 'None' ? I.throwError(onNone()) : I.of(ma.value);\n        }; };\n        var fromEither = function (ma) {\n            return ma._tag === 'Left' ? I.throwError(ma.left) : I.of(ma.right);\n        };\n        var fromPredicate = function (predicate, onFalse) {\n            return function (a) {\n                return predicate(a) ? I.of(a) : I.throwError(onFalse(a));\n            };\n        };\n        var filterOrElse = function (predicate, onFalse) {\n            return function (ma) {\n                return I.chain(ma, function (a) { return (predicate(a) ? I.of(a) : I.throwError(onFalse(a))); });\n            };\n        };\n        r.fromOption = fromOption;\n        r.fromEither = fromEither;\n        r.fromPredicate = fromPredicate;\n        r.filterOrElse = filterOrElse;\n    }\n    return r;\n}\n/**\n * Use [`pipe`](https://gcanti.github.io/fp-ts/modules/function.ts.html#pipe) from `function` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport var pipe = pipeFromFunctionModule;\n", "/**\n * @since 1.1.0\n */\nimport {Predicate} from 'fp-ts/function'\n\n/**\n * @since 1.1.0\n */\n/* eslint-disable @typescript-eslint/array-type */\nexport const takeUntil =\n  <A = unknown>(predicate: Predicate<A>) =>\n  (as: ReadonlyArray<A>): ReadonlyArray<A> => {\n    const init = []\n\n    // eslint-disable-next-line unicorn/no-for-loop\n    for (let i = 0; i < as.length; i++) {\n      init[i] = as[i]\n      if (predicate(as[i])) {\n        return init\n      }\n    }\n\n    return init\n  }\n/* eslint-enable @typescript-eslint/array-type */\n", "/**\n * An [io-ts Reporter](https://gcanti.github.io/io-ts/modules/Reporter.ts.html#reporter-interface).\n *\n * @example\n *\n * import * as t from 'io-ts';\n * import Reporter from 'io-ts-reporters';\n *\n * const User = t.interface({ name: t.string });\n *\n * assert.deepEqual(\n *   Reporter.report(User.decode({ nam: 'Jane' })),\n *   ['Expecting string at name but instead got: undefined'],\n * )\n * assert.deepEqual( Reporter.report(User.decode({ name: 'Jane' })), [])\n *\n * @since 1.2.0\n */\nimport * as A from 'fp-ts/Array'\nimport * as E from 'fp-ts/Either'\nimport * as NEA from 'fp-ts/NonEmptyArray'\nimport * as O from 'fp-ts/Option'\nimport * as R from 'fp-ts/Record'\nimport {pipe} from 'fp-ts/pipeable'\nimport * as t from 'io-ts'\nimport {Reporter} from 'io-ts/lib/Reporter'\n\nimport {takeUntil} from './utils'\n\nconst isUnionType = ({type}: t.ContextEntry) => type instanceof t.UnionType\n\nconst jsToString = (value: t.mixed) =>\n  value === undefined ? 'undefined' : JSON.stringify(value)\n\nconst keyPath = (ctx: t.Context) =>\n  // The context entry with an empty key is the original\n  // type (\"default context\"), not a type error.\n  ctx\n    .map((c) => c.key)\n    .filter(Boolean)\n    .join('.')\n\n// The actual error is last in context\nconst getErrorFromCtx = (validation: t.ValidationError) =>\n  // https://github.com/gcanti/fp-ts/pull/544/files\n  A.last(validation.context as t.ContextEntry[])\n\nconst getValidationContext = (validation: t.ValidationError) =>\n  // https://github.com/gcanti/fp-ts/pull/544/files\n  validation.context as t.ContextEntry[]\n\n/**\n * @category internals\n * @since 1.2.1\n */\nexport const TYPE_MAX_LEN = 160 // Two lines of 80-col text\nconst truncateType = (type: string, options: ReporterOptions = {}): string => {\n  const {truncateLongTypes = true} = options\n\n  if (truncateLongTypes && type.length > TYPE_MAX_LEN) {\n    return `${type.slice(0, TYPE_MAX_LEN - 3)}...`\n  }\n\n  return type\n}\n\nconst errorMessageSimple = (\n  expectedType: string,\n  path: string,\n  error: t.ValidationError,\n  options?: ReporterOptions,\n) =>\n  // https://github.com/elm-lang/core/blob/18c9e84e975ed22649888bfad15d1efdb0128ab2/src/Native/Json.js#L199\n  [\n    `Expecting ${truncateType(expectedType, options)}`,\n    path === '' ? '' : `at ${path}`,\n    `but instead got: ${jsToString(error.value)}`,\n    error.message ? `(${error.message})` : '',\n  ]\n    .filter(Boolean)\n    .join(' ')\n\nconst errorMessageUnion = (\n  expectedTypes: string[],\n  path: string,\n  value: unknown,\n  options?: ReporterOptions,\n) =>\n  // https://github.com/elm-lang/core/blob/18c9e84e975ed22649888bfad15d1efdb0128ab2/src/Native/Json.js#L199\n  [\n    'Expecting one of:\\n',\n    expectedTypes\n      .map((type) => `    ${truncateType(type, options)}`)\n      .join('\\n'),\n    path === '' ? '\\n' : `\\nat ${path} `,\n    `but instead got: ${jsToString(value)}`,\n  ]\n    .filter(Boolean)\n    .join('')\n\n// Find the union type in the list of ContextEntry\n// The next ContextEntry should be the type of this branch of the union\nconst findExpectedType = (ctx: t.ContextEntry[]) =>\n  pipe(\n    ctx,\n    A.findIndex(isUnionType),\n    O.chain((n) => A.lookup(n + 1, ctx)),\n  )\n\nconst formatValidationErrorOfUnion = (\n  path: string,\n  errors: NEA.NonEmptyArray<t.ValidationError>,\n  options?: ReporterOptions,\n) => {\n  const expectedTypes = pipe(\n    errors,\n    A.map(getValidationContext),\n    A.map(findExpectedType),\n    A.compact,\n  )\n\n  const value = pipe(\n    expectedTypes,\n    A.head,\n    O.map((v) => v.actual),\n    O.getOrElse((): unknown => undefined),\n  )\n\n  const expected = expectedTypes.map(({type}) => type.name)\n\n  return expected.length > 0\n    ? O.some(errorMessageUnion(expected, path, value, options))\n    : O.none\n}\n\nconst formatValidationCommonError = (\n  path: string,\n  error: t.ValidationError,\n  options?: ReporterOptions,\n) =>\n  pipe(\n    error,\n    getErrorFromCtx,\n    O.map((errorContext) =>\n      errorMessageSimple(errorContext.type.name, path, error, options),\n    ),\n  )\n\nconst groupByKey = NEA.groupBy((error: t.ValidationError) =>\n  pipe(error.context, takeUntil(isUnionType), keyPath),\n)\n\nconst format = (\n  path: string,\n  errors: NEA.NonEmptyArray<t.ValidationError>,\n  options?: ReporterOptions,\n) =>\n  NEA.tail(errors).length > 0\n    ? formatValidationErrorOfUnion(path, errors, options)\n    : formatValidationCommonError(path, NEA.head(errors), options)\n\n/**\n * Format a single validation error.\n *\n * @category formatters\n * @since 1.0.0\n */\nexport const formatValidationError = (\n  error: t.ValidationError,\n  options?: ReporterOptions,\n) => formatValidationCommonError(keyPath(error.context), error, options)\n\n/**\n * Format validation errors (`t.Errors`).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import * as t from 'io-ts'\n * import { formatValidationErrors } from 'io-ts-reporters'\n *\n * const result = t.string.decode(123)\n *\n * assert.deepEqual(\n *   E.mapLeft(formatValidationErrors)(result),\n *   E.left(['Expecting string but instead got: 123'])\n * )\n *\n * @category formatters\n * @since 1.2.0\n */\nexport const formatValidationErrors = (\n  errors: t.Errors,\n  options?: ReporterOptions,\n) =>\n  pipe(\n    errors,\n    groupByKey,\n    R.mapWithIndex((path, errors) => format(path, errors, options)),\n    R.compact,\n    R.toArray,\n    A.map(([_key, error]) => error),\n  )\n\n/**\n * @category formatters\n * @since 1.2.2\n */\nexport interface ReporterOptions {\n  truncateLongTypes?: boolean\n}\n\n/**\n * Deprecated, use the default export instead.\n *\n * @category deprecated\n * @deprecated\n * @since 1.0.0\n */\nexport const reporter = <T>(\n  validation: t.Validation<T>,\n  options?: ReporterOptions,\n) =>\n  pipe(\n    validation,\n    E.mapLeft((errors) => formatValidationErrors(errors, options)),\n    E.fold(\n      (errors) => errors,\n      () => [],\n    ),\n  )\n\ninterface PrettyReporter extends Reporter<string[]> {\n  report: <T>(\n    validation: t.Validation<T>,\n    options?: ReporterOptions,\n  ) => string[]\n}\n\nconst prettyReporter: PrettyReporter = {report: reporter}\nexport default prettyReporter\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryCache = void 0;\nclass InMemoryCache {\n    constructor() {\n        this.cache = new Map();\n        this.set = async (namespace, key, value) => {\n            if (value !== null) {\n                this.cache.set(namespace + '$$' + key, value);\n            }\n            else {\n                this.cache.delete(namespace + '$$' + key);\n            }\n        };\n        this.get = async (namespace, key) => {\n            let res = this.cache.get(namespace + '$$' + key);\n            if (res !== undefined) {\n                return res;\n            }\n            else {\n                return null;\n            }\n        };\n    }\n}\nexports.InMemoryCache = InMemoryCache;\n", "\"use strict\";\n\n/**\n * Copyright (c) 2019-present, GraphQL Foundation\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// A Function, which when given an Array of keys, returns a Promise of an Array\n// of values or Errors.\n// Optionally turn off batching or caching or provide a cache key function or a\n// custom cache instance.\n// If a custom cache is provided, it must be of this type (a subset of ES6 Map).\n\n/**\n * A `DataLoader` creates a public API for loading data from a particular\n * data back-end with unique keys such as the `id` column of a SQL table or\n * document name in a MongoDB database, given a batch loading function.\n *\n * Each `DataLoader` instance contains a unique memoized cache. Use caution when\n * used in long-lived applications or those which serve many users with\n * different access permissions and consider creating a new instance per\n * web request.\n */\nvar DataLoader =\n/*#__PURE__*/\nfunction () {\n  function DataLoader(batchLoadFn, options) {\n    if (typeof batchLoadFn !== 'function') {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + (\"Array<key> and returns Promise<Array<value>>, but got: \" + batchLoadFn + \".\"));\n    }\n\n    this._batchLoadFn = batchLoadFn;\n    this._maxBatchSize = getValidMaxBatchSize(options);\n    this._batchScheduleFn = getValidBatchScheduleFn(options);\n    this._cacheKeyFn = getValidCacheKeyFn(options);\n    this._cacheMap = getValidCacheMap(options);\n    this._batch = null;\n    this.name = getValidName(options);\n  } // Private\n\n\n  var _proto = DataLoader.prototype;\n\n  /**\n   * Loads a key, returning a `Promise` for the value represented by that key.\n   */\n  _proto.load = function load(key) {\n    if (key === null || key === undefined) {\n      throw new TypeError('The loader.load() function must be called with a value, ' + (\"but got: \" + String(key) + \".\"));\n    }\n\n    var batch = getCurrentBatch(this);\n    var cacheMap = this._cacheMap;\n\n    var cacheKey = this._cacheKeyFn(key); // If caching and there is a cache-hit, return cached Promise.\n\n\n    if (cacheMap) {\n      var cachedPromise = cacheMap.get(cacheKey);\n\n      if (cachedPromise) {\n        var cacheHits = batch.cacheHits || (batch.cacheHits = []);\n        return new Promise(function (resolve) {\n          cacheHits.push(function () {\n            resolve(cachedPromise);\n          });\n        });\n      }\n    } // Otherwise, produce a new Promise for this key, and enqueue it to be\n    // dispatched along with the current batch.\n\n\n    batch.keys.push(key);\n    var promise = new Promise(function (resolve, reject) {\n      batch.callbacks.push({\n        resolve: resolve,\n        reject: reject\n      });\n    }); // If caching, cache this promise.\n\n    if (cacheMap) {\n      cacheMap.set(cacheKey, promise);\n    }\n\n    return promise;\n  }\n  /**\n   * Loads multiple keys, promising an array of values:\n   *\n   *     var [ a, b ] = await myLoader.loadMany([ 'a', 'b' ]);\n   *\n   * This is similar to the more verbose:\n   *\n   *     var [ a, b ] = await Promise.all([\n   *       myLoader.load('a'),\n   *       myLoader.load('b')\n   *     ]);\n   *\n   * However it is different in the case where any load fails. Where\n   * Promise.all() would reject, loadMany() always resolves, however each result\n   * is either a value or an Error instance.\n   *\n   *     var [ a, b, c ] = await myLoader.loadMany([ 'a', 'b', 'badkey' ]);\n   *     // c instanceof Error\n   *\n   */\n  ;\n\n  _proto.loadMany = function loadMany(keys) {\n    if (!isArrayLike(keys)) {\n      throw new TypeError('The loader.loadMany() function must be called with Array<key> ' + (\"but got: \" + keys + \".\"));\n    } // Support ArrayLike by using only minimal property access\n\n\n    var loadPromises = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      loadPromises.push(this.load(keys[i])[\"catch\"](function (error) {\n        return error;\n      }));\n    }\n\n    return Promise.all(loadPromises);\n  }\n  /**\n   * Clears the value at `key` from the cache, if it exists. Returns itself for\n   * method chaining.\n   */\n  ;\n\n  _proto.clear = function clear(key) {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      var cacheKey = this._cacheKeyFn(key);\n\n      cacheMap[\"delete\"](cacheKey);\n    }\n\n    return this;\n  }\n  /**\n   * Clears the entire cache. To be used when some event results in unknown\n   * invalidations across this particular `DataLoader`. Returns itself for\n   * method chaining.\n   */\n  ;\n\n  _proto.clearAll = function clearAll() {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      cacheMap.clear();\n    }\n\n    return this;\n  }\n  /**\n   * Adds the provided key and value to the cache. If the key already\n   * exists, no change is made. Returns itself for method chaining.\n   *\n   * To prime the cache with an error at a key, provide an Error instance.\n   */\n  ;\n\n  _proto.prime = function prime(key, value) {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      var cacheKey = this._cacheKeyFn(key); // Only add the key if it does not already exist.\n\n\n      if (cacheMap.get(cacheKey) === undefined) {\n        // Cache a rejected promise if the value is an Error, in order to match\n        // the behavior of load(key).\n        var promise;\n\n        if (value instanceof Error) {\n          promise = Promise.reject(value); // Since this is a case where an Error is intentionally being primed\n          // for a given key, we want to disable unhandled promise rejection.\n\n          promise[\"catch\"](function () {});\n        } else {\n          promise = Promise.resolve(value);\n        }\n\n        cacheMap.set(cacheKey, promise);\n      }\n    }\n\n    return this;\n  }\n  /**\n   * The name given to this `DataLoader` instance. Useful for APM tools.\n   *\n   * Is `null` if not set in the constructor.\n   */\n  ;\n\n  return DataLoader;\n}(); // Private: Enqueue a Job to be executed after all \"PromiseJobs\" Jobs.\n//\n// ES6 JavaScript uses the concepts Job and JobQueue to schedule work to occur\n// after the current execution context has completed:\n// http://www.ecma-international.org/ecma-262/6.0/#sec-jobs-and-job-queues\n//\n// Node.js uses the `process.nextTick` mechanism to implement the concept of a\n// Job, maintaining a global FIFO JobQueue for all Jobs, which is flushed after\n// the current call stack ends.\n//\n// When calling `then` on a Promise, it enqueues a Job on a specific\n// \"PromiseJobs\" JobQueue which is flushed in Node as a single Job on the\n// global JobQueue.\n//\n// DataLoader batches all loads which occur in a single frame of execution, but\n// should include in the batch all loads which occur during the flushing of the\n// \"PromiseJobs\" JobQueue after that same execution frame.\n//\n// In order to avoid the DataLoader dispatch Job occuring before \"PromiseJobs\",\n// A Promise Job is created with the sole purpose of enqueuing a global Job,\n// ensuring that it always occurs after \"PromiseJobs\" ends.\n//\n// Node.js's job queue is unique. Browsers do not have an equivalent mechanism\n// for enqueuing a job to be performed after promise microtasks and before the\n// next macrotask. For browser environments, a macrotask is used (via\n// setImmediate or setTimeout) at a potential performance penalty.\n\n\nvar enqueuePostPromiseJob = typeof process === 'object' && typeof process.nextTick === 'function' ? function (fn) {\n  if (!resolvedPromise) {\n    resolvedPromise = Promise.resolve();\n  }\n\n  resolvedPromise.then(function () {\n    process.nextTick(fn);\n  });\n} : typeof setImmediate === 'function' ? function (fn) {\n  setImmediate(fn);\n} : function (fn) {\n  setTimeout(fn);\n}; // Private: cached resolved Promise instance\n\nvar resolvedPromise; // Private: Describes a batch of requests\n\n// Private: Either returns the current batch, or creates and schedules a\n// dispatch of a new batch for the given loader.\nfunction getCurrentBatch(loader) {\n  // If there is an existing batch which has not yet dispatched and is within\n  // the limit of the batch size, then return it.\n  var existingBatch = loader._batch;\n\n  if (existingBatch !== null && !existingBatch.hasDispatched && existingBatch.keys.length < loader._maxBatchSize) {\n    return existingBatch;\n  } // Otherwise, create a new batch for this loader.\n\n\n  var newBatch = {\n    hasDispatched: false,\n    keys: [],\n    callbacks: []\n  }; // Store it on the loader so it may be reused.\n\n  loader._batch = newBatch; // Then schedule a task to dispatch this batch of requests.\n\n  loader._batchScheduleFn(function () {\n    dispatchBatch(loader, newBatch);\n  });\n\n  return newBatch;\n}\n\nfunction dispatchBatch(loader, batch) {\n  // Mark this batch as having been dispatched.\n  batch.hasDispatched = true; // If there's nothing to load, resolve any cache hits and return early.\n\n  if (batch.keys.length === 0) {\n    resolveCacheHits(batch);\n    return;\n  } // Call the provided batchLoadFn for this loader with the batch's keys and\n  // with the loader as the `this` context.\n\n\n  var batchPromise;\n\n  try {\n    batchPromise = loader._batchLoadFn(batch.keys);\n  } catch (e) {\n    return failedDispatch(loader, batch, new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function ' + (\"errored synchronously: \" + String(e) + \".\")));\n  } // Assert the expected response from batchLoadFn\n\n\n  if (!batchPromise || typeof batchPromise.then !== 'function') {\n    return failedDispatch(loader, batch, new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + (\"not return a Promise: \" + String(batchPromise) + \".\")));\n  } // Await the resolution of the call to batchLoadFn.\n\n\n  batchPromise.then(function (values) {\n    // Assert the expected resolution from batchLoadFn.\n    if (!isArrayLike(values)) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + (\"not return a Promise of an Array: \" + String(values) + \".\"));\n    }\n\n    if (values.length !== batch.keys.length) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + 'not return a Promise of an Array of the same length as the Array ' + 'of keys.' + (\"\\n\\nKeys:\\n\" + String(batch.keys)) + (\"\\n\\nValues:\\n\" + String(values)));\n    } // Resolve all cache hits in the same micro-task as freshly loaded values.\n\n\n    resolveCacheHits(batch); // Step through values, resolving or rejecting each Promise in the batch.\n\n    for (var i = 0; i < batch.callbacks.length; i++) {\n      var value = values[i];\n\n      if (value instanceof Error) {\n        batch.callbacks[i].reject(value);\n      } else {\n        batch.callbacks[i].resolve(value);\n      }\n    }\n  })[\"catch\"](function (error) {\n    failedDispatch(loader, batch, error);\n  });\n} // Private: do not cache individual loads if the entire batch dispatch fails,\n// but still reject each request so they do not hang.\n\n\nfunction failedDispatch(loader, batch, error) {\n  // Cache hits are resolved, even though the batch failed.\n  resolveCacheHits(batch);\n\n  for (var i = 0; i < batch.keys.length; i++) {\n    loader.clear(batch.keys[i]);\n    batch.callbacks[i].reject(error);\n  }\n} // Private: Resolves the Promises for any cache hits in this batch.\n\n\nfunction resolveCacheHits(batch) {\n  if (batch.cacheHits) {\n    for (var i = 0; i < batch.cacheHits.length; i++) {\n      batch.cacheHits[i]();\n    }\n  }\n} // Private: given the DataLoader's options, produce a valid max batch size.\n\n\nfunction getValidMaxBatchSize(options) {\n  var shouldBatch = !options || options.batch !== false;\n\n  if (!shouldBatch) {\n    return 1;\n  }\n\n  var maxBatchSize = options && options.maxBatchSize;\n\n  if (maxBatchSize === undefined) {\n    return Infinity;\n  }\n\n  if (typeof maxBatchSize !== 'number' || maxBatchSize < 1) {\n    throw new TypeError(\"maxBatchSize must be a positive number: \" + maxBatchSize);\n  }\n\n  return maxBatchSize;\n} // Private\n\n\nfunction getValidBatchScheduleFn(options) {\n  var batchScheduleFn = options && options.batchScheduleFn;\n\n  if (batchScheduleFn === undefined) {\n    return enqueuePostPromiseJob;\n  }\n\n  if (typeof batchScheduleFn !== 'function') {\n    throw new TypeError(\"batchScheduleFn must be a function: \" + batchScheduleFn);\n  }\n\n  return batchScheduleFn;\n} // Private: given the DataLoader's options, produce a cache key function.\n\n\nfunction getValidCacheKeyFn(options) {\n  var cacheKeyFn = options && options.cacheKeyFn;\n\n  if (cacheKeyFn === undefined) {\n    return function (key) {\n      return key;\n    };\n  }\n\n  if (typeof cacheKeyFn !== 'function') {\n    throw new TypeError(\"cacheKeyFn must be a function: \" + cacheKeyFn);\n  }\n\n  return cacheKeyFn;\n} // Private: given the DataLoader's options, produce a CacheMap to be used.\n\n\nfunction getValidCacheMap(options) {\n  var shouldCache = !options || options.cache !== false;\n\n  if (!shouldCache) {\n    return null;\n  }\n\n  var cacheMap = options && options.cacheMap;\n\n  if (cacheMap === undefined) {\n    return new Map();\n  }\n\n  if (cacheMap !== null) {\n    var cacheFunctions = ['get', 'set', 'delete', 'clear'];\n    var missingFunctions = cacheFunctions.filter(function (fnName) {\n      return cacheMap && typeof cacheMap[fnName] !== 'function';\n    });\n\n    if (missingFunctions.length !== 0) {\n      throw new TypeError('Custom cacheMap missing methods: ' + missingFunctions.join(', '));\n    }\n  }\n\n  return cacheMap;\n}\n\nfunction getValidName(options) {\n  if (options && options.name) {\n    return options.name;\n  }\n\n  return null;\n} // Private\n\n\nfunction isArrayLike(x) {\n  return typeof x === 'object' && x !== null && typeof x.length === 'number' && (x.length === 0 || x.length > 0 && Object.prototype.hasOwnProperty.call(x, x.length - 1));\n}\n\nmodule.exports = DataLoader;", "'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n", "'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n", "'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.25.0\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  if (!config.url) {\n    throw new Error('Provided config url is not valid');\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  if (!config.url) {\n    throw new Error('Provided config url is not valid');\n  }\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", "{\n  \"name\": \"ton\",\n  \"version\": \"13.4.1\",\n  \"repository\": \"https://github.com/ton-core/ton.git\",\n  \"author\": \"Whales Corp. <developers@whalescorp.com>\",\n  \"license\": \"MIT\",\n  \"main\": \"dist/index.js\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"docs\": \"rm -fr docs && typedoc src/index.ts\",\n    \"build\": \"rm -fr dist && tsc --declaration\",\n    \"test\": \"jest --verbose --runInBand\",\n    \"release\": \"yarn build && yarn release-it --npm.yarn1\"\n  },\n  \"devDependencies\": {\n    \"@release-it/keep-a-changelog\": \"^3.1.0\",\n    \"@types/jest\": \"^27.0.1\",\n    \"@types/node\": \"^16.7.10\",\n    \"buffer\": \"^6.0.3\",\n    \"expect\": \"^27.1.0\",\n    \"jest\": \"^27.1.0\",\n    \"jest-mock\": \"^27.1.0\",\n    \"karma\": \"^6.3.4\",\n    \"karma-chrome-launcher\": \"^3.1.0\",\n    \"karma-jasmine\": \"^4.0.1\",\n    \"karma-typescript\": \"^5.5.2\",\n    \"karma-webpack\": \"^5.0.0\",\n    \"prando\": \"^6.0.1\",\n    \"release-it\": \"^15.5.1\",\n    \"ton-core\": \"^0.48.0\",\n    \"ton-crypto\": \"3.2.0\",\n    \"ton-emulator\": \"^2.1.1\",\n    \"ts-jest\": \"^27.0.5\",\n    \"ts-loader\": \"^9.2.5\",\n    \"ts-node\": \"^10.7.0\",\n    \"typedoc\": \"^0.23.24\",\n    \"typescript\": \"^4.4.2\",\n    \"webpack\": \"^5.51.2\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.25.0\",\n    \"dataloader\": \"^2.0.0\",\n    \"fp-ts\": \"^2.11.1\",\n    \"io-ts\": \"^2.2.16\",\n    \"io-ts-reporters\": \"^2.0.0\",\n    \"symbol.inspect\": \"1.0.1\",\n    \"teslabot\": \"^1.3.0\"\n  },\n  \"peerDependencies\": {\n    \"ton-core\": \">=0.48.0\",\n    \"ton-crypto\": \">=3.2.0\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\",\n    \"registry\": \"https://registry.npmjs.org/\"\n  },\n  \"release-it\": {\n    \"github\": {\n      \"release\": true\n    },\n    \"plugins\": {\n      \"@release-it/keep-a-changelog\": {\n        \"filename\": \"CHANGELOG.md\"\n      }\n    }\n  },\n  \"packageManager\": \"yarn@3.4.1\"\n}\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpApi = void 0;\nconst t = __importStar(require(\"io-ts\"));\nconst Either_1 = require(\"fp-ts/lib/Either\");\nconst io_ts_reporters_1 = __importDefault(require(\"io-ts-reporters\"));\nconst TonCache_1 = require(\"./TonCache\");\nconst dataloader_1 = __importDefault(require(\"dataloader\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst version = require('../../../package.json').version;\nconst blockIdExt = t.type({\n    '@type': t.literal('ton.blockIdExt'),\n    workchain: t.number,\n    shard: t.string,\n    seqno: t.number,\n    root_hash: t.string,\n    file_hash: t.string\n});\nconst addressInformation = t.type({\n    balance: t.union([t.number, t.string]),\n    state: t.union([t.literal('active'), t.literal('uninitialized'), t.literal('frozen')]),\n    data: t.string,\n    code: t.string,\n    last_transaction_id: t.type({\n        '@type': t.literal('internal.transactionId'),\n        lt: t.string,\n        hash: t.string\n    }),\n    block_id: blockIdExt,\n    sync_utime: t.number\n});\nconst bocResponse = t.type({\n    '@type': t.literal('ok')\n});\nconst feeResponse = t.type({\n    '@type': t.literal('query.fees'),\n    source_fees: t.type({\n        '@type': t.literal('fees'),\n        in_fwd_fee: t.number,\n        storage_fee: t.number,\n        gas_fee: t.number,\n        fwd_fee: t.number\n    })\n});\nconst callGetMethod = t.type({\n    gas_used: t.number,\n    exit_code: t.number,\n    stack: t.array(t.unknown)\n});\nconst messageData = t.union([\n    t.type({\n        '@type': t.literal('msg.dataRaw'),\n        'body': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataDecryptedText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataEncryptedText'),\n        'text': t.string\n    })\n]);\nconst message = t.type({\n    source: t.string,\n    destination: t.string,\n    value: t.string,\n    fwd_fee: t.string,\n    ihr_fee: t.string,\n    created_lt: t.string,\n    body_hash: t.string,\n    msg_data: messageData\n});\nconst transaction = t.type({\n    data: t.string,\n    utime: t.number,\n    transaction_id: t.type({\n        lt: t.string,\n        hash: t.string\n    }),\n    fee: t.string,\n    storage_fee: t.string,\n    other_fee: t.string,\n    in_msg: t.union([t.undefined, message]),\n    out_msgs: t.array(message)\n});\nconst getTransactions = t.array(transaction);\nconst getMasterchain = t.type({\n    state_root_hash: t.string,\n    last: blockIdExt,\n    init: blockIdExt\n});\nconst getShards = t.type({\n    shards: t.array(blockIdExt)\n});\nconst blockShortTxt = t.type({\n    '@type': t.literal('blocks.shortTxId'),\n    mode: t.number,\n    account: t.string,\n    lt: t.string,\n    hash: t.string\n});\nconst getBlockTransactions = t.type({\n    id: blockIdExt,\n    req_count: t.number,\n    incomplete: t.boolean,\n    transactions: t.array(blockShortTxt)\n});\nclass TypedCache {\n    constructor(namespace, cache, codec, keyEncoder) {\n        this.namespace = namespace;\n        this.cache = cache;\n        this.codec = codec;\n        this.keyEncoder = keyEncoder;\n    }\n    async get(key) {\n        let ex = await this.cache.get(this.namespace, this.keyEncoder(key));\n        if (ex) {\n            let decoded = this.codec.decode(JSON.parse(ex));\n            if ((0, Either_1.isRight)(decoded)) {\n                return decoded.right;\n            }\n        }\n        return null;\n    }\n    async set(key, value) {\n        if (value !== null) {\n            await this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));\n        }\n        else {\n            await this.cache.set(this.namespace, this.keyEncoder(key), null);\n        }\n    }\n}\nclass HttpApi {\n    constructor(endpoint, parameters) {\n        this.endpoint = endpoint;\n        this.cache = new TonCache_1.InMemoryCache();\n        this.parameters = {\n            timeout: parameters?.timeout || 30000,\n            apiKey: parameters?.apiKey\n        };\n        // Shard\n        this.shardCache = new TypedCache('ton-shard', this.cache, t.array(blockIdExt), (src) => src + '');\n        this.shardLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = (await this.doCall('shards', { seqno: v }, getShards)).shards;\n                await this.shardCache.set(v, loaded);\n                return loaded;\n            }));\n        });\n        // Shard Transactions\n        this.shardTransactionsCache = new TypedCache('ton-shard-tx', this.cache, getBlockTransactions, (src) => src.workchain + ':' + src.shard + ':' + src.seqno);\n        this.shardTransactionsLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardTransactionsCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = await this.doCall('getBlockTransactions', { workchain: v.workchain, seqno: v.seqno, shard: v.shard }, getBlockTransactions);\n                await this.shardTransactionsCache.set(v, loaded);\n                return loaded;\n            }));\n        }, { cacheKeyFn: (src) => src.workchain + ':' + src.shard + ':' + src.seqno });\n    }\n    getAddressInformation(address) {\n        return this.doCall('getAddressInformation', { address: address.toString() }, addressInformation);\n    }\n    async getTransactions(address, opts) {\n        const inclusive = opts.inclusive;\n        delete opts.inclusive;\n        // Convert hash\n        let hash = undefined;\n        if (opts.hash) {\n            hash = Buffer.from(opts.hash, 'base64').toString('hex');\n        }\n        // Adjust limit\n        let limit = opts.limit;\n        if (opts.hash && opts.lt && inclusive !== true) {\n            limit++;\n        }\n        // Do request\n        let res = await this.doCall('getTransactions', { address: address.toString(), ...opts, limit, hash }, getTransactions);\n        if (res.length > limit) {\n            res = res.slice(0, limit);\n        }\n        // Adjust result\n        if (opts.hash && opts.lt && inclusive !== true) {\n            res.shift();\n            return res;\n        }\n        else {\n            return res;\n        }\n    }\n    async getMasterchainInfo() {\n        return await this.doCall('getMasterchainInfo', {}, getMasterchain);\n    }\n    async getShards(seqno) {\n        return await this.shardLoader.load(seqno);\n    }\n    async getBlockTransactions(workchain, seqno, shard) {\n        return await this.shardTransactionsLoader.load({ workchain, seqno, shard });\n    }\n    async getTransaction(address, lt, hash) {\n        let convHash = Buffer.from(hash, 'base64').toString('hex');\n        let res = await this.doCall('getTransactions', { address: address.toString(), lt, hash: convHash, limit: 1 }, getTransactions);\n        let ex = res.find((v) => v.transaction_id.lt === lt && v.transaction_id.hash === hash);\n        if (ex) {\n            return ex;\n        }\n        else {\n            return null;\n        }\n    }\n    async callGetMethod(address, method, stack) {\n        return await this.doCall('runGetMethod', { address: address.toString(), method, stack: serializeStack(stack) }, callGetMethod);\n    }\n    async sendBoc(body) {\n        await this.doCall('sendBoc', { boc: body.toString('base64') }, bocResponse);\n    }\n    async estimateFee(address, args) {\n        return await this.doCall('estimateFee', {\n            address: address.toString(),\n            body: args.body.toBoc().toString('base64'),\n            'init_data': args.initData ? args.initData.toBoc().toString('base64') : '',\n            'init_code': args.initCode ? args.initCode.toBoc().toString('base64') : '',\n            ignore_chksig: args.ignoreSignature\n        }, feeResponse);\n    }\n    async doCall(method, body, codec) {\n        let headers = {\n            'Content-Type': 'application/json',\n            'X-Ton-Client-Version': version,\n        };\n        if (this.parameters.apiKey) {\n            headers['X-API-Key'] = this.parameters.apiKey;\n        }\n        let res = await axios_1.default.post(this.endpoint, JSON.stringify({\n            id: '1',\n            jsonrpc: '2.0',\n            method: method,\n            params: body\n        }), {\n            headers,\n            timeout: this.parameters.timeout,\n        });\n        if (res.status !== 200 || !res.data.ok) {\n            throw Error('Received error: ' + JSON.stringify(res.data));\n        }\n        let decoded = codec.decode(res.data.result);\n        if ((0, Either_1.isRight)(decoded)) {\n            return decoded.right;\n        }\n        else {\n            throw Error('Malformed response: ' + io_ts_reporters_1.default.report(decoded).join(', '));\n        }\n    }\n}\nexports.HttpApi = HttpApi;\nfunction serializeStack(src) {\n    let stack = [];\n    for (let s of src) {\n        if (s.type === 'int') {\n            stack.push(['num', s.value.toString()]);\n        }\n        else if (s.type === 'cell') {\n            stack.push(['tvm.Cell', s.cell.toBoc().toString('base64')]);\n        }\n        else if (s.type === 'slice') {\n            stack.push(['tvm.Slice', s.cell.toBoc().toString('base64')]);\n        }\n        else if (s.type === 'builder') {\n            stack.push(['tvm.Builder', s.cell.toBoc().toString('base64')]);\n        }\n        else {\n            throw Error('Unsupported stack item type: ' + s.type);\n        }\n    }\n    return stack;\n}\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _TonClient_api;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonClient = void 0;\nconst HttpApi_1 = require(\"./api/HttpApi\");\nconst ton_core_1 = require(\"ton-core\");\nclass TonClient {\n    constructor(parameters) {\n        _TonClient_api.set(this, void 0);\n        this.parameters = {\n            endpoint: parameters.endpoint\n        };\n        __classPrivateFieldSet(this, _TonClient_api, new HttpApi_1.HttpApi(this.parameters.endpoint, {\n            timeout: parameters.timeout,\n            apiKey: parameters.apiKey,\n            adapter: parameters.httpAdapter\n        }), \"f\");\n    }\n    /**\n     * Get Address Balance\n     * @param address address for balance check\n     * @returns balance\n     */\n    async getBalance(address) {\n        return (await this.getContractState(address)).balance;\n    }\n    /**\n     * Invoke get method\n     * @param address contract address\n     * @param name name of method\n     * @param params optional parameters\n     * @returns stack and gas_used field\n     */\n    async runMethod(address, name, stack = []) {\n        let res = await __classPrivateFieldGet(this, _TonClient_api, \"f\").callGetMethod(address, name, stack);\n        if (res.exit_code !== 0) {\n            throw Error('Unable to execute get method. Got exit_code: ' + res.exit_code);\n        }\n        return { gas_used: res.gas_used, stack: parseStack(res.stack) };\n    }\n    /**\n     * Invoke get method\n     * @param address contract address\n     * @param name name of method\n     * @param params optional parameters\n     * @returns stack and gas_used field\n     * @deprecated use runMethod instead\n     */\n    async callGetMethod(address, name, stack = []) {\n        return this.runMethod(address, name, stack);\n    }\n    /**\n     * Invoke get method that returns error code instead of throwing error\n     * @param address contract address\n     * @param name name of method\n     * @param params optional parameters\n     * @returns stack and gas_used field\n    */\n    async runMethodWithError(address, name, params = []) {\n        let res = await __classPrivateFieldGet(this, _TonClient_api, \"f\").callGetMethod(address, name, params);\n        return { gas_used: res.gas_used, stack: parseStack(res.stack), exit_code: res.exit_code };\n    }\n    /**\n     * Invoke get method that returns error code instead of throwing error\n     * @param address contract address\n     * @param name name of method\n     * @param params optional parameters\n     * @returns stack and gas_used field\n     * @deprecated use runMethodWithError instead\n     */\n    async callGetMethodWithError(address, name, stack = []) {\n        return this.runMethodWithError(address, name, stack);\n    }\n    /**\n     * Get transactions\n     * @param address address\n     */\n    async getTransactions(address, opts) {\n        // Fetch transactions\n        let tx = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getTransactions(address, opts);\n        let res = [];\n        for (let r of tx) {\n            res.push((0, ton_core_1.loadTransaction)(ton_core_1.Cell.fromBoc(Buffer.from(r.data, 'base64'))[0].beginParse()));\n        }\n        return res;\n    }\n    /**\n     * Get transaction by it's id\n     * @param address address\n     * @param lt logical time\n     * @param hash transaction hash\n     * @returns transaction or null if not exist\n     */\n    async getTransaction(address, lt, hash) {\n        let res = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getTransaction(address, lt, hash);\n        if (res) {\n            return (0, ton_core_1.loadTransaction)(ton_core_1.Cell.fromBoc(Buffer.from(res.data, 'base64'))[0].beginParse());\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Fetch latest masterchain info\n     * @returns masterchain info\n     */\n    async getMasterchainInfo() {\n        let r = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getMasterchainInfo();\n        return {\n            workchain: r.init.workchain,\n            shard: r.last.shard,\n            initSeqno: r.init.seqno,\n            latestSeqno: r.last.seqno\n        };\n    }\n    /**\n     * Fetch latest workchain shards\n     * @param seqno masterchain seqno\n     */\n    async getWorkchainShards(seqno) {\n        let r = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getShards(seqno);\n        return r.map((m) => ({\n            workchain: m.workchain,\n            shard: m.shard,\n            seqno: m.seqno\n        }));\n    }\n    /**\n     * Fetch transactions inf shards\n     * @param workchain\n     * @param seqno\n     * @param shard\n     */\n    async getShardTransactions(workchain, seqno, shard) {\n        let tx = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getBlockTransactions(workchain, seqno, shard);\n        if (tx.incomplete) {\n            throw Error('Unsupported');\n        }\n        return tx.transactions.map((v) => ({\n            account: ton_core_1.Address.parseRaw(v.account),\n            lt: v.lt,\n            hash: v.hash\n        }));\n    }\n    /**\n     * Send message to a network\n     * @param src source message\n     */\n    async sendMessage(src) {\n        const boc = (0, ton_core_1.beginCell)()\n            .store((0, ton_core_1.storeMessage)(src))\n            .endCell()\n            .toBoc();\n        await __classPrivateFieldGet(this, _TonClient_api, \"f\").sendBoc(boc);\n    }\n    /**\n     * Send file to a network\n     * @param src source file\n     */\n    async sendFile(src) {\n        await __classPrivateFieldGet(this, _TonClient_api, \"f\").sendBoc(src);\n    }\n    /**\n     * Estimate fees for external message\n     * @param address target address\n     * @returns\n     */\n    async estimateExternalMessageFee(address, args) {\n        return await __classPrivateFieldGet(this, _TonClient_api, \"f\").estimateFee(address, { body: args.body, initCode: args.initCode, initData: args.initData, ignoreSignature: args.ignoreSignature });\n    }\n    /**\n     * Send external message to contract\n     * @param contract contract to send message\n     * @param src message body\n     */\n    async sendExternalMessage(contract, src) {\n        if (await this.isContractDeployed(contract.address) || !contract.init) {\n            const message = (0, ton_core_1.external)({\n                to: contract.address,\n                body: src\n            });\n            await this.sendMessage(message);\n        }\n        else {\n            const message = (0, ton_core_1.external)({\n                to: contract.address,\n                init: { code: contract.init.code, data: contract.init.data },\n                body: src\n            });\n            await this.sendMessage(message);\n        }\n    }\n    /**\n     * Check if contract is deployed\n     * @param address addres to check\n     * @returns true if contract is in active state\n     */\n    async isContractDeployed(address) {\n        return (await this.getContractState(address)).state === 'active';\n    }\n    /**\n     * Resolves contract state\n     * @param address contract address\n     */\n    async getContractState(address) {\n        let info = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getAddressInformation(address);\n        let balance = BigInt(info.balance);\n        let state = info.state;\n        return {\n            balance,\n            state,\n            code: info.code !== '' ? Buffer.from(info.code, 'base64') : null,\n            data: info.data !== '' ? Buffer.from(info.data, 'base64') : null,\n            lastTransaction: info.last_transaction_id.lt !== '0' ? {\n                lt: info.last_transaction_id.lt,\n                hash: info.last_transaction_id.hash,\n            } : null,\n            blockId: {\n                workchain: info.block_id.workchain,\n                shard: info.block_id.shard,\n                seqno: info.block_id.seqno\n            },\n            timestampt: info.sync_utime\n        };\n    }\n    /**\n     * Open contract\n     * @param src source contract\n     * @returns contract\n     */\n    open(src) {\n        return (0, ton_core_1.openContract)(src, (args) => createProvider(this, args.address, args.init));\n    }\n    /**\n     * Create a provider\n     * @param address address\n     * @param init optional init\n     * @returns provider\n     */\n    provider(address, init) {\n        return createProvider(this, address, init);\n    }\n}\nexports.TonClient = TonClient;\n_TonClient_api = new WeakMap();\nfunction parseStack(src) {\n    let stack = [];\n    for (let s of src) {\n        if (s[0] === 'num') {\n            let val = s[1];\n            if (val.startsWith('-')) {\n                stack.push({ type: 'int', value: -BigInt(val.slice(1)) });\n            }\n            else {\n                stack.push({ type: 'int', value: BigInt(val) });\n            }\n        }\n        else if (s[0] === 'null') {\n            stack.push({ type: 'null' });\n        }\n        else if (s[0] === 'cell') {\n            stack.push({ type: 'cell', cell: ton_core_1.Cell.fromBoc(Buffer.from(s[1].bytes, 'base64'))[0] });\n        }\n        else if (s[0] === 'slice') {\n            stack.push({ type: 'slice', cell: ton_core_1.Cell.fromBoc(Buffer.from(s[1].bytes, 'base64'))[0] });\n        }\n        else if (s[0] === 'builder') {\n            stack.push({ type: 'builder', cell: ton_core_1.Cell.fromBoc(Buffer.from(s[1].bytes, 'base64'))[0] });\n        }\n        else {\n            throw Error('Unsupported stack item type: ' + s[0]);\n        }\n    }\n    return new ton_core_1.TupleReader(stack);\n}\nfunction createProvider(client, address, init) {\n    return {\n        async getState() {\n            let state = await client.getContractState(address);\n            let balance = state.balance;\n            let last = state.lastTransaction ? { lt: BigInt(state.lastTransaction.lt), hash: Buffer.from(state.lastTransaction.hash, 'base64') } : null;\n            let storage;\n            if (state.state === 'active') {\n                storage = {\n                    type: 'active',\n                    code: state.code ? state.code : null,\n                    data: state.data ? state.data : null,\n                };\n            }\n            else if (state.state === 'uninitialized') {\n                storage = {\n                    type: 'uninit',\n                };\n            }\n            else if (state.state === 'frozen') {\n                storage = {\n                    type: 'frozen',\n                    stateHash: Buffer.alloc(0),\n                };\n            }\n            else {\n                throw Error('Unsupported state');\n            }\n            return {\n                balance,\n                last,\n                state: storage,\n            };\n        },\n        async get(name, args) {\n            let method = await client.callGetMethod(address, name, args);\n            return { stack: method.stack };\n        },\n        async external(message) {\n            //\n            // Resolve init\n            //\n            let neededInit = null;\n            if (init && !await client.isContractDeployed(address)) {\n                neededInit = init;\n            }\n            //\n            // Send package\n            //\n            const ext = (0, ton_core_1.external)({\n                to: address,\n                init: neededInit ? { code: neededInit.code, data: neededInit.data } : null,\n                body: message\n            });\n            let boc = (0, ton_core_1.beginCell)()\n                .store((0, ton_core_1.storeMessage)(ext))\n                .endCell()\n                .toBoc();\n            await client.sendFile(boc);\n        },\n        async internal(via, message) {\n            // Resolve init\n            let neededInit = null;\n            if (init && (!await client.isContractDeployed(address))) {\n                neededInit = init;\n            }\n            // Resolve bounce\n            let bounce = true;\n            if (message.bounce !== null && message.bounce !== undefined) {\n                bounce = message.bounce;\n            }\n            // Resolve value\n            let value;\n            if (typeof message.value === 'string') {\n                value = (0, ton_core_1.toNano)(message.value);\n            }\n            else {\n                value = message.value;\n            }\n            // Resolve body\n            let body = null;\n            if (typeof message.body === 'string') {\n                body = (0, ton_core_1.comment)(message.body);\n            }\n            else if (message.body) {\n                body = message.body;\n            }\n            // Send internal message\n            await via.send({\n                to: address,\n                value,\n                bounce,\n                sendMode: message.sendMode,\n                init: neededInit,\n                body\n            });\n        }\n    };\n}\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUrlSafe = void 0;\nfunction toUrlSafe(src) {\n    while (src.indexOf('/') >= 0) {\n        src = src.replace('/', '_');\n    }\n    while (src.indexOf('+') >= 0) {\n        src = src.replace('+', '-');\n    }\n    while (src.indexOf('=') >= 0) {\n        src = src.replace('=', '');\n    }\n    return src;\n}\nexports.toUrlSafe = toUrlSafe;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TonClient4_endpoint, _TonClient4_timeout, _TonClient4_adapter;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonClient4 = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst t = __importStar(require(\"io-ts\"));\nconst ton_core_1 = require(\"ton-core\");\nconst toUrlSafe_1 = require(\"../utils/toUrlSafe\");\nclass TonClient4 {\n    constructor(args) {\n        _TonClient4_endpoint.set(this, void 0);\n        _TonClient4_timeout.set(this, void 0);\n        _TonClient4_adapter.set(this, void 0);\n        __classPrivateFieldSet(this, _TonClient4_endpoint, args.endpoint, \"f\");\n        __classPrivateFieldSet(this, _TonClient4_timeout, args.timeout || 5000, \"f\");\n        __classPrivateFieldSet(this, _TonClient4_adapter, args.httpAdapter, \"f\");\n    }\n    /**\n     * Get Last Block\n     * @returns last block info\n     */\n    async getLastBlock() {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/latest', { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!lastBlockCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Get block info\n     * @param seqno block sequence number\n     * @returns block info\n     */\n    async getBlock(seqno) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!blockCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        if (!res.data.exist) {\n            throw Error('Block is out of scope');\n        }\n        return res.data.block;\n    }\n    /**\n     * Get block info by unix timestamp\n     * @param ts unix timestamp\n     * @returns block info\n     */\n    async getBlockByUtime(ts) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/utime/' + ts, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!blockCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        if (!res.data.exist) {\n            throw Error('Block is out of scope');\n        }\n        return res.data.block;\n    }\n    /**\n     * Get block info by unix timestamp\n     * @param seqno block sequence number\n     * @param address account address\n     * @returns account info\n     */\n    async getAccount(seqno, address) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/' + address.toString({ urlSafe: true }), { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!accountCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Get account lite info (without code and data)\n     * @param seqno block sequence number\n     * @param address account address\n     * @returns account lite info\n     */\n    async getAccountLite(seqno, address) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/' + address.toString({ urlSafe: true }) + '/lite', { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!accountLiteCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Check if contract is deployed\n     * @param address addres to check\n     * @returns true if contract is in active state\n     */\n    async isContractDeployed(seqno, address) {\n        let account = await this.getAccountLite(seqno, address);\n        return account.account.state.type === 'active';\n    }\n    /**\n     * Check if account was updated since\n     * @param seqno block sequence number\n     * @param address account address\n     * @param lt account last transaction lt\n     * @returns account change info\n     */\n    async isAccountChanged(seqno, address, lt) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/' + address.toString({ urlSafe: true }) + '/changed/' + lt.toString(10), { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!changedCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Load one unparsed account transaction\n     * @param seqno block sequence number\n     * @param address account address\n     * @param lt account last transaction lt\n     * @returns one unparsed transaction\n     */\n    async getTransaction(seqno, address, lt) {\n        const urladdr = address.toString({ urlSafe: true });\n        const urlpath = `/block/${seqno}/${urladdr}/tx/${lt.toString(10)}`;\n        const res = await axios_1.default.get(new URL(urlpath, __classPrivateFieldGet(this, _TonClient4_endpoint, \"f\")).href, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!transactionCodec.is(res.data))\n            throw Error('Mailformed response');\n        const txcell = ton_core_1.Cell.fromBoc(Buffer.from(res.data.boc, 'base64'))[0];\n        return { tx: (0, ton_core_1.loadTransaction)(txcell.beginParse()), ...res.data };\n    }\n    /**\n     * Load unparsed account transactions\n     * @param address address\n     * @param lt last transaction lt\n     * @param hash last transaction hash\n     * @returns unparsed transactions\n     */\n    async getAccountTransactions(address, lt, hash) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/account/' + address.toString({ urlSafe: true }) + '/tx/' + lt.toString(10) + '/' + (0, toUrlSafe_1.toUrlSafe)(hash.toString('base64')), { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!transactionsCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        let data = res.data;\n        let tx = [];\n        let cells = ton_core_1.Cell.fromBoc(Buffer.from(data.boc, 'base64'));\n        for (let i = 0; i < data.blocks.length; i++) {\n            tx.push({\n                block: data.blocks[i],\n                tx: (0, ton_core_1.loadTransaction)(cells[i].beginParse())\n            });\n        }\n        return tx;\n    }\n    /**\n     * Get network config\n     * @param seqno block sequence number\n     * @param ids optional config ids\n     * @returns network config\n     */\n    async getConfig(seqno, ids) {\n        let tail = '';\n        if (ids && ids.length > 0) {\n            tail = '/' + [...ids].sort().join(',');\n        }\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/config' + tail, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!configCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Execute run method\n     * @param seqno block sequence number\n     * @param address account address\n     * @param name method name\n     * @param args method arguments\n     * @returns method result\n     */\n    async runMethod(seqno, address, name, args) {\n        let tail = args && args.length > 0 ? '/' + (0, toUrlSafe_1.toUrlSafe)((0, ton_core_1.serializeTuple)(args).toBoc({ idx: false, crc32: false }).toString('base64')) : '';\n        let url = __classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/' + address.toString({ urlSafe: true }) + '/run/' + name + tail;\n        let res = await axios_1.default.get(url, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!runMethodCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        let resultTuple = res.data.resultRaw ? (0, ton_core_1.parseTuple)(ton_core_1.Cell.fromBoc(Buffer.from(res.data.resultRaw, 'base64'))[0]) : [];\n        return {\n            exitCode: res.data.exitCode,\n            result: resultTuple,\n            resultRaw: res.data.resultRaw,\n            block: res.data.block,\n            shardBlock: res.data.shardBlock,\n            reader: new ton_core_1.TupleReader(resultTuple),\n        };\n    }\n    /**\n     * Send external message\n     * @param message message boc\n     * @returns message status\n     */\n    async sendMessage(message) {\n        let res = await axios_1.default.post(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/send', { boc: message.toString('base64') }, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!sendCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return { status: res.data.status };\n    }\n    /**\n     * Open smart contract\n     * @param contract contract\n     * @returns opened contract\n     */\n    open(contract) {\n        return (0, ton_core_1.openContract)(contract, (args) => createProvider(this, null, args.address, args.init));\n    }\n    /**\n     * Open smart contract\n     * @param block block number\n     * @param contract contract\n     * @returns opened contract\n     */\n    openAt(block, contract) {\n        return (0, ton_core_1.openContract)(contract, (args) => createProvider(this, block, args.address, args.init));\n    }\n    /**\n     * Create provider\n     * @param address address\n     * @param init optional init data\n     * @returns provider\n     */\n    provider(address, init) {\n        return createProvider(this, null, address, init ? init : null);\n    }\n    /**\n     * Create provider at specified block number\n     * @param block block number\n     * @param address address\n     * @param init optional init data\n     * @returns provider\n     */\n    providerAt(block, address, init) {\n        return createProvider(this, block, address, init ? init : null);\n    }\n}\nexports.TonClient4 = TonClient4;\n_TonClient4_endpoint = new WeakMap(), _TonClient4_timeout = new WeakMap(), _TonClient4_adapter = new WeakMap();\nfunction createProvider(client, block, address, init) {\n    return {\n        async getState() {\n            // Resolve block\n            let sq = block;\n            if (sq === null) {\n                let res = await client.getLastBlock();\n                sq = res.last.seqno;\n            }\n            // Load state\n            let state = await client.getAccount(sq, address);\n            // Convert state\n            let last = state.account.last ? { lt: BigInt(state.account.last.lt), hash: Buffer.from(state.account.last.hash, 'base64') } : null;\n            let storage;\n            if (state.account.state.type === 'active') {\n                storage = {\n                    type: 'active',\n                    code: state.account.state.code ? Buffer.from(state.account.state.code, 'base64') : null,\n                    data: state.account.state.data ? Buffer.from(state.account.state.data, 'base64') : null,\n                };\n            }\n            else if (state.account.state.type === 'uninit') {\n                storage = {\n                    type: 'uninit',\n                };\n            }\n            else if (state.account.state.type === 'frozen') {\n                storage = {\n                    type: 'frozen',\n                    stateHash: Buffer.from(state.account.state.stateHash, 'base64'),\n                };\n            }\n            else {\n                throw Error('Unsupported state');\n            }\n            return {\n                balance: BigInt(state.account.balance.coins),\n                last: last,\n                state: storage\n            };\n        },\n        async get(name, args) {\n            let sq = block;\n            if (sq === null) {\n                let res = await client.getLastBlock();\n                sq = res.last.seqno;\n            }\n            let method = await client.runMethod(sq, address, name, args);\n            if (method.exitCode !== 0 && method.exitCode !== 1) {\n                throw Error('Exit code: ' + method.exitCode);\n            }\n            return {\n                stack: new ton_core_1.TupleReader(method.result),\n            };\n        },\n        async external(message) {\n            // Resolve last\n            let last = await client.getLastBlock();\n            // Resolve init\n            let neededInit = null;\n            if (init && (await client.getAccountLite(last.last.seqno, address)).account.state.type !== 'active') {\n                neededInit = init;\n            }\n            // Send with state init\n            const ext = (0, ton_core_1.external)({\n                to: address,\n                init: neededInit ? { code: neededInit.code, data: neededInit.data } : null,\n                body: message\n            });\n            let pkg = (0, ton_core_1.beginCell)()\n                .store((0, ton_core_1.storeMessage)(ext))\n                .endCell()\n                .toBoc();\n            await client.sendMessage(pkg);\n        },\n        async internal(via, message) {\n            // Resolve last\n            let last = await client.getLastBlock();\n            // Resolve init\n            let neededInit = null;\n            if (init && (await client.getAccountLite(last.last.seqno, address)).account.state.type !== 'active') {\n                neededInit = init;\n            }\n            // Resolve bounce\n            let bounce = true;\n            if (message.bounce !== null && message.bounce !== undefined) {\n                bounce = message.bounce;\n            }\n            // Resolve value\n            let value;\n            if (typeof message.value === 'string') {\n                value = (0, ton_core_1.toNano)(message.value);\n            }\n            else {\n                value = message.value;\n            }\n            // Resolve body\n            let body = null;\n            if (typeof message.body === 'string') {\n                body = (0, ton_core_1.comment)(message.body);\n            }\n            else if (message.body) {\n                body = message.body;\n            }\n            // Send internal message\n            await via.send({\n                to: address,\n                value,\n                bounce,\n                sendMode: message.sendMode,\n                init: neededInit,\n                body\n            });\n        }\n    };\n}\n//\n// Codecs\n//\nconst lastBlockCodec = t.type({\n    last: t.type({\n        seqno: t.number,\n        shard: t.string,\n        workchain: t.number,\n        fileHash: t.string,\n        rootHash: t.string\n    }),\n    init: t.type({\n        fileHash: t.string,\n        rootHash: t.string\n    }),\n    stateRootHash: t.string,\n    now: t.number\n});\nconst blockCodec = t.union([t.type({\n        exist: t.literal(false)\n    }), t.type({\n        exist: t.literal(true),\n        block: t.type({\n            shards: t.array(t.type({\n                workchain: t.number,\n                seqno: t.number,\n                shard: t.string,\n                rootHash: t.string,\n                fileHash: t.string,\n                transactions: t.array(t.type({\n                    account: t.string,\n                    hash: t.string,\n                    lt: t.string\n                }))\n            }))\n        })\n    })]);\n// {\"lastPaid\":1653099243,\"duePayment\":null,\"used\":{\"bits\":119,\"cells\":1,\"publicCells\":0}}\nconst storageStatCodec = t.type({\n    lastPaid: t.number,\n    duePayment: t.union([t.null, t.string]),\n    used: t.type({\n        bits: t.number,\n        cells: t.number,\n        publicCells: t.number\n    })\n});\nconst accountCodec = t.type({\n    account: t.type({\n        state: t.union([\n            t.type({ type: t.literal('uninit') }),\n            t.type({ type: t.literal('active'), code: t.union([t.string, t.null]), data: t.union([t.string, t.null]) }),\n            t.type({ type: t.literal('frozen'), stateHash: t.string })\n        ]),\n        balance: t.type({\n            coins: t.string\n        }),\n        last: t.union([\n            t.null,\n            t.type({\n                lt: t.string,\n                hash: t.string\n            })\n        ]),\n        storageStat: t.union([t.null, storageStatCodec])\n    }),\n    block: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    })\n});\nconst accountLiteCodec = t.type({\n    account: t.type({\n        state: t.union([\n            t.type({ type: t.literal('uninit') }),\n            t.type({ type: t.literal('active'), codeHash: t.string, dataHash: t.string }),\n            t.type({ type: t.literal('frozen'), stateHash: t.string })\n        ]),\n        balance: t.type({\n            coins: t.string\n        }),\n        last: t.union([\n            t.null,\n            t.type({\n                lt: t.string,\n                hash: t.string\n            })\n        ]),\n        storageStat: t.union([t.null, storageStatCodec])\n    })\n});\nconst changedCodec = t.type({\n    changed: t.boolean,\n    block: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    })\n});\nconst runMethodCodec = t.type({\n    exitCode: t.number,\n    resultRaw: t.union([t.string, t.null]),\n    block: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    }),\n    shardBlock: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    })\n});\nconst configCodec = t.type({\n    config: t.type({\n        cell: t.string,\n        address: t.string,\n        globalBalance: t.type({\n            coins: t.string\n        })\n    })\n});\nconst sendCodec = t.type({\n    status: t.number\n});\nconst transactionsCodec = t.type({\n    blocks: t.array(t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    })),\n    boc: t.string\n});\nconst transactionCodec = t.type({\n    block: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n    }),\n    boc: t.string,\n    proof: t.string\n});\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWalletTransferV4 = exports.createWalletTransferV3 = exports.createWalletTransferV2 = exports.createWalletTransferV1 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst ton_crypto_1 = require(\"ton-crypto\");\nfunction createWalletTransferV1(args) {\n    // Create message\n    let signingMessage = (0, ton_core_1.beginCell)()\n        .storeUint(args.seqno, 32);\n    if (args.message) {\n        signingMessage.storeUint(args.sendMode, 8);\n        signingMessage.storeRef((0, ton_core_1.beginCell)().store((0, ton_core_1.storeMessageRelaxed)(args.message)));\n    }\n    // Sign message\n    let signature = (0, ton_crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);\n    // Body\n    const body = (0, ton_core_1.beginCell)()\n        .storeBuffer(signature)\n        .storeBuilder(signingMessage)\n        .endCell();\n    return body;\n}\nexports.createWalletTransferV1 = createWalletTransferV1;\nfunction createWalletTransferV2(args) {\n    // Check number of messages\n    if (args.messages.length > 4) {\n        throw Error(\"Maximum number of messages in a single transfer is 4\");\n    }\n    // Create message\n    let signingMessage = (0, ton_core_1.beginCell)()\n        .storeUint(args.seqno, 32);\n    if (args.seqno === 0) {\n        for (let i = 0; i < 32; i++) {\n            signingMessage.storeBit(1);\n        }\n    }\n    else {\n        signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds\n    }\n    for (let m of args.messages) {\n        signingMessage.storeUint(args.sendMode, 8);\n        signingMessage.storeRef((0, ton_core_1.beginCell)().store((0, ton_core_1.storeMessageRelaxed)(m)));\n    }\n    // Sign message\n    let signature = (0, ton_crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);\n    // Body\n    const body = (0, ton_core_1.beginCell)()\n        .storeBuffer(signature)\n        .storeBuilder(signingMessage)\n        .endCell();\n    return body;\n}\nexports.createWalletTransferV2 = createWalletTransferV2;\nfunction createWalletTransferV3(args) {\n    // Check number of messages\n    if (args.messages.length > 4) {\n        throw Error(\"Maximum number of messages in a single transfer is 4\");\n    }\n    // Create message to sign\n    let signingMessage = (0, ton_core_1.beginCell)()\n        .storeUint(args.walletId, 32);\n    if (args.seqno === 0) {\n        for (let i = 0; i < 32; i++) {\n            signingMessage.storeBit(1);\n        }\n    }\n    else {\n        signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds\n    }\n    signingMessage.storeUint(args.seqno, 32);\n    for (let m of args.messages) {\n        signingMessage.storeUint(args.sendMode, 8);\n        signingMessage.storeRef((0, ton_core_1.beginCell)().store((0, ton_core_1.storeMessageRelaxed)(m)));\n    }\n    // Sign message\n    let signature = (0, ton_crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);\n    // Body\n    const body = (0, ton_core_1.beginCell)()\n        .storeBuffer(signature)\n        .storeBuilder(signingMessage)\n        .endCell();\n    return body;\n}\nexports.createWalletTransferV3 = createWalletTransferV3;\nfunction createWalletTransferV4(args) {\n    // Check number of messages\n    if (args.messages.length > 4) {\n        throw Error(\"Maximum number of messages in a single transfer is 4\");\n    }\n    let signingMessage = (0, ton_core_1.beginCell)()\n        .storeUint(args.walletId, 32);\n    if (args.seqno === 0) {\n        for (let i = 0; i < 32; i++) {\n            signingMessage.storeBit(1);\n        }\n    }\n    else {\n        signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds\n    }\n    signingMessage.storeUint(args.seqno, 32);\n    signingMessage.storeUint(0, 8); // Simple order\n    for (let m of args.messages) {\n        signingMessage.storeUint(args.sendMode, 8);\n        signingMessage.storeRef((0, ton_core_1.beginCell)().store((0, ton_core_1.storeMessageRelaxed)(m)));\n    }\n    // Sign message\n    let signature = (0, ton_crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);\n    // Body\n    const body = (0, ton_core_1.beginCell)()\n        .storeBuffer(signature)\n        .storeBuilder(signingMessage)\n        .endCell();\n    return body;\n}\nexports.createWalletTransferV4 = createWalletTransferV4;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV1R1 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV1R1 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEARAAAhP8AIN2k8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVEH98Ik=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV1R1(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            return ton_core_1.Cell.fromBoc(state.state.data)[0].beginParse().loadUint(32);\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATELY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV1)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            message: args.message\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    message: (0, ton_core_1.internal)({\n                        to: args.to,\n                        value: args.value,\n                        init: args.init,\n                        body: args.body,\n                        bounce: args.bounce\n                    })\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV1R1 = WalletContractV1R1;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV1R2 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV1R2 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAUwAAov8AIN0gggFMl7qXMO1E0NcLH+Ck8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVNDieG8=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV1R2(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATELY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV1)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            message: args.message\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    message: (0, ton_core_1.internal)({\n                        to: args.to,\n                        value: args.value,\n                        init: args.init,\n                        body: args.body,\n                        bounce: args.bounce\n                    })\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV1R2 = WalletContractV1R2;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV1R3 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV1R3 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAXwAAuv8AIN0gggFMl7ohggEznLqxnHGw7UTQ0x/XC//jBOCk8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVLW4bkI=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV1R3(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(executor, message) {\n        await executor.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATELY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV1)({\n            seqno: args.seqno,\n            sendMode: sendMode,\n            secretKey: args.secretKey,\n            message: args.message\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    message: (0, ton_core_1.internal)({\n                        to: args.to,\n                        value: args.value,\n                        init: args.init,\n                        body: args.body,\n                        bounce: args.bounce\n                    })\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV1R3 = WalletContractV1R3;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV2R1 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV2R1 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAVwAAqv8AIN0gggFMl7qXMO1E0NcLH+Ck8mCDCNcYINMf0x8B+CO78mPtRNDTH9P/0VExuvKhA/kBVBBC+RDyovgAApMg10qW0wfUAvsA6NGkyMsfy//J7VShNwu2', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV2R1(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATELY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV2)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV2R1 = WalletContractV2R1;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV2R2 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV2R2 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAYwAAwv8AIN0gggFMl7ohggEznLqxnHGw7UTQ0x/XC//jBOCk8mCDCNcYINMf0x8B+CO78mPtRNDTH9P/0VExuvKhA/kBVBBC+RDyovgAApMg10qW0wfUAvsA6NGkyMsfy//J7VQETNeh', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV2R2(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATELY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV2)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV2R2 = WalletContractV2R2;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV3R1 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV3R1 {\n    constructor(workchain, publicKey, walletId) {\n        // Resolve parameters\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        if (walletId !== null && walletId !== undefined) {\n            this.walletId = walletId;\n        }\n        else {\n            this.walletId = 698983191 + workchain;\n        }\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAYgAAwP8AIN0gggFMl7qXMO1E0NcLH+Ck8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVD++buA=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeUint(this.walletId, 32)\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV3R1(args.workchain, args.publicKey, args.walletId);\n    }\n    /**\n     * Get wallet balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATELY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV3)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout,\n            walletId: this.walletId\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV3R1 = WalletContractV3R1;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV3R2 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV3R2 {\n    constructor(workchain, publicKey, walletId) {\n        // Resolve parameters\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        if (walletId !== null && walletId !== undefined) {\n            this.walletId = walletId;\n        }\n        else {\n            this.walletId = 698983191 + workchain;\n        }\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAcQAA3v8AIN0gggFMl7ohggEznLqxn3Gw7UTQ0x/THzHXC//jBOCk8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVBC9ba0=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeUint(this.walletId, 32)\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV3R2(args.workchain, args.publicKey, args.walletId);\n    }\n    /**\n     * Get wallet balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATELY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV3)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout,\n            walletId: this.walletId\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV3R2 = WalletContractV3R2;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV4 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV4 {\n    constructor(workchain, publicKey, walletId) {\n        // Resolve parameters\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        if (walletId !== null && walletId !== undefined) {\n            this.walletId = walletId;\n        }\n        else {\n            this.walletId = 698983191 + workchain;\n        }\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6ccgECFAEAAtQAART/APSkE/S88sgLAQIBIAIDAgFIBAUE+PKDCNcYINMf0x/THwL4I7vyZO1E0NMf0x/T//QE0VFDuvKhUVG68qIF+QFUEGT5EPKj+AAkpMjLH1JAyx9SMMv/UhD0AMntVPgPAdMHIcAAn2xRkyDXSpbTB9QC+wDoMOAhwAHjACHAAuMAAcADkTDjDQOkyMsfEssfy/8QERITAubQAdDTAyFxsJJfBOAi10nBIJJfBOAC0x8hghBwbHVnvSKCEGRzdHK9sJJfBeAD+kAwIPpEAcjKB8v/ydDtRNCBAUDXIfQEMFyBAQj0Cm+hMbOSXwfgBdM/yCWCEHBsdWe6kjgw4w0DghBkc3RyupJfBuMNBgcCASAICQB4AfoA9AQw+CdvIjBQCqEhvvLgUIIQcGx1Z4MesXCAGFAEywUmzxZY+gIZ9ADLaRfLH1Jgyz8gyYBA+wAGAIpQBIEBCPRZMO1E0IEBQNcgyAHPFvQAye1UAXKwjiOCEGRzdHKDHrFwgBhQBcsFUAPPFiP6AhPLassfyz/JgED7AJJfA+ICASAKCwBZvSQrb2omhAgKBrkPoCGEcNQICEekk30pkQzmkD6f+YN4EoAbeBAUiYcVnzGEAgFYDA0AEbjJftRNDXCx+AA9sp37UTQgQFA1yH0BDACyMoHy//J0AGBAQj0Cm+hMYAIBIA4PABmtznaiaEAga5Drhf/AABmvHfaiaEAQa5DrhY/AAG7SB/oA1NQi+QAFyMoHFcv/ydB3dIAYyMsFywIizxZQBfoCFMtrEszMyXP7AMhAFIEBCPRR8qcCAHCBAQjXGPoA0z/IVCBHgQEI9FHyp4IQbm90ZXB0gBjIywXLAlAGzxZQBPoCFMtqEssfyz/Jc/sAAgBsgQEI1xj6ANM/MFIkgQEI9Fnyp4IQZHN0cnB0gBjIywXLAlAFzxZQA/oCE8tqyx8Syz/Jc/sAAAr0AMntVA==', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeUint(this.walletId, 32)\n            .storeBuffer(this.publicKey)\n            .storeBit(0) // Empty plugins dict\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV4(args.workchain, args.publicKey, args.walletId);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATELY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV4)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout,\n            walletId: this.walletId\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV4 = WalletContractV4;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JettonMaster = void 0;\nconst ton_core_1 = require(\"ton-core\");\nclass JettonMaster {\n    constructor(address) {\n        this.address = address;\n    }\n    static create(address) {\n        return new JettonMaster(address);\n    }\n    async getWalletAddress(provider, owner) {\n        let res = await provider.get('get_wallet_address', [{ type: 'slice', cell: (0, ton_core_1.beginCell)().storeAddress(owner).endCell() }]);\n        return res.stack.readAddress();\n    }\n    async getJettonData(provider) {\n        let res = await provider.get('get_jetton_data', []);\n        let totalSupply = res.stack.readBigNumber();\n        let mintable = res.stack.readBoolean();\n        let adminAddress = res.stack.readAddress();\n        let content = res.stack.readCell();\n        let walletCode = res.stack.readCell();\n        return {\n            totalSupply,\n            mintable,\n            adminAddress,\n            content,\n            walletCode\n        };\n    }\n}\nexports.JettonMaster = JettonMaster;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JettonWallet = void 0;\nclass JettonWallet {\n    constructor(address) {\n        this.address = address;\n    }\n    static create(address) {\n        return new JettonWallet(address);\n    }\n    async getBalance(provider) {\n        let state = await provider.getState();\n        if (state.state.type !== 'active') {\n            return 0n;\n        }\n        let res = await provider.get('get_wallet_data', []);\n        return res.stack.readBigNumber();\n    }\n}\nexports.JettonWallet = JettonWallet;\n", "\"use strict\";\n/* Made by @Gusarich and @Miandic */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultisigOrder = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst ton_core_1 = require(\"ton-core\");\nclass MultisigOrder {\n    constructor(payload) {\n        this.signatures = {};\n        this.payload = payload;\n    }\n    static fromCell(cell) {\n        let s = cell.beginParse();\n        let signatures = s.loadMaybeRef()?.beginParse();\n        const messagesCell = s.asCell();\n        let order = new MultisigOrder(messagesCell);\n        if (signatures) {\n            while (signatures.remainingBits > 0) {\n                const signature = signatures.loadBuffer(64);\n                const ownerId = signatures.loadUint(8);\n                order.signatures[ownerId] = signature;\n                if (signatures.remainingRefs > 0) {\n                    signatures = signatures.loadRef().asSlice();\n                }\n                else {\n                    signatures.skip(1);\n                }\n            }\n            signatures.endParse();\n        }\n        return order;\n    }\n    static fromPayload(payload) {\n        return new MultisigOrder(payload);\n    }\n    addSignature(ownerId, signature, multisig) {\n        const signingHash = this.payload.hash();\n        if (!(0, ton_crypto_1.signVerify)(signingHash, signature, multisig.owners.get(ownerId).slice(0, -1))) {\n            throw Error('invalid signature');\n        }\n        this.signatures[ownerId] = signature;\n    }\n    sign(ownerId, secretKey) {\n        const signingHash = this.payload.hash();\n        this.signatures[ownerId] = (0, ton_crypto_1.sign)(signingHash, secretKey);\n        return signingHash;\n    }\n    unionSignatures(other) {\n        this.signatures = Object.assign({}, this.signatures, other.signatures);\n    }\n    clearSignatures() {\n        this.signatures = {};\n    }\n    toCell(ownerId) {\n        let b = (0, ton_core_1.beginCell)().storeBit(0);\n        for (const ownerId in this.signatures) {\n            const signature = this.signatures[ownerId];\n            b = (0, ton_core_1.beginCell)()\n                .storeBit(1)\n                .storeRef((0, ton_core_1.beginCell)()\n                .storeBuffer(signature)\n                .storeUint(parseInt(ownerId), 8)\n                .storeBuilder(b)\n                .endCell());\n        }\n        return (0, ton_core_1.beginCell)()\n            .storeUint(ownerId, 8)\n            .storeBuilder(b)\n            .storeBuilder(this.payload.asBuilder())\n            .endCell();\n    }\n}\nexports.MultisigOrder = MultisigOrder;\n", "\"use strict\";\n/* Made by @Gusarich and @Miandic */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultisigOrderBuilder = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst MultisigOrder_1 = require(\"./MultisigOrder\");\nclass MultisigOrderBuilder {\n    constructor(walletId, offset) {\n        this.messages = (0, ton_core_1.beginCell)();\n        this.queryId = 0n;\n        this.walletId = walletId;\n        this.queryOffset = offset || 7200;\n    }\n    addMessage(message, mode) {\n        if (this.messages.refs >= 4) {\n            throw Error('only 4 refs are allowed');\n        }\n        this.updateQueryId();\n        this.messages.storeUint(mode, 8);\n        this.messages.storeRef((0, ton_core_1.beginCell)().store((0, ton_core_1.storeMessageRelaxed)(message)).endCell());\n    }\n    clearMessages() {\n        this.messages = (0, ton_core_1.beginCell)();\n    }\n    build() {\n        return MultisigOrder_1.MultisigOrder.fromPayload((0, ton_core_1.beginCell)()\n            .storeUint(this.walletId, 32)\n            .storeUint(this.queryId, 64)\n            .storeBuilder(this.messages)\n            .endCell());\n    }\n    updateQueryId() {\n        const time = BigInt(Math.floor(Date.now() / 1000 + this.queryOffset));\n        this.queryId = time << 32n;\n    }\n}\nexports.MultisigOrderBuilder = MultisigOrderBuilder;\n", "\"use strict\";\n/* Made by @Gusarich and @Miandic */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultisigWallet = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst ton_core_1 = require(\"ton-core\");\nconst MULTISIG_CODE = ton_core_1.Cell.fromBase64('te6ccgECKwEABBgAART/APSkE/S88sgLAQIBIAIDAgFIBAUE2vIgxwCOgzDbPOCDCNcYIPkBAdMH2zwiwAAToVNxePQOb6Hyn9s8VBq6+RDyoAb0BCD5AQHTH1EYuvKq0z9wUwHwCgHCCAGDCryx8mhTFYBA9A5voSCYDqQgwgryZw7f+COqH1NAufJhVCOjU04gIyEiAgLMBgcCASAMDQIBIAgJAgFmCgsAA9GEAiPymAvHoHN9CYbZ5S7Z4BPHohwhJQAtAKkItdJEqCTItdKlwLUAdAT8ArobBKAATwhbpEx4CBukTDgAdAg10rDAJrUAvALyFjPFszJ4HHXI8gBzxb0AMmACASAODwIBIBQVARW77ZbVA0cFUg2zyCoCAUgQEQIBIBITAXOxHXQgwjXGCD5AQHTB4IB1MTtQ9hTIHj0Dm+h8p/XC/9eMfkQ8qCuAfQEIW6TW3Ey4PkBWNs8AaQBgJwA9rtqA6ADoAPoCAXoCEfyAgPyA3XlP+AXkegAA54tkwAAXrhlXP8EA1WZ2oexAAgEgFhcCASAYGQFRtyVbZ4YmRmpGEAgegc30McJNhFpAADMaYeYuAFrgJhwLb+4cC3d0bhAjAYm1WZtnhqvgb+2xxsoicAgej430pBHEoFpAADHDhBACGuQkuuBk9kUWE5kAOeLKhACQCB6IYFImHFImHFImXEA2YlzNijAjAgEgGhsAF7UGtc4QQDVZnah7EAIBIBwdAgOZOB4fARGsGm2eL4G2CUAjABWt+UEAzJV2oewYQAENqTbPBVfBYCMAFa3f3CCAarM7UPYgAiDbPALyZfgAUENxQxPbPO1UIyoACtP/0wcwBKDbPC+uUyCw8mISsQKkJbNTHLmwJYEA4aojoCi8sPJpggGGoPgBBZcCERACPj4wjo0REB/bPEDXePRDEL0F4lQWW1Rz51YQU9zbPFRxClR6vCQlKCYAIO1E0NMf0wfTB9M/9AT0BNEAXgGOGjDSAAHyo9MH0wdQA9cBIPkBBfkBFbrypFAD4GwhIddKqgIi10m68qtwVCATAAwByMv/ywcE1ts87VT4D3AlblOJvrGYEG4QLVDHXwePGzBUJANQTds8UFWgRlAQSRA6SwlTuds8UFQWf+L4AAeDJaGOLCaAQPSWb6UglDBTA7neII4WODk5CNIAAZfTBzAW8AcFkTDifwgHBZJsMeKz5jAGKicoKQBgcI4pA9CDCNcY0wf0BDBTFnj0Dm+h8qXXC/9URUT5EPKmrlIgsVIDvRShI27mbCIyAH5SML6OIF8D+ACTItdKmALTB9QC+wAC6DJwyMoAQBSAQPRDAvAHjhdxyMsAFMsHEssHWM8BWM8WQBOAQPRDAeIBII6KEEUQNEMA2zztVJJfBuIqABzIyx/LB8sHyz/0APQAyQ==');\nclass MultisigWallet {\n    constructor(publicKeys, workchain, walletId, k, opts) {\n        this.provider = null;\n        this.owners = ton_core_1.Dictionary.empty();\n        this.workchain = workchain;\n        this.walletId = walletId;\n        this.k = k;\n        for (let i = 0; i < publicKeys.length; i += 1) {\n            this.owners.set(i, Buffer.concat([publicKeys[i], Buffer.alloc(1)]));\n        }\n        this.init = {\n            code: MULTISIG_CODE,\n            data: (0, ton_core_1.beginCell)()\n                .storeUint(this.walletId, 32)\n                .storeUint(this.owners.size, 8)\n                .storeUint(this.k, 8)\n                .storeUint(0, 64)\n                .storeDict(this.owners, ton_core_1.Dictionary.Keys.Uint(8), ton_core_1.Dictionary.Values.Buffer(33))\n                .storeBit(0)\n                .endCell(),\n        };\n        this.address = opts?.address || (0, ton_core_1.contractAddress)(workchain, this.init);\n        if (opts?.provider) {\n            this.provider = opts.provider;\n        }\n        else if (opts?.client) {\n            this.provider = opts.client.provider(this.address, {\n                code: this.init.code,\n                data: this.init.data,\n            });\n        }\n    }\n    static async fromAddress(address, opts) {\n        let provider;\n        if (opts.provider) {\n            provider = opts.provider;\n        }\n        else {\n            if (!opts.client) {\n                throw Error('Either provider or client must be specified');\n            }\n            provider = opts.client.provider(address, {\n                code: null,\n                data: null,\n            });\n        }\n        const contractState = (await provider.getState()).state;\n        if (contractState.type !== 'active') {\n            throw Error('Contract must be active');\n        }\n        const data = ton_core_1.Cell.fromBoc(contractState.data)[0].beginParse();\n        const walletId = data.loadUint(32);\n        data.skip(8);\n        const k = data.loadUint(8);\n        data.skip(64);\n        const owners = data.loadDict(ton_core_1.Dictionary.Keys.Uint(8), ton_core_1.Dictionary.Values.Buffer(33));\n        let publicKeys = [];\n        for (const [key, value] of owners) {\n            const publicKey = value.subarray(0, 32);\n            publicKeys.push(publicKey);\n        }\n        return new MultisigWallet(publicKeys, address.workChain, walletId, k, {\n            address,\n            provider,\n            client: opts.client,\n        });\n    }\n    async deployExternal(provider) {\n        if (!provider && !this.provider) {\n            throw Error('you must specify provider if there is no such property in MultisigWallet instance');\n        }\n        if (!provider) {\n            provider = this.provider;\n        }\n        await provider.external(ton_core_1.Cell.EMPTY);\n    }\n    async deployInternal(sender, value = 1000000000n) {\n        await sender.send({\n            sendMode: 3,\n            to: this.address,\n            value: value,\n            init: this.init,\n            body: ton_core_1.Cell.EMPTY,\n            bounce: true,\n        });\n    }\n    async sendOrder(order, secretKey, provider) {\n        if (!provider && !this.provider) {\n            throw Error('you must specify provider if there is no such property in MultisigWallet instance');\n        }\n        if (!provider) {\n            provider = this.provider;\n        }\n        let publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n        let ownerId = this.getOwnerIdByPubkey(publicKey);\n        let cell = order.toCell(ownerId);\n        let signature = (0, ton_crypto_1.sign)(cell.hash(), secretKey);\n        cell = (0, ton_core_1.beginCell)()\n            .storeBuffer(signature)\n            .storeSlice(cell.asSlice())\n            .endCell();\n        await provider.external(cell);\n    }\n    getOwnerIdByPubkey(publicKey) {\n        for (const [key, value] of this.owners) {\n            if (value.subarray(0, 32).equals(publicKey)) {\n                return key;\n            }\n        }\n        throw Error('public key is not an owner');\n    }\n}\nexports.MultisigWallet = MultisigWallet;\n", "\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultisigWallet = exports.MultisigOrderBuilder = exports.MultisigOrder = exports.JettonWallet = exports.JettonMaster = exports.WalletContractV4 = exports.WalletContractV3R2 = exports.WalletContractV3R1 = exports.WalletContractV2R2 = exports.WalletContractV2R1 = exports.WalletContractV1R3 = exports.WalletContractV1R2 = exports.WalletContractV1R1 = exports.TonClient4 = exports.TonClient = exports.HttpApi = void 0;\n__exportStar(require(\"ton-core\"), exports);\n//\n// toncenter Client\n//\nvar HttpApi_1 = require(\"./client/api/HttpApi\");\nObject.defineProperty(exports, \"HttpApi\", { enumerable: true, get: function () { return HttpApi_1.HttpApi; } });\nvar TonClient_1 = require(\"./client/TonClient\");\nObject.defineProperty(exports, \"TonClient\", { enumerable: true, get: function () { return TonClient_1.TonClient; } });\n//\n// API V4 Client\n//\nvar TonClient4_1 = require(\"./client/TonClient4\");\nObject.defineProperty(exports, \"TonClient4\", { enumerable: true, get: function () { return TonClient4_1.TonClient4; } });\n//\n// Wallets\n//\nvar WalletContractV1R1_1 = require(\"./wallets/WalletContractV1R1\");\nObject.defineProperty(exports, \"WalletContractV1R1\", { enumerable: true, get: function () { return WalletContractV1R1_1.WalletContractV1R1; } });\nvar WalletContractV1R2_1 = require(\"./wallets/WalletContractV1R2\");\nObject.defineProperty(exports, \"WalletContractV1R2\", { enumerable: true, get: function () { return WalletContractV1R2_1.WalletContractV1R2; } });\nvar WalletContractV1R3_1 = require(\"./wallets/WalletContractV1R3\");\nObject.defineProperty(exports, \"WalletContractV1R3\", { enumerable: true, get: function () { return WalletContractV1R3_1.WalletContractV1R3; } });\nvar WalletContractV2R1_1 = require(\"./wallets/WalletContractV2R1\");\nObject.defineProperty(exports, \"WalletContractV2R1\", { enumerable: true, get: function () { return WalletContractV2R1_1.WalletContractV2R1; } });\nvar WalletContractV2R2_1 = require(\"./wallets/WalletContractV2R2\");\nObject.defineProperty(exports, \"WalletContractV2R2\", { enumerable: true, get: function () { return WalletContractV2R2_1.WalletContractV2R2; } });\nvar WalletContractV3R1_1 = require(\"./wallets/WalletContractV3R1\");\nObject.defineProperty(exports, \"WalletContractV3R1\", { enumerable: true, get: function () { return WalletContractV3R1_1.WalletContractV3R1; } });\nvar WalletContractV3R2_1 = require(\"./wallets/WalletContractV3R2\");\nObject.defineProperty(exports, \"WalletContractV3R2\", { enumerable: true, get: function () { return WalletContractV3R2_1.WalletContractV3R2; } });\nvar WalletContractV4_1 = require(\"./wallets/WalletContractV4\");\nObject.defineProperty(exports, \"WalletContractV4\", { enumerable: true, get: function () { return WalletContractV4_1.WalletContractV4; } });\n//\n// Jettons\n//\nvar JettonMaster_1 = require(\"./jetton/JettonMaster\");\nObject.defineProperty(exports, \"JettonMaster\", { enumerable: true, get: function () { return JettonMaster_1.JettonMaster; } });\nvar JettonWallet_1 = require(\"./jetton/JettonWallet\");\nObject.defineProperty(exports, \"JettonWallet\", { enumerable: true, get: function () { return JettonWallet_1.JettonWallet; } });\n//\n// Multisig\n//\nvar MultisigOrder_1 = require(\"./multisig/MultisigOrder\");\nObject.defineProperty(exports, \"MultisigOrder\", { enumerable: true, get: function () { return MultisigOrder_1.MultisigOrder; } });\nvar MultisigOrderBuilder_1 = require(\"./multisig/MultisigOrderBuilder\");\nObject.defineProperty(exports, \"MultisigOrderBuilder\", { enumerable: true, get: function () { return MultisigOrderBuilder_1.MultisigOrderBuilder; } });\nvar MultisigWallet_1 = require(\"./multisig/MultisigWallet\");\nObject.defineProperty(exports, \"MultisigWallet\", { enumerable: true, get: function () { return MultisigWallet_1.MultisigWallet; } });\n"],
  "mappings": "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,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,SAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,SAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,SAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,SAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,UAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA,GAAK,SAAA,GACvB,IAAIiI,EAAOjI,EAAO,EAAA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AAO;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAChyC;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAO;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAC1jC;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAW;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAY;AAAA,MAAW;AAAA,MAAY;AAAA,MAAW;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAY;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MACnuD;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAY;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAY;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAY;AAAA,MAAW;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAY;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAC/ijrtjB;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAO;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAC9hB;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MACxK;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MACxK;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAC1qB;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MACj+B;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MACtvfjvC;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAY;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACtE;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAY;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAU;AAAA,MACjjylkC;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MACzU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA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;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxD;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,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",
  "names": ["alphabet", "size", "v", "CellType", "left", "right", "size", "size", "left", "right", "type", "Dictionary", "size", "size", "type", "size", "type", "size", "type", "size", "type", "type", "size", "type", "type", "b64Tab", "uint8array2packed", "arr", "existingPacked", "existingPackedLen", "bigEndianMod", "i", "intOffset", "byteOffset", "packed", "existingByteLen", "shiftModifier", "length", "push", "value", "binLen", "getStrConverter", "format", "utfType", "Error", "str", "existingBin", "existingBinLen", "num", "parseInt", "substr", "isNaN", "codePnt", "codePntArr", "j", "transposeBytes", "byteCnt", "charCodeAt", "tmpInt", "strPart", "firstEqual", "indexOf", "search", "replace", "charAt", "ArrayBuffer", "ignore", "Uint8Array", "getOutputConverter", "outputBinLen", "outputOptions", "binarray", "outputLength", "formatOpts", "srcByte", "toUpperCase", "triplet", "int1", "int2", "String", "fromCharCode", "retVal", "arrView", "K_sha2", "H_trunc", "H_full", "sha_variant_error", "packedLEConcat", "a", "b", "arrOffset", "aByteLen", "bByteLen", "leftShiftAmount", "rightShiftAmount", "pop", "concat", "getOutputOpts", "options", "outputUpper", "b64Pad", "outputLen", "lenErrstr", "parseInputOption", "key", "fallback", "errStr", "n", "variant", "inputFormat", "inputOptions", "this", "numRounds", "shaVariant", "remainder", "remainderLen", "updateCalled", "processedLen", "macKeySet", "keyWithIPad", "keyWithOPad", "jsSHABase", "srcString", "updateProcessedLen", "variantBlockIntInc", "variantBlockSize", "convertRet", "converterFunc", "chunkBinLen", "chunk", "chunkIntLen", "intermediateState", "roundFunc", "slice", "finalizedState", "isVariableLen", "formatFunc", "getMAC", "finalizeFunc", "stateCloneFunc", "newStateFunc", "HMACSupported", "keyConverterFunc", "_setHMACKey", "blockByteSize", "lastArrayIndex", "_getHMAC", "firstHash", "extendStatics", "d", "Object", "setPrototypeOf", "__proto__", "Array", "p", "prototype", "hasOwnProperty", "call", "__extends", "__", "constructor", "create", "rotl_32", "x", "rotr_32", "shr_32", "parity_32", "y", "z", "ch_32", "maj_32", "sigma0_32", "safeAdd_32_2", "lsw", "safeAdd_32_4", "c", "safeAdd_32_5", "e", "gamma0_32", "sigma1_32", "getNewState", "_variant", "roundSHA1", "block", "H", "T", "t", "W", "finalizeSHA1", "remainderBinLen", "processedBinLen", "offset", "totalLen", "r", "o", "resolvedOptions", "_this", "_super", "state", "getNewState256", "roundSHA256", "f", "g", "h", "T1", "T2", "msint_32", "lsint_32", "highOrder", "lowOrder", "rotl_64", "tmp", "Int_64", "rotr_64", "shr_64", "ch_64", "maj_64", "sigma0_64", "rotr28", "rotr34", "rotr39", "safeAdd_64_2", "msw", "safeAdd_64_4", "safeAdd_64_5", "xor_64_2", "gamma0_64", "rotr1", "rotr8", "shr7", "sigma1_64", "rotr14", "rotr18", "rotr41", "K_sha512", "getNewState512", "roundSHA512", "rotr19", "rotr61", "shr6", "rc_sha3", "r_sha3", "cloneSHA3State", "clone", "roundSHA3", "round", "B", "C", "D", "left_encode", "byte", "numEncodedBytes", "x_64", "encode_string", "input", "byte_pad", "outputByteLen", "encodedLen", "outputIntLen", "intsToAppend", "delimiter", "_initializeKMAC", "_getKMAC", "_initializeCSHAKE", "_processedBinLen", "blockSize", "temp", "state_offset", "binaryStringInc", "remainderIntLen", "jsSHA", "funcNameOverride", "funcName", "customization", "packedParams", "byte_pad_out", "kmacKey", "concatedRemainder", "shaObj", "jsSHA1", "jsSHA256", "jsSHA512", "jsSHA3", "update", "getHash", "setHMACKey", "getHMAC", "size", "require_sha256", "require_sha512", "require_pbkdf2_sha512", "require_hmac_sha512", "require_getSecureRandom", "size", "min", "max", "range", "size", "size", "require_wordlist", "type", "size", "type", "init", "head", "tail", "size", "src", "dest", "createdLt", "createdAt", "src", "dest", "createdLt", "createdAt", "init", "needRef", "init", "needRef", "SendMode", "success", "success", "type", "init", "require_dist", "exports", "first", "first", "flap", "left", "right", "Functor", "URI", "ap", "apFirst", "apS", "apSecond", "bind", "bindTo", "chainFirst", "chainOptionK", "filterOrElse", "flap", "fromOption", "fromOptionK", "fromPredicate", "getApplySemigroup", "isLeft", "isRight", "left", "let_", "map", "right", "ma", "alt", "_map", "empty", "compact", "separate", "filter", "partition", "identity", "tuple", "keys", "isLeft", "type", "__spreadArray", "isNonEmpty", "tags", "codec", "k", "right", "d", "b", "left", "Type", "NullType", "UndefinedType", "VoidType", "UnknownType", "StringType", "NumberType", "BigIntType", "BooleanType", "AnyArrayType", "AnyDictionaryType", "LiteralType", "KeyofType", "RefinementType", "RecursiveType", "ArrayType", "InterfaceType", "PartialType", "DictionaryType", "UnionType", "IntersectionType", "TupleType", "ReadonlyType", "ReadonlyArrayType", "ExactType", "FunctionType", "NeverType", "AnyType", "TaggedUnionType", "ObjectType", "StrictType", "getSemigroup", "getMonoid", "identity", "constant", "flow", "tuple", "pipe", "SK", "not", "first", "__spreadArray", "isNone", "isSome", "some", "isLeft", "isRight", "left", "right", "singleton", "isNonEmpty", "head", "tail", "fromReadonlyNonEmptyArray", "ap", "apFirst", "first", "apSecond", "apS", "getApplySemigroup", "keys", "map", "flap", "bindTo", "let_", "getFunctorComposition", "_map", "getApplicativeMonoid", "map", "_ap", "chainFirst", "first", "bind", "tailRec", "fromOption", "fromPredicate", "fromOptionK", "chainOptionK", "fromEitherK", "chainEitherK", "chainFirstEitherK", "filterOrElse", "separated", "left", "right", "_map", "_mapLeft", "_bimap", "map", "mapLeft", "bimap", "wiltDefault", "witherDefault", "filterE", "_map", "_ap", "_chain", "_reduce", "_foldMap", "_reduceRight", "_traverse", "_bimap", "_mapLeft", "_alt", "_extend", "_chainRec", "getShow", "getEq", "getSemigroup", "getCompactable", "empty", "getFilterable", "compact", "separate", "filter", "partition", "getWitherable", "getApplicativeValidation", "getAltValidation", "map", "apW", "chainW", "reduce", "foldMap", "reduceRight", "traverse", "sequence", "bimap", "mapLeft", "altW", "extend", "matchW", "getOrElseW", "swap", "orElseW", "fromNullable", "tryCatch", "tryCatchK", "fromNullableK", "chainNullableK", "toError", "elem", "ma", "exists", "let_", "traverseReadonlyNonEmptyArrayWithIndex", "traverseReadonlyArrayWithIndex", "traverseArray", "_", "parseJSON", "stringifyJSON", "getValidationSemigroup", "getValidationMonoid", "getValidation", "ap", "alt", "first", "getSemigroup", "compare", "min", "max", "constant", "__spreadArray", "isNonEmpty", "_map", "_ap", "_chain", "of", "ap", "chain", "extend", "duplicate", "flatten", "map", "reduce", "foldMap", "reduceRight", "URI", "getShow", "getEq", "Functor", "flap", "Apply", "apFirst", "apSecond", "Chain", "chainFirst", "Do", "bindTo", "let_", "bind", "apS", "head", "tail", "last", "min", "max", "concatAll", "init", "b", "Alt", "Applicative", "Apply", "Chain", "Do", "Foldable", "Functor", "Monad", "Pointed", "Traversable", "URI", "alt", "altW", "ap", "apFirst", "apS", "apSecond", "append", "appendW", "bind", "bindTo", "chain", "chainFirst", "chainWithIndex", "concatAll", "duplicate", "extend", "extract", "flap", "flatten", "fold", "foldMap", "foldMapWithIndex", "fromReadonlyNonEmptyArray", "getEq", "getSemigroup", "getShow", "head", "intercalate", "intersperse", "isNonEmpty", "isOutOfBound", "last", "let_", "map", "mapWithIndex", "max", "min", "of", "prepend", "prependAll", "prependW", "reduce", "reduceRight", "reduceRightWithIndex", "reduceWithIndex", "reverse", "sequence", "tail", "traverse", "union", "first", "y", "bs", "__spreadArray", "_map", "_ap", "_chain", "_extend", "_reduce", "_foldMap", "_reduceRight", "_traverse", "_alt", "init", "a", "first", "as", "isOutOfBound", "elem", "__spreadArray", "isNonEmpty", "append", "matchW", "match", "chainWithIndex", "head", "last", "_map", "_ap", "_chain", "_reduce", "_foldMap", "_reduceRight", "_traverse", "of", "ap", "chain", "flatten", "map", "filter", "extend", "duplicate", "foldMapWithIndex", "reduce", "foldMap", "reduceWithIndex", "reduceRight", "reduceRightWithIndex", "traverse", "sequence", "traverseWithIndex", "URI", "getShow", "getEq", "Functor", "flap", "Pointed", "Apply", "apFirst", "apSecond", "Chain", "chainFirst", "guard", "Traversable", "filterE", "FromEither", "fromEitherK", "empty", "intercalate", "Do", "bindTo", "let_", "bind", "apS", "left", "right", "b", "e", "Alt", "Applicative", "Apply", "Chain", "Compactable", "Do", "Extend", "Foldable", "FoldableWithIndex", "FromEither", "Functor", "FunctorWithIndex", "Monad", "Pointed", "Traversable", "TraversableWithIndex", "URI", "Witherable", "Zero", "alt", "altW", "ap", "apFirst", "apS", "apSecond", "append", "appendW", "array", "bind", "bindTo", "chain", "chainFirst", "chainRecBreadthFirst", "chainRecDepthFirst", "chainWithIndex", "chop", "chunksOf", "compact", "concat", "concatW", "cons", "copy", "duplicate", "elem", "empty", "every", "exists", "extend", "filter", "filterE", "filterMap", "filterMapWithIndex", "filterWithIndex", "findFirst", "findFirstMap", "findIndex", "findLast", "findLastIndex", "findLastMap", "flap", "flatten", "foldMap", "foldMapWithIndex", "fromEither", "fromEitherK", "fromOption", "fromOptionK", "fromPredicate", "getEq", "getMonoid", "getOrd", "getSemigroup", "getShow", "getUnionSemigroup", "guard", "head", "init", "insertAt", "intercalate", "intersection", "intersperse", "isEmpty", "isNonEmpty", "isOutOfBound", "last", "let_", "lookup", "makeBy", "map", "mapWithIndex", "match", "matchLeft", "matchRight", "matchW", "modifyAt", "of", "partition", "partitionMap", "partitionMapWithIndex", "partitionWithIndex", "prepend", "prependAll", "prependToAll", "prependW", "range", "reduce", "reduceRight", "reduceRightWithIndex", "reduceWithIndex", "replicate", "reverse", "rotate", "separate", "sequence", "snoc", "some", "sort", "sortBy", "splitAt", "tail", "traverse", "traverseWithIndex", "union", "uniq", "unsafeInsertAt", "unsafeUpdateAt", "unzip", "updateAt", "zero", "zip", "zipWith", "bs", "input", "first", "second", "ys", "_map", "_mapWithIndex", "_ap", "_chain", "_filter", "_filterMap", "_partition", "_partitionMap", "_alt", "_reduce", "_foldMap", "_reduceRight", "_reduceWithIndex", "_foldMapWithIndex", "_reduceRightWithIndex", "_extend", "_traverse", "_traverseWithIndex", "_chainRecDepthFirst", "_chainRecBreadthFirst", "_wither", "_wilt", "left", "right", "Alt", "Alternative", "ApT", "Applicative", "Apply", "Chain", "Compactable", "Do", "Extend", "Filterable", "Foldable", "FromEither", "Functor", "Monad", "MonadThrow", "Pointed", "Traversable", "URI", "Witherable", "Zero", "alt", "altW", "ap", "apFirst", "apS", "apSecond", "bind", "bindTo", "chain", "chainEitherK", "chainFirst", "chainFirstEitherK", "chainNullableK", "compact", "duplicate", "elem", "exists", "extend", "filter", "filterMap", "flap", "flatten", "fold", "foldMap", "foldW", "fromEither", "fromEitherK", "fromNullable", "fromNullableK", "fromPredicate", "getApplyMonoid", "getApplySemigroup", "getEq", "getMonoid", "getOrElse", "getOrElseW", "getOrd", "getShow", "guard", "isNone", "isSome", "let_", "map", "match", "matchW", "none", "of", "partition", "partitionMap", "reduce", "reduceRight", "separate", "sequence", "sequenceArray", "some", "throwError", "traverse", "traverseArray", "traverseArrayWithIndex", "traverseReadonlyArrayWithIndex", "traverseReadonlyNonEmptyArrayWithIndex", "tryCatch", "tryCatchK", "wilt", "wither", "zero", "ma", "_map", "_ap", "_chain", "_reduce", "_foldMap", "_reduceRight", "_traverse", "_alt", "_filter", "_filterMap", "_extend", "_partition", "_partitionMap", "_wither", "_wilt", "Eq", "empty", "Ord", "first", "Ord", "that", "lookup", "r", "mapWithIndex", "map", "reduceWithIndex", "foldMapWithIndex", "reduceRightWithIndex", "traverseWithIndex", "_traverseWithIndex", "traverse", "_traverse", "sequence", "partitionMapWithIndex", "left", "right", "partitionWithIndex", "filterMapWithIndex", "filterWithIndex", "every", "some", "elem", "fa", "reduce", "b", "foldMap", "reduceRight", "getShow", "getEq", "getMonoid", "first", "isEmpty", "empty", "hasOwnProperty", "size", "has", "singleton", "union", "intersection", "difference", "_map", "_mapWithIndex", "_reduce", "_foldMap", "_reduceRight", "_filter", "_filterMap", "_partition", "_partitionMap", "_reduceWithIndex", "_foldMapWithIndex", "_reduceRightWithIndex", "_partitionMapWithIndex", "_partitionWithIndex", "_filterMapWithIndex", "_filterWithIndex", "filter", "filterMap", "partition", "partitionMap", "compact", "separate", "URI", "Functor", "flap", "Compactable", "Foldable", "FoldableWithIndex", "Traversable", "TraversableWithIndex", "_wither", "_wilt", "Witherable", "key", "Compactable", "Filterable", "FilterableWithIndex", "Foldable", "FoldableWithIndex", "Functor", "FunctorWithIndex", "Traversable", "TraversableWithIndex", "URI", "Witherable", "collect", "compact", "deleteAt", "difference", "elem", "empty", "every", "filter", "filterMap", "filterMapWithIndex", "filterWithIndex", "flap", "foldMap", "foldMapWithIndex", "fromFoldable", "fromFoldableMap", "getDifferenceMagma", "getEq", "getIntersectionSemigroup", "getMonoid", "getShow", "getUnionMonoid", "getUnionSemigroup", "getWitherable", "has", "hasOwnProperty", "insertAt", "intersection", "isEmpty", "isSubrecord", "keys", "lookup", "map", "mapWithIndex", "modifyAt", "partition", "partitionMap", "partitionMapWithIndex", "partitionWithIndex", "record", "reduce", "reduceRight", "reduceRightWithIndex", "reduceWithIndex", "separate", "sequence", "singleton", "size", "some", "traverse", "traverseWithIndex", "union", "updateAt", "upsertAt", "wilt", "wither", "Ord", "keys_", "__assign", "_map", "_mapWithIndex", "_reduce", "_foldMap", "_reduceRight", "_filter", "_filterMap", "_partition", "_partitionMap", "_reduceWithIndex", "_foldMapWithIndex", "_reduceRightWithIndex", "_partitionMapWithIndex", "_partitionWithIndex", "_filterMapWithIndex", "_filterWithIndex", "_traverse", "_sequence", "_traverseWithIndex", "_wither", "_wilt", "first", "key", "alt", "ap", "bimap", "chain", "contramap", "extend", "filter", "filterMap", "filterMapWithIndex", "filterWithIndex", "foldMap", "foldMapWithIndex", "map", "mapLeft", "mapWithIndex", "partition", "partitionMap", "partitionMapWithIndex", "partitionWithIndex", "pipe", "reduce", "reduceRight", "reduceRightWithIndex", "reduceWithIndex", "fromOption", "fromEither", "fromPredicate", "filterOrElse", "init", "type", "errors", "DataLoader", "keys", "process", "bind", "require_utils", "bind", "extend", "match", "process", "type", "keys", "chain", "bind", "require_axios", "init", "last", "tail", "init", "last", "ownerId", "require_dist", "exports"]
}
